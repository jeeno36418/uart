

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 08 19:13:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           ; Version 2.10
    68                           ; Generated 31/07/2019 GMT
    69                           ; 
    70                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F4520 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102                           	psect	idataBANK0
   103  003096                     __pidataBANK0:
   104                           	opt callstack 0
   105                           
   106                           ;initializer for _adc_update_flag
   107  003096  01                 	db	1
   108                           
   109                           	psect	idataBANK1
   110  002F7E                     __pidataBANK1:
   111                           	opt callstack 0
   112                           
   113                           ;initializer for main@F3204
   114  002F7E  49                 	db	73
   115  002F7F  6E                 	db	110
   116  002F80  69                 	db	105
   117  002F81  74                 	db	116
   118  002F82  69                 	db	105
   119  002F83  61                 	db	97
   120  002F84  6C                 	db	108
   121  002F85  69                 	db	105
   122  002F86  7A                 	db	122
   123  002F87  69                 	db	105
   124  002F88  6E                 	db	110
   125  002F89  67                 	db	103
   126  002F8A  2E                 	db	46
   127  002F8B  2E                 	db	46
   128  002F8C  2E                 	db	46
   129  002F8D  20                 	db	32
   130                           
   131                           ;initializer for _timer_ptr
   132  002F8E  BF                 	db	low _sec
   133  002F8F  00                 	db	high _sec
   134  002F90  C1                 	db	low _min
   135  002F91  00                 	db	high _min
   136  002F92  C3                 	db	low _hour
   137  002F93  00                 	db	high _hour
   138  002F94  C9                 	db	low _day
   139  002F95  00                 	db	high _day
   140  002F96  BD                 	db	low _date
   141  002F97  00                 	db	high _date
   142  002F98  BB                 	db	low _month
   143  002F99  00                 	db	high _month
   144  002F9A  B9                 	db	low _year
   145  002F9B  00                 	db	high _year
   146                           
   147                           ;initializer for _lcd_ptr
   148  002F9C  C3                 	db	low _hour
   149  002F9D  00                 	db	high _hour
   150  002F9E  C1                 	db	low _min
   151  002F9F  00                 	db	high _min
   152  002FA0  BF                 	db	low _sec
   153  002FA1  00                 	db	high _sec
   154  002FA2  BD                 	db	low _date
   155  002FA3  00                 	db	high _date
   156  002FA4  BB                 	db	low _month
   157  002FA5  00                 	db	high _month
   158  002FA6  B9                 	db	low _year
   159  002FA7  00                 	db	high _year
   160                           
   161                           ;initializer for _timer_min_max
   162  002FA8  00                 	db	0
   163  002FA9  17                 	db	23
   164  002FAA  00                 	db	0
   165  002FAB  3B                 	db	59
   166  002FAC  00                 	db	0
   167  002FAD  3B                 	db	59
   168  002FAE  01                 	db	1
   169  002FAF  1F                 	db	31
   170  002FB0  01                 	db	1
   171  002FB1  0C                 	db	12
   172  002FB2  00                 	db	0
   173  002FB3  63                 	db	99
   174  0000                     _LATBbits	set	3978
   175  0000                     _SPBRG	set	4015
   176  0000                     _TXSTAbits	set	4012
   177  0000                     _ADCON1	set	4033
   178  0000                     _ADRESL	set	4035
   179  0000                     _ADRESH	set	4036
   180  0000                     _TXREG	set	4013
   181  0000                     _RCREG	set	4014
   182  0000                     _IPR1	set	3999
   183  0000                     _PIE1	set	3997
   184  0000                     _INTCON	set	4082
   185  0000                     _TMR1L	set	4046
   186  0000                     _TMR1H	set	4047
   187  0000                     _T1CON	set	4045
   188  0000                     _SSPBUF	set	4041
   189  0000                     _SSPCON1	set	4038
   190  0000                     _SSPSTAT	set	4039
   191  0000                     _SSPADD	set	4040
   192  0000                     _PORTBbits	set	3969
   193  0000                     _PORTCbits	set	3970
   194  0000                     _PORTC	set	3970
   195  0000                     _PORTD	set	3971
   196  0000                     _TRISA	set	3986
   197  0000                     _TRISB	set	3987
   198  0000                     _TRISE	set	3990
   199  0000                     _TRISD	set	3989
   200  0000                     _TRISC	set	3988
   201  0000                     _ADCON0bits	set	4034
   202  0000                     _ADCON2bits	set	4032
   203  0000                     _ADCON1bits	set	4033
   204  0000                     _PORTB	set	3969
   205  0000                     _TRMT	set	32097
   206  0000                     _RCIE	set	31981
   207  0000                     _ADDEN	set	32091
   208  0000                     _CREN	set	32092
   209  0000                     _RX9	set	32094
   210  0000                     _SPEN	set	32095
   211  0000                     _SYNC	set	32100
   212  0000                     _TX9	set	32102
   213  0000                     _TXEN	set	32101
   214  0000                     _TRISC7	set	31911
   215  0000                     _TRISC6	set	31910
   216  0000                     _TMR1IF	set	31984
   217  0000                     _RBIF	set	32656
   218  0000                     _TXIE	set	31980
   219  0000                     _TXIF	set	31988
   220  0000                     _RCIF	set	31989
   221  0000                     _SSPIF	set	31987
   222  0000                     _ACKEN	set	32300
   223  0000                     _ACKDT	set	32301
   224  0000                     _RCEN	set	32299
   225  0000                     _PEN	set	32298
   226  0000                     _SEN	set	32296
   227  0000                     _RBIE	set	32659
   228  0000                     _SSPIE	set	31979
   229  0000                     _PEIE	set	32662
   230  0000                     _GIE	set	32663
   231  0000                     _TRISC4	set	31908
   232  0000                     _TRISC3	set	31907
   233  0000                     _ADIE	set	31982
   234  0000                     _ADIF	set	31990
   235                           
   236                           	psect	smallconst
   237  000600                     __psmallconst:
   238                           	opt callstack 0
   239  000600  00                 	db	0
   240  000601  54                 	db	84	;'T'
   241  000602  69                 	db	105	;'i'
   242  000603  6D                 	db	109	;'m'
   243  000604  65                 	db	101	;'e'
   244  000605  3A                 	db	58	;':'
   245  000606  25                 	db	37
   246  000607  64                 	db	100	;'d'
   247  000608  25                 	db	37
   248  000609  64                 	db	100	;'d'
   249  00060A  2D                 	db	45
   250  00060B  25                 	db	37
   251  00060C  64                 	db	100	;'d'
   252  00060D  25                 	db	37
   253  00060E  64                 	db	100	;'d'
   254  00060F  2D                 	db	45
   255  000610  25                 	db	37
   256  000611  64                 	db	100	;'d'
   257  000612  25                 	db	37
   258  000613  64                 	db	100	;'d'
   259  000614  20                 	db	32
   260  000615  25                 	db	37
   261  000616  32                 	db	50	;'2'
   262  000617  78                 	db	120	;'x'
   263  000618  00                 	db	0
   264  000619  44                 	db	68	;'D'
   265  00061A  61                 	db	97	;'a'
   266  00061B  74                 	db	116	;'t'
   267  00061C  65                 	db	101	;'e'
   268  00061D  3A                 	db	58	;':'
   269  00061E  25                 	db	37
   270  00061F  64                 	db	100	;'d'
   271  000620  25                 	db	37
   272  000621  64                 	db	100	;'d'
   273  000622  2D                 	db	45
   274  000623  25                 	db	37
   275  000624  64                 	db	100	;'d'
   276  000625  25                 	db	37
   277  000626  64                 	db	100	;'d'
   278  000627  2D                 	db	45
   279  000628  25                 	db	37
   280  000629  64                 	db	100	;'d'
   281  00062A  25                 	db	37
   282  00062B  64                 	db	100	;'d'
   283  00062C  25                 	db	37
   284  00062D  33                 	db	51	;'3'
   285  00062E  64                 	db	100	;'d'
   286  00062F  00                 	db	0
   287  000630  4C                 	db	76	;'L'
   288  000631  45                 	db	69	;'E'
   289  000632  44                 	db	68	;'D'
   290  000633  20                 	db	32
   291  000634  53                 	db	83	;'S'
   292  000635  54                 	db	84	;'T'
   293  000636  41                 	db	65	;'A'
   294  000637  54                 	db	84	;'T'
   295  000638  55                 	db	85	;'U'
   296  000639  53                 	db	83	;'S'
   297  00063A  20                 	db	32
   298  00063B  3A                 	db	58	;':'
   299  00063C  20                 	db	32
   300  00063D  4F                 	db	79	;'O'
   301  00063E  4E                 	db	78	;'N'
   302  00063F  20                 	db	32
   303  000640  00                 	db	0
   304  000641  4C                 	db	76	;'L'
   305  000642  45                 	db	69	;'E'
   306  000643  44                 	db	68	;'D'
   307  000644  20                 	db	32
   308  000645  53                 	db	83	;'S'
   309  000646  54                 	db	84	;'T'
   310  000647  41                 	db	65	;'A'
   311  000648  54                 	db	84	;'T'
   312  000649  55                 	db	85	;'U'
   313  00064A  53                 	db	83	;'S'
   314  00064B  20                 	db	32
   315  00064C  3A                 	db	58	;':'
   316  00064D  20                 	db	32
   317  00064E  4F                 	db	79	;'O'
   318  00064F  46                 	db	70	;'F'
   319  000650  46                 	db	70	;'F'
   320  000651  00                 	db	0
   321  000652                     STR_13:
   322  000652  54                 	db	84	;'T'
   323  000653  65                 	db	101	;'e'
   324  000654  6D                 	db	109	;'m'
   325  000655  70                 	db	112	;'p'
   326  000656  65                 	db	101	;'e'
   327  000657  72                 	db	114	;'r'
   328  000658  61                 	db	97	;'a'
   329  000659  74                 	db	116	;'t'
   330  00065A  75                 	db	117	;'u'
   331  00065B  72                 	db	114	;'r'
   332  00065C  65                 	db	101	;'e'
   333  00065D  20                 	db	32
   334  00065E  25                 	db	37
   335  00065F  64                 	db	100	;'d'
   336  000660  00                 	db	0
   337  000661  50                 	db	80	;'P'
   338  000662  72                 	db	114	;'r'
   339  000663  65                 	db	101	;'e'
   340  000664  73                 	db	115	;'s'
   341  000665  65                 	db	101	;'e'
   342  000666  74                 	db	116	;'t'
   343  000667  20                 	db	32
   344  000668  30                 	db	48	;'0'
   345  000669  3A                 	db	58	;':'
   346  00066A  20                 	db	32
   347  00066B  25                 	db	37
   348  00066C  64                 	db	100	;'d'
   349  00066D  00                 	db	0
   350  00066E  50                 	db	80	;'P'
   351  00066F  72                 	db	114	;'r'
   352  000670  65                 	db	101	;'e'
   353  000671  73                 	db	115	;'s'
   354  000672  65                 	db	101	;'e'
   355  000673  74                 	db	116	;'t'
   356  000674  20                 	db	32
   357  000675  31                 	db	49	;'1'
   358  000676  3A                 	db	58	;':'
   359  000677  20                 	db	32
   360  000678  25                 	db	37
   361  000679  64                 	db	100	;'d'
   362  00067A  00                 	db	0
   363  00067B  50                 	db	80	;'P'
   364  00067C  72                 	db	114	;'r'
   365  00067D  65                 	db	101	;'e'
   366  00067E  73                 	db	115	;'s'
   367  00067F  65                 	db	101	;'e'
   368  000680  74                 	db	116	;'t'
   369  000681  20                 	db	32
   370  000682  32                 	db	50	;'2'
   371  000683  3A                 	db	58	;':'
   372  000684  20                 	db	32
   373  000685  25                 	db	37
   374  000686  64                 	db	100	;'d'
   375  000687  00                 	db	0
   376  000688  50                 	db	80	;'P'
   377  000689  72                 	db	114	;'r'
   378  00068A  65                 	db	101	;'e'
   379  00068B  73                 	db	115	;'s'
   380  00068C  65                 	db	101	;'e'
   381  00068D  74                 	db	116	;'t'
   382  00068E  20                 	db	32
   383  00068F  33                 	db	51	;'3'
   384  000690  3A                 	db	58	;':'
   385  000691  20                 	db	32
   386  000692  25                 	db	37
   387  000693  64                 	db	100	;'d'
   388  000694  00                 	db	0
   389  000695                     STR_9:
   390  000695  54                 	db	84	;'T'
   391  000696  69                 	db	105	;'i'
   392  000697  6D                 	db	109	;'m'
   393  000698  65                 	db	101	;'e'
   394  000699  3A                 	db	58	;':'
   395  00069A  20                 	db	32
   396  00069B  25                 	db	37
   397  00069C  31                 	db	49	;'1'
   398  00069D  30                 	db	48	;'0'
   399  00069E  6C                 	db	108	;'l'
   400  00069F  64                 	db	100	;'d'
   401  0006A0  00                 	db	0
   402  0006A1                     STR_5:
   403  0006A1  53                 	db	83	;'S'
   404  0006A2  74                 	db	116	;'t'
   405  0006A3  65                 	db	101	;'e'
   406  0006A4  70                 	db	112	;'p'
   407  0006A5  3A                 	db	58	;':'
   408  0006A6  20                 	db	32
   409  0006A7  25                 	db	37
   410  0006A8  31                 	db	49	;'1'
   411  0006A9  30                 	db	48	;'0'
   412  0006AA  6C                 	db	108	;'l'
   413  0006AB  64                 	db	100	;'d'
   414  0006AC  00                 	db	0
   415  0006AD  53                 	db	83	;'S'
   416  0006AE  74                 	db	116	;'t'
   417  0006AF  6F                 	db	111	;'o'
   418  0006B0  70                 	db	112	;'p'
   419  0006B1  20                 	db	32
   420  0006B2  6D                 	db	109	;'m'
   421  0006B3  6F                 	db	111	;'o'
   422  0006B4  74                 	db	116	;'t'
   423  0006B5  6F                 	db	111	;'o'
   424  0006B6  72                 	db	114	;'r'
   425  0006B7  00                 	db	0
   426  0006B8                     STR_1:
   427  0006B8  49                 	db	73	;'I'
   428  0006B9  25                 	db	37
   429  0006BA  35                 	db	53	;'5'
   430  0006BB  75                 	db	117	;'u'
   431  0006BC  20                 	db	32
   432  0006BD  41                 	db	65	;'A'
   433  0006BE  25                 	db	37
   434  0006BF  38                 	db	56	;'8'
   435  0006C0  75                 	db	117	;'u'
   436  0006C1  00                 	db	0
   437  0006C2                     STR_2:
   438  0006C2  41                 	db	65	;'A'
   439  0006C3  64                 	db	100	;'d'
   440  0006C4  63                 	db	99	;'c'
   441  0006C5  3A                 	db	58	;':'
   442  0006C6  25                 	db	37
   443  0006C7  31                 	db	49	;'1'
   444  0006C8  32                 	db	50	;'2'
   445  0006C9  78                 	db	120	;'x'
   446  0006CA  00                 	db	0
   447  0006CB                     STR_37:
   448  0006CB  6C                 	db	108	;'l'
   449  0006CC  58                 	db	88	;'X'
   450  0006CD  00                 	db	0
   451  0006CE                     STR_23:
   452  0006CE  6C                 	db	108	;'l'
   453  0006CF  69                 	db	105	;'i'
   454  0006D0  00                 	db	0
   455  0006D1                     STR_28:
   456  0006D1  6C                 	db	108	;'l'
   457  0006D2  75                 	db	117	;'u'
   458  0006D3  00                 	db	0
   459  0006D4                     STR_33:
   460  0006D4  6C                 	db	108	;'l'
   461  0006D5  78                 	db	120	;'x'
   462  0006D6  00                 	db	0
   463  0000                     
   464                           ; #config settings
   465  0006D7  00                 	db	0	; dummy byte at the end
   466  0000                     
   467                           	psect	cinit
   468  002A82                     __pcinit:
   469                           	opt callstack 0
   470  002A82                     start_initialization:
   471                           	opt callstack 0
   472  002A82                     __initialization:
   473                           	opt callstack 0
   474                           
   475                           ; Initialize objects allocated to BANK1 (54 bytes)
   476                           ; load TBLPTR registers with __pidataBANK1
   477  002A82  0E7E               	movlw	low __pidataBANK1
   478  002A84  6EF6               	movwf	tblptrl,c
   479  002A86  0E2F               	movlw	high __pidataBANK1
   480  002A88  6EF7               	movwf	tblptrh,c
   481  002A8A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   482  002A8C  6EF8               	movwf	tblptru,c
   483  002A8E  EE01  F0A5         	lfsr	0,__pdataBANK1
   484  002A92  EE10 F036          	lfsr	1,54
   485  002A96                     copy_data0:
   486  002A96  0009               	tblrd		*+
   487  002A98  CFF5 FFEE          	movff	tablat,postinc0
   488  002A9C  50E5               	movf	postdec1,w,c
   489  002A9E  50E1               	movf	fsr1l,w,c
   490  002AA0  E1FA               	bnz	copy_data0
   491                           
   492                           ; Initialize objects allocated to BANK0 (1 bytes)
   493                           ; load TBLPTR registers with __pidataBANK0
   494  002AA2  0E96               	movlw	low __pidataBANK0
   495  002AA4  6EF6               	movwf	tblptrl,c
   496  002AA6  0E30               	movlw	high __pidataBANK0
   497  002AA8  6EF7               	movwf	tblptrh,c
   498  002AAA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   499  002AAC  6EF8               	movwf	tblptru,c
   500  002AAE  0009               	tblrd		*+	;fetch initializer
   501  002AB0  CFF5 F0EE          	movff	tablat,__pdataBANK0
   502                           
   503                           ; Clear objects allocated to BIGRAM (428 bytes)
   504  002AB4  EE02  F096         	lfsr	0,__pbssBIGRAM
   505  002AB8  EE11 F0AC          	lfsr	1,428
   506  002ABC                     clear_0:
   507  002ABC  6AEE               	clrf	postinc0,c
   508  002ABE  50E5               	movf	postdec1,w,c
   509  002AC0  50E1               	movf	fsr1l,w,c
   510  002AC2  E1FC               	bnz	clear_0
   511  002AC4  50E2               	movf	fsr1h,w,c
   512  002AC6  E1FA               	bnz	clear_0
   513                           
   514                           ; Clear objects allocated to BANK2 (150 bytes)
   515  002AC8  EE02  F000         	lfsr	0,__pbssBANK2
   516  002ACC  0E96               	movlw	150
   517  002ACE                     clear_1:
   518  002ACE  6AEE               	clrf	postinc0,c
   519  002AD0  06E8               	decf	wreg,f,c
   520  002AD2  E1FD               	bnz	clear_1
   521                           
   522                           ; Clear objects allocated to BANK1 (165 bytes)
   523  002AD4  EE01  F000         	lfsr	0,__pbssBANK1
   524  002AD8  0EA5               	movlw	165
   525  002ADA                     clear_2:
   526  002ADA  6AEE               	clrf	postinc0,c
   527  002ADC  06E8               	decf	wreg,f,c
   528  002ADE  E1FD               	bnz	clear_2
   529                           
   530                           ; Clear objects allocated to BANK0 (74 bytes)
   531  002AE0  EE00  F080         	lfsr	0,__pbssBANK0
   532  002AE4  0E4A               	movlw	74
   533  002AE6                     clear_3:
   534  002AE6  6AEE               	clrf	postinc0,c
   535  002AE8  06E8               	decf	wreg,f,c
   536  002AEA  E1FD               	bnz	clear_3
   537                           
   538                           ; Clear objects allocated to COMRAM (7 bytes)
   539  002AEC  EE00  F072         	lfsr	0,__pbssCOMRAM
   540  002AF0  0E07               	movlw	7
   541  002AF2                     clear_4:
   542  002AF2  6AEE               	clrf	postinc0,c
   543  002AF4  06E8               	decf	wreg,f,c
   544  002AF6  E1FD               	bnz	clear_4
   545  002AF8                     end_of_initialization:
   546                           	opt callstack 0
   547  002AF8                     __end_of__initialization:
   548                           	opt callstack 0
   549  002AF8  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   550  002AFA  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   551  002AFC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   552  002AFE  6EF8               	movwf	tblptru,c
   553  002B00  0100               	movlb	0
   554  002B02  EF22  F00C         	goto	_main	;jump to C main() function
   555                           
   556                           	psect	bssCOMRAM
   557  000072                     __pbssCOMRAM:
   558                           	opt callstack 0
   559  000072                     _prec:
   560                           	opt callstack 0
   561  000072                     	ds	2
   562  000074                     _flags:
   563                           	opt callstack 0
   564  000074                     	ds	2
   565  000076                     _inc:
   566                           	opt callstack 0
   567  000076                     	ds	1
   568  000077                     _rx_index:
   569                           	opt callstack 0
   570  000077                     	ds	1
   571  000078                     _transmision_msg:
   572                           	opt callstack 0
   573  000078                     	ds	1
   574                           
   575                           	psect	bssBANK0
   576  000080                     __pbssBANK0:
   577                           	opt callstack 0
   578  000080                     _preset:
   579                           	opt callstack 0
   580  000080                     	ds	16
   581  000090                     _loop_count:
   582                           	opt callstack 0
   583  000090                     	ds	4
   584  000094                     _stepper_count:
   585                           	opt callstack 0
   586  000094                     	ds	4
   587  000098                     _counter:
   588                           	opt callstack 0
   589  000098                     	ds	4
   590  00009C                     _timer_value:
   591                           	opt callstack 0
   592  00009C                     	ds	4
   593  0000A0                     _nout:
   594                           	opt callstack 0
   595  0000A0                     	ds	2
   596  0000A2                     _width:
   597                           	opt callstack 0
   598  0000A2                     	ds	2
   599  0000A4                     _timer:
   600                           	opt callstack 0
   601  0000A4                     	ds	2
   602  0000A6                     _heat_elmnt_result:
   603                           	opt callstack 0
   604  0000A6                     	ds	2
   605  0000A8                     _timer_flag:
   606                           	opt callstack 0
   607  0000A8                     	ds	2
   608  0000AA                     _test_status:
   609                           	opt callstack 0
   610  0000AA                     	ds	1
   611  0000AB                     _update_count:
   612                           	opt callstack 0
   613  0000AB                     	ds	1
   614  0000AC                     _key_nav:
   615                           	opt callstack 0
   616  0000AC                     	ds	1
   617  0000AD                     _flag:
   618                           	opt callstack 0
   619  0000AD                     	ds	1
   620  0000AE                     _run_preset_flag:
   621                           	opt callstack 0
   622  0000AE                     	ds	1
   623  0000AF                     _motor_dir_status:
   624                           	opt callstack 0
   625  0000AF                     	ds	1
   626  0000B0                     _toggle:
   627                           	opt callstack 0
   628  0000B0                     	ds	1
   629  0000B1                     _count:
   630                           	opt callstack 0
   631  0000B1                     	ds	1
   632  0000B2                     _received:
   633                           	opt callstack 0
   634  0000B2                     	ds	1
   635  0000B3                     _time_flag:
   636                           	opt callstack 0
   637  0000B3                     	ds	1
   638  0000B4                     _channel_index:
   639                           	opt callstack 0
   640  0000B4                     	ds	1
   641  0000B5                     _led_serial_blink:
   642                           	opt callstack 0
   643  0000B5                     	ds	1
   644  0000B6                     _i2c_pkt:
   645                           	opt callstack 0
   646  0000B6                     	ds	3
   647  0000B9                     _year:
   648                           	opt callstack 0
   649  0000B9                     	ds	2
   650  0000BB                     _month:
   651                           	opt callstack 0
   652  0000BB                     	ds	2
   653  0000BD                     _date:
   654                           	opt callstack 0
   655  0000BD                     	ds	2
   656  0000BF                     _sec:
   657                           	opt callstack 0
   658  0000BF                     	ds	2
   659  0000C1                     _min:
   660                           	opt callstack 0
   661  0000C1                     	ds	2
   662  0000C3                     _hour:
   663                           	opt callstack 0
   664  0000C3                     	ds	2
   665  0000C5                     _heat_elmnt_flag:
   666                           	opt callstack 0
   667  0000C5                     	ds	2
   668  0000C7                     _heat_elmnt_short:
   669                           	opt callstack 0
   670  0000C7                     	ds	2
   671  0000C9                     _day:
   672                           	opt callstack 0
   673  0000C9                     	ds	1
   674                           
   675                           	psect	dataBANK0
   676  0000EE                     __pdataBANK0:
   677                           	opt callstack 0
   678  0000EE                     _adc_update_flag:
   679                           	opt callstack 0
   680  0000EE                     	ds	1
   681                           
   682                           	psect	bssBANK1
   683  000100                     __pbssBANK1:
   684                           	opt callstack 0
   685  000100                     _adc_value:
   686                           	opt callstack 0
   687  000100                     	ds	26
   688  00011A                     	ds	16
   689  00012A                     	ds	8
   690  000132                     _heat_elmnt_result_time:
   691                           	opt callstack 0
   692  000132                     	ds	8
   693  00013A                     _local_time:
   694                           	opt callstack 0
   695  00013A                     	ds	7
   696  000141                     _end_time:
   697                           	opt callstack 0
   698  000141                     	ds	4
   699  000145                     _start_time:
   700                           	opt callstack 0
   701  000145                     	ds	4
   702  000149                     _i2c_mas_time:
   703                           	opt callstack 0
   704  000149                     	ds	4
   705  00014D                     _desired_pos:
   706                           	opt callstack 0
   707  00014D                     	ds	4
   708  000151                     _counter_mod_value:
   709                           	opt callstack 0
   710  000151                     	ds	4
   711  000155                     _dbuf:
   712                           	opt callstack 0
   713  000155                     	ds	32
   714  000175                     _lcd_msg1:
   715                           	opt callstack 0
   716  000175                     	ds	16
   717  000185                     _lcd_msg:
   718                           	opt callstack 0
   719  000185                     	ds	16
   720  000195                     _reply:
   721                           	opt callstack 0
   722  000195                     	ds	16
   723                           
   724                           	psect	dataBANK1
   725  0001A5                     __pdataBANK1:
   726                           	opt callstack 0
   727  0001A5                     main@F3204:
   728                           	opt callstack 0
   729  0001A5                     	ds	16
   730  0001B5                     _timer_ptr:
   731                           	opt callstack 0
   732  0001B5                     	ds	14
   733  0001C3                     _lcd_ptr:
   734                           	opt callstack 0
   735  0001C3                     	ds	12
   736  0001CF                     _timer_min_max:
   737                           	opt callstack 0
   738  0001CF                     	ds	12
   739                           
   740                           	psect	bssBANK2
   741  000200                     __pbssBANK2:
   742                           	opt callstack 0
   743  000200                     _rx_msg_buf:
   744                           	opt callstack 0
   745  000200                     	ds	100
   746  000264                     _bt_msg:
   747                           	opt callstack 0
   748  000264                     	ds	50
   749                           
   750                           	psect	bssBIGRAM
   751  000296                     __pbssBIGRAM:
   752                           	opt callstack 0
   753  000296                     _heating_elemnt_adc_value:
   754                           	opt callstack 0
   755  000296                     	ds	428
   756                           
   757                           	psect	cstackBANK1
   758  0001DB                     __pcstackBANK1:
   759                           	opt callstack 0
   760  0001DB                     main@lcd_test:
   761                           	opt callstack 0
   762                           
   763                           ; 16 bytes @ 0x0
   764  0001DB                     	ds	16
   765  0001EB                     main@current_time:
   766                           	opt callstack 0
   767                           
   768                           ; 4 bytes @ 0x10
   769  0001EB                     	ds	4
   770  0001EF                     main@i:
   771                           	opt callstack 0
   772                           
   773                           ; 1 bytes @ 0x14
   774  0001EF                     	ds	1
   775                           
   776                           	psect	cstackBANK0
   777  0000CA                     __pcstackBANK0:
   778                           	opt callstack 0
   779  0000CA                     ?_vfprintf:
   780                           	opt callstack 0
   781  0000CA                     vfprintf@fp:
   782                           	opt callstack 0
   783                           
   784                           ; 2 bytes @ 0x0
   785  0000CA                     	ds	2
   786  0000CC                     vfprintf@fmt:
   787                           	opt callstack 0
   788                           
   789                           ; 2 bytes @ 0x2
   790  0000CC                     	ds	2
   791  0000CE                     vfprintf@ap:
   792                           	opt callstack 0
   793                           
   794                           ; 2 bytes @ 0x4
   795  0000CE                     	ds	2
   796  0000D0                     ?_sprintf:
   797                           	opt callstack 0
   798  0000D0                     sprintf@s:
   799                           	opt callstack 0
   800                           
   801                           ; 2 bytes @ 0x6
   802  0000D0                     	ds	2
   803  0000D2                     sprintf@fmt:
   804                           	opt callstack 0
   805                           
   806                           ; 2 bytes @ 0x8
   807  0000D2                     	ds	18
   808  0000E4                     sprintf@ap:
   809                           	opt callstack 0
   810                           
   811                           ; 2 bytes @ 0x1A
   812  0000E4                     	ds	2
   813  0000E6                     sprintf@f:
   814                           	opt callstack 0
   815                           
   816                           ; 6 bytes @ 0x1C
   817  0000E6                     	ds	6
   818  0000EC                     ??_main:
   819                           
   820                           ; 1 bytes @ 0x22
   821  0000EC                     	ds	2
   822                           
   823                           	psect	cstackCOMRAM
   824  000001                     __pcstackCOMRAM:
   825                           	opt callstack 0
   826  000001                     ??_interrupt_isr:
   827  000001                     
   828                           ; 1 bytes @ 0x0
   829  000001                     	ds	6
   830  000007                     ??_lcd_cmnt:
   831  000007                     ??_heat_elmnt_result_update:
   832  000007                     ??_heat_element_device_select:
   833  000007                     ??_heat_element_device_deselect:
   834  000007                     ??_adc_update:
   835  000007                     ??_lcd_data:
   836  000007                     ?_strlen:
   837                           	opt callstack 0
   838  000007                     ?_isupper:
   839                           	opt callstack 0
   840  000007                     ?_isalpha:
   841                           	opt callstack 0
   842  000007                     ?_isdigit:
   843                           	opt callstack 0
   844  000007                     ?_strncmp:
   845                           	opt callstack 0
   846  000007                     ?_isspace:
   847                           	opt callstack 0
   848  000007                     ?_islower:
   849                           	opt callstack 0
   850  000007                     ?___wmul:
   851                           	opt callstack 0
   852  000007                     ?___lmul:
   853                           	opt callstack 0
   854  000007                     ?___xxtofl:
   855                           	opt callstack 0
   856  000007                     ?___aodiv:
   857                           	opt callstack 0
   858  000007                     ?___aomod:
   859                           	opt callstack 0
   860  000007                     ?___lodiv:
   861                           	opt callstack 0
   862  000007                     ?___lomod:
   863                           	opt callstack 0
   864  000007                     ___wmul@multiplier:
   865                           	opt callstack 0
   866  000007                     isalpha@c:
   867                           	opt callstack 0
   868  000007                     isdigit@c:
   869                           	opt callstack 0
   870  000007                     isspace@c:
   871                           	opt callstack 0
   872  000007                     isupper@c:
   873                           	opt callstack 0
   874  000007                     memset@dest:
   875                           	opt callstack 0
   876  000007                     fputc@c:
   877                           	opt callstack 0
   878  000007                     strlen@s:
   879                           	opt callstack 0
   880  000007                     strncmp@_l:
   881                           	opt callstack 0
   882  000007                     islower@c:
   883                           	opt callstack 0
   884  000007                     ___lmul@multiplier:
   885                           	opt callstack 0
   886  000007                     ___xxtofl@val:
   887                           	opt callstack 0
   888  000007                     ___aodiv@dividend:
   889                           	opt callstack 0
   890  000007                     ___aomod@dividend:
   891                           	opt callstack 0
   892  000007                     ___lodiv@dividend:
   893                           	opt callstack 0
   894  000007                     ___lomod@dividend:
   895                           	opt callstack 0
   896                           
   897                           ; 8 bytes @ 0x6
   898  000007                     	ds	1
   899  000008                     adc_update@adc_channel:
   900                           	opt callstack 0
   901  000008                     lcd_cmnt@cmnt:
   902                           	opt callstack 0
   903  000008                     lcd_data@data:
   904                           	opt callstack 0
   905                           
   906                           ; 1 bytes @ 0x7
   907  000008                     	ds	1
   908  000009                     ??_lcd_init:
   909  000009                     ??_isupper:
   910  000009                     ??_isalpha:
   911  000009                     ??_isdigit:
   912  000009                     ??_isspace:
   913  000009                     ??_islower:
   914  000009                     heat_element_device_select@relay_number:
   915                           	opt callstack 0
   916  000009                     heat_element_device_deselect@relay_number:
   917                           	opt callstack 0
   918  000009                     heat_elmnt_result_update@i:
   919                           	opt callstack 0
   920  000009                     uart_lcd_update@data:
   921                           	opt callstack 0
   922  000009                     ___wmul@multiplicand:
   923                           	opt callstack 0
   924  000009                     memset@c:
   925                           	opt callstack 0
   926  000009                     fputc@fp:
   927                           	opt callstack 0
   928  000009                     strlen@a:
   929                           	opt callstack 0
   930  000009                     strncmp@_r:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x8
   934  000009                     	ds	2
   935  00000B                     ??_fputc:
   936  00000B                     ??___xxtofl:
   937  00000B                     uart_lcd_update@len:
   938                           	opt callstack 0
   939  00000B                     ___wmul@product:
   940                           	opt callstack 0
   941  00000B                     memset@n:
   942                           	opt callstack 0
   943  00000B                     strncmp@n:
   944                           	opt callstack 0
   945  00000B                     ___lmul@multiplicand:
   946                           	opt callstack 0
   947                           
   948                           ; 4 bytes @ 0xA
   949  00000B                     	ds	1
   950  00000C                     ??_uart_lcd_update:
   951                           
   952                           ; 1 bytes @ 0xB
   953  00000C                     	ds	1
   954  00000D                     ??_memset:
   955  00000D                     ??_strncmp:
   956  00000D                     ?_toupper:
   957                           	opt callstack 0
   958  00000D                     _isspace$1517:
   959                           	opt callstack 0
   960  00000D                     toupper@c:
   961                           	opt callstack 0
   962                           
   963                           ; 2 bytes @ 0xC
   964  00000D                     	ds	1
   965  00000E                     ?_atoi:
   966                           	opt callstack 0
   967  00000E                     atoi@s:
   968                           	opt callstack 0
   969  00000E                     strncmp@l:
   970                           	opt callstack 0
   971                           
   972                           ; 2 bytes @ 0xD
   973  00000E                     	ds	1
   974  00000F                     ??_toupper:
   975  00000F                     ___xxtofl@sign:
   976                           	opt callstack 0
   977  00000F                     uart_lcd_update@i:
   978                           	opt callstack 0
   979  00000F                     memset@k:
   980                           	opt callstack 0
   981  00000F                     ___lmul@product:
   982                           	opt callstack 0
   983  00000F                     ___aodiv@divisor:
   984                           	opt callstack 0
   985  00000F                     ___aomod@divisor:
   986                           	opt callstack 0
   987  00000F                     ___lodiv@divisor:
   988                           	opt callstack 0
   989  00000F                     ___lomod@divisor:
   990                           	opt callstack 0
   991                           
   992                           ; 8 bytes @ 0xE
   993  00000F                     	ds	1
   994  000010                     ??_atoi:
   995  000010                     ___xxtofl@exp:
   996                           	opt callstack 0
   997  000010                     fputs@s:
   998                           	opt callstack 0
   999  000010                     strncmp@r:
  1000                           	opt callstack 0
  1001                           
  1002                           ; 2 bytes @ 0xF
  1003  000010                     	ds	1
  1004  000011                     memset@s:
  1005                           	opt callstack 0
  1006  000011                     ___xxtofl@arg:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x10
  1010  000011                     	ds	1
  1011  000012                     fputs@fp:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x11
  1015  000012                     	ds	1
  1016  000013                     ?___lldiv:
  1017                           	opt callstack 0
  1018  000013                     _toupper$1606:
  1019                           	opt callstack 0
  1020  000013                     ___lldiv@dividend:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x12
  1024  000013                     	ds	1
  1025  000014                     fputs@c:
  1026                           	opt callstack 0
  1027  000014                     atoi@neg:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x13
  1031  000014                     	ds	1
  1032  000015                     fputs@i:
  1033                           	opt callstack 0
  1034  000015                     ___flge@ff1:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x14
  1038  000015                     	ds	1
  1039  000016                     _atoi$1490:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x15
  1043  000016                     	ds	1
  1044  000017                     ?_pad:
  1045                           	opt callstack 0
  1046  000017                     ___aodiv@counter:
  1047                           	opt callstack 0
  1048  000017                     ___aomod@counter:
  1049                           	opt callstack 0
  1050  000017                     ___lomod@counter:
  1051                           	opt callstack 0
  1052  000017                     pad@fp:
  1053                           	opt callstack 0
  1054  000017                     ___lldiv@divisor:
  1055                           	opt callstack 0
  1056  000017                     ___lodiv@quotient:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 8 bytes @ 0x16
  1060  000017                     	ds	1
  1061  000018                     ___aodiv@sign:
  1062                           	opt callstack 0
  1063  000018                     ___aomod@sign:
  1064                           	opt callstack 0
  1065  000018                     _atoi$1492:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x17
  1069  000018                     	ds	1
  1070  000019                     ?_abs:
  1071                           	opt callstack 0
  1072  000019                     pad@buf:
  1073                           	opt callstack 0
  1074  000019                     abs@a:
  1075                           	opt callstack 0
  1076  000019                     ___flge@ff2:
  1077                           	opt callstack 0
  1078  000019                     ___aodiv@quotient:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 8 bytes @ 0x18
  1082  000019                     	ds	1
  1083  00001A                     _atoi$1491:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x19
  1087  00001A                     	ds	1
  1088  00001B                     ??_abs:
  1089  00001B                     pad@p:
  1090                           	opt callstack 0
  1091  00001B                     atoi@n:
  1092                           	opt callstack 0
  1093  00001B                     ___lldiv@quotient:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 4 bytes @ 0x1A
  1097  00001B                     	ds	2
  1098  00001D                     ??_pad:
  1099  00001D                     ??___flge:
  1100                           
  1101                           ; 1 bytes @ 0x1C
  1102  00001D                     	ds	1
  1103  00001E                     pad@i:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x1D
  1107  00001E                     	ds	1
  1108  00001F                     ___lldiv@counter:
  1109                           	opt callstack 0
  1110  00001F                     ___lodiv@counter:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x1E
  1114  00001F                     	ds	1
  1115  000020                     pad@w:
  1116                           	opt callstack 0
  1117  000020                     timer_init@delay:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x1F
  1121  000020                     	ds	1
  1122  000021                     ??_heat_element_testing:
  1123                           
  1124                           ; 1 bytes @ 0x20
  1125  000021                     	ds	1
  1126  000022                     ?_dtoa:
  1127                           	opt callstack 0
  1128  000022                     ?_utoa:
  1129                           	opt callstack 0
  1130  000022                     ?_xtoa:
  1131                           	opt callstack 0
  1132  000022                     dtoa@fp:
  1133                           	opt callstack 0
  1134  000022                     utoa@fp:
  1135                           	opt callstack 0
  1136  000022                     xtoa@fp:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x21
  1140  000022                     	ds	2
  1141  000024                     dtoa@d:
  1142                           	opt callstack 0
  1143  000024                     utoa@d:
  1144                           	opt callstack 0
  1145  000024                     xtoa@d:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 8 bytes @ 0x23
  1149  000024                     	ds	3
  1150  000027                     heat_element_testing@lcd_test:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 16 bytes @ 0x26
  1154  000027                     	ds	5
  1155  00002C                     ??_dtoa:
  1156  00002C                     ??_utoa:
  1157  00002C                     xtoa@x:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x2B
  1161  00002C                     	ds	1
  1162  00002D                     ??_xtoa:
  1163                           
  1164                           ; 1 bytes @ 0x2C
  1165  00002D                     	ds	7
  1166  000034                     _dtoa$975:
  1167                           	opt callstack 0
  1168  000034                     utoa@p:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x33
  1172  000034                     	ds	1
  1173  000035                     _xtoa$993:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x34
  1177  000035                     	ds	1
  1178  000036                     dtoa@p:
  1179                           	opt callstack 0
  1180  000036                     utoa@w:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x35
  1184  000036                     	ds	1
  1185  000037                     _xtoa$994:
  1186                           	opt callstack 0
  1187  000037                     heat_element_testing@testing_elapse_time:
  1188                           	opt callstack 0
  1189                           
  1190                           ; 8 bytes @ 0x36
  1191  000037                     	ds	1
  1192  000038                     dtoa@w:
  1193                           	opt callstack 0
  1194  000038                     utoa@n:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 8 bytes @ 0x37
  1198  000038                     	ds	1
  1199  000039                     xtoa@p:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x38
  1203  000039                     	ds	1
  1204  00003A                     dtoa@s:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x39
  1208  00003A                     	ds	1
  1209  00003B                     xtoa@w:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x3A
  1213  00003B                     	ds	1
  1214  00003C                     dtoa@n:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 8 bytes @ 0x3B
  1218  00003C                     	ds	1
  1219  00003D                     xtoa@n:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 8 bytes @ 0x3C
  1223  00003D                     	ds	2
  1224  00003F                     heat_element_testing@i:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x3E
  1228  00003F                     	ds	1
  1229  000040                     utoa@i:
  1230                           	opt callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x3F
  1233  000040                     	ds	4
  1234  000044                     dtoa@i:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x43
  1238  000044                     	ds	1
  1239  000045                     xtoa@i:
  1240                           	opt callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x44
  1243  000045                     	ds	2
  1244  000047                     xtoa@c:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x46
  1248  000047                     	ds	2
  1249  000049                     ?_vfpfcnvrt:
  1250                           	opt callstack 0
  1251  000049                     vfpfcnvrt@fp:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x48
  1255  000049                     	ds	2
  1256  00004B                     vfpfcnvrt@fmt:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x4A
  1260  00004B                     	ds	2
  1261  00004D                     vfpfcnvrt@ap:
  1262                           	opt callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x4C
  1265  00004D                     	ds	2
  1266  00004F                     ??_vfpfcnvrt:
  1267                           
  1268                           ; 1 bytes @ 0x4E
  1269  00004F                     	ds	14
  1270  00005D                     _vfpfcnvrt$1008:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x5C
  1274  00005D                     	ds	2
  1275  00005F                     vfpfcnvrt@ll:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 8 bytes @ 0x5E
  1279  00005F                     	ds	8
  1280  000067                     vfpfcnvrt@c:
  1281                           	opt callstack 0
  1282                           
  1283                           ; 1 bytes @ 0x66
  1284  000067                     	ds	1
  1285  000068                     vfpfcnvrt@llu:
  1286                           	opt callstack 0
  1287                           
  1288                           ; 8 bytes @ 0x67
  1289  000068                     	ds	8
  1290  000070                     vfprintf@cfmt:
  1291                           	opt callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x6F
  1294  000070                     	ds	2
  1295  000072                     
  1296                           ; 1 bytes @ 0x71
  1297 ;;
  1298 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1299 ;;
  1300 ;; *************** function _main *****************
  1301 ;; Defined at:
  1302 ;;		line 34 in file "i2c_driver.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  lcd_test       16    0[BANK1 ] unsigned char [16]
  1307 ;;  current_time    4   16[BANK1 ] unsigned long 
  1308 ;;  i               1   20[BANK1 ] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1318 ;;      Params:         0       0       0       0       0       0       0
  1319 ;;      Locals:         0       0      21       0       0       0       0
  1320 ;;      Temps:          0       2       0       0       0       0       0
  1321 ;;      Totals:         0       2      21       0       0       0       0
  1322 ;;Total ram usage:       23 bytes
  1323 ;; Hardware stack levels required when called:    9
  1324 ;; This function calls:
  1325 ;;		_adc_init
  1326 ;;		_adc_update
  1327 ;;		_heat_element_testing
  1328 ;;		_heat_elmnt_result_update
  1329 ;;		_lcd_cmnt
  1330 ;;		_lcd_init
  1331 ;;		_sprintf
  1332 ;;		_timer_init
  1333 ;;		_uart_lcd_update
  1334 ;; This function is called by:
  1335 ;;		Startup code after reset
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text0
  1340  001844                     __ptext0:
  1341                           	opt callstack 0
  1342  001844                     _main:
  1343                           	opt callstack 22
  1344  001844                     
  1345                           ;i2c_driver.c: 36:     int_u8 lcd_test[16]="Initializing... ",i;
  1346  001844  EE21  F0A5         	lfsr	2,main@F3204
  1347  001848  EE11  F0DB         	lfsr	1,main@lcd_test
  1348  00184C  0E0F               	movlw	15
  1349  00184E                     u5591:
  1350  00184E  CFDB FFE3          	movff	plusw2,plusw1
  1351  001852  06E8               	decf	wreg,f,c
  1352  001854  E2FC               	bc	u5591
  1353  001856                     
  1354                           ;i2c_driver.c: 38:     TRISC = 0x00;
  1355  001856  0E00               	movlw	0
  1356  001858  6E94               	movwf	148,c	;volatile
  1357  00185A                     
  1358                           ;i2c_driver.c: 39:     TRISD=0X00;
  1359  00185A  0E00               	movlw	0
  1360  00185C  6E95               	movwf	149,c	;volatile
  1361  00185E                     
  1362                           ;i2c_driver.c: 40:     TRISE=0X00;
  1363  00185E  0E00               	movlw	0
  1364  001860  6E96               	movwf	150,c	;volatile
  1365  001862                     
  1366                           ;i2c_driver.c: 41:     TRISB=0X08;
  1367  001862  0E08               	movlw	8
  1368  001864  6E93               	movwf	147,c	;volatile
  1369  001866                     
  1370                           ;i2c_driver.c: 42:     TRISA=0X03;
  1371  001866  0E03               	movlw	3
  1372  001868  6E92               	movwf	146,c	;volatile
  1373  00186A                     
  1374                           ;i2c_driver.c: 43:     PORTD=0X00;
  1375  00186A  0E00               	movlw	0
  1376  00186C  6E83               	movwf	131,c	;volatile
  1377  00186E                     
  1378                           ;i2c_driver.c: 44:     PORTB= 0x00;
  1379  00186E  0E00               	movlw	0
  1380  001870  6E81               	movwf	129,c	;volatile
  1381  001872                     
  1382                           ;i2c_driver.c: 45:     PORTC = 0X03;
  1383  001872  0E03               	movlw	3
  1384  001874  6E82               	movwf	130,c	;volatile
  1385  001876                     
  1386                           ;i2c_driver.c: 46:    i2c_pkt.address=0x68;
  1387  001876  0E68               	movlw	104
  1388  001878  0100               	movlb	0	; () banked
  1389  00187A  6FB6               	movwf	_i2c_pkt& (0+255),b
  1390  00187C                     
  1391                           ; BSR set to: 0
  1392                           ;i2c_driver.c: 47:    i2c_pkt.data=0x00;
  1393  00187C  0E00               	movlw	0
  1394  00187E  6FB7               	movwf	(_i2c_pkt+1)& (0+255),b
  1395  001880                     
  1396                           ; BSR set to: 0
  1397                           ;i2c_driver.c: 48:    i2c_pkt.ack =0;
  1398  001880  0E00               	movlw	0
  1399  001882  6FB8               	movwf	(_i2c_pkt+2)& (0+255),b
  1400  001884                     
  1401                           ; BSR set to: 0
  1402                           ;i2c_driver.c: 50:    lcd_init();
  1403  001884  EC83  F015         	call	_lcd_init	;wreg free
  1404  001888                     
  1405                           ;i2c_driver.c: 52:    timer_init(10);
  1406  001888  0E0A               	movlw	10
  1407  00188A  6E20               	movwf	timer_init@delay^0,c
  1408  00188C  0E00               	movlw	0
  1409  00188E  6E21               	movwf	(timer_init@delay+1)^0,c
  1410  001890  0E00               	movlw	0
  1411  001892  6E22               	movwf	(timer_init@delay+2)^0,c
  1412  001894  0E00               	movlw	0
  1413  001896  6E23               	movwf	(timer_init@delay+3)^0,c
  1414  001898  EC69  F011         	call	_timer_init	;wreg free
  1415  00189C                     
  1416                           ;i2c_driver.c: 53:    adc_init();
  1417  00189C  EC1D  F018         	call	_adc_init	;wreg free
  1418  0018A0                     
  1419                           ;i2c_driver.c: 55:    lcd_cmnt(0x80);
  1420  0018A0  0E80               	movlw	128
  1421  0018A2  EC3C  F018         	call	_lcd_cmnt
  1422  0018A6                     
  1423                           ;i2c_driver.c: 56:    uart_lcd_update(lcd_test,sizeof(lcd_test));
  1424  0018A6  0EDB               	movlw	low main@lcd_test
  1425  0018A8  6E09               	movwf	uart_lcd_update@data^0,c
  1426  0018AA  0E01               	movlw	high main@lcd_test
  1427  0018AC  6E0A               	movwf	(uart_lcd_update@data+1)^0,c
  1428  0018AE  0E10               	movlw	16
  1429  0018B0  6E0B               	movwf	uart_lcd_update@len^0,c
  1430  0018B2  ECA9  F016         	call	_uart_lcd_update	;wreg free
  1431  0018B6                     
  1432                           ;i2c_driver.c: 57:    TRISE= 0;
  1433  0018B6  0E00               	movlw	0
  1434  0018B8  6E96               	movwf	150,c	;volatile
  1435  0018BA                     l5622:
  1436                           
  1437                           ;i2c_driver.c: 59:    {;i2c_driver.c: 60:        current_time = counter + 200;
  1438  0018BA  0EC8               	movlw	200
  1439  0018BC  0100               	movlb	0	; () banked
  1440  0018BE  2598               	addwf	_counter& (0+255),w,b
  1441  0018C0  0101               	movlb	1	; () banked
  1442  0018C2  6FEB               	movwf	main@current_time& (0+255),b
  1443  0018C4  0E00               	movlw	0
  1444  0018C6  0100               	movlb	0	; () banked
  1445  0018C8  2199               	addwfc	(_counter+1)& (0+255),w,b
  1446  0018CA  0101               	movlb	1	; () banked
  1447  0018CC  6FEC               	movwf	(main@current_time+1)& (0+255),b
  1448  0018CE  0E00               	movlw	0
  1449  0018D0  0100               	movlb	0	; () banked
  1450  0018D2  219A               	addwfc	(_counter+2)& (0+255),w,b
  1451  0018D4  0101               	movlb	1	; () banked
  1452  0018D6  6FED               	movwf	(main@current_time+2)& (0+255),b
  1453  0018D8  0E00               	movlw	0
  1454  0018DA  0100               	movlb	0	; () banked
  1455  0018DC  219B               	addwfc	(_counter+3)& (0+255),w,b
  1456  0018DE  0101               	movlb	1	; () banked
  1457  0018E0  6FEE               	movwf	(main@current_time+3)& (0+255),b
  1458                           
  1459                           ;i2c_driver.c: 61:        while(current_time > counter && test_status == 0)
  1460  0018E2  EF76  F00C         	goto	l5626
  1461  0018E6                     l5624:
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;i2c_driver.c: 62:        {;i2c_driver.c: 63:            adc_update(0);
  1465  0018E6  0E00               	movlw	0
  1466  0018E8  ECF5  F017         	call	_adc_update
  1467  0018EC                     l5626:
  1468                           
  1469                           ;i2c_driver.c: 61:        while(current_time > counter && test_status == 0)
  1470  0018EC  0101               	movlb	1	; () banked
  1471  0018EE  51EB               	movf	main@current_time& (0+255),w,b
  1472  0018F0  0100               	movlb	0	; () banked
  1473  0018F2  5D98               	subwf	_counter& (0+255),w,b
  1474  0018F4  0101               	movlb	1	; () banked
  1475  0018F6  51EC               	movf	(main@current_time+1)& (0+255),w,b
  1476  0018F8  0100               	movlb	0	; () banked
  1477  0018FA  5999               	subwfb	(_counter+1)& (0+255),w,b
  1478  0018FC  0101               	movlb	1	; () banked
  1479  0018FE  51ED               	movf	(main@current_time+2)& (0+255),w,b
  1480  001900  0100               	movlb	0	; () banked
  1481  001902  599A               	subwfb	(_counter+2)& (0+255),w,b
  1482  001904  0101               	movlb	1	; () banked
  1483  001906  51EE               	movf	(main@current_time+3)& (0+255),w,b
  1484  001908  0100               	movlb	0	; () banked
  1485  00190A  599B               	subwfb	(_counter+3)& (0+255),w,b
  1486  00190C  B0D8               	btfsc	status,0,c
  1487  00190E  EF8B  F00C         	goto	u5601
  1488  001912  EF8D  F00C         	goto	u5600
  1489  001916                     u5601:
  1490  001916  EF95  F00C         	goto	l5630
  1491  00191A                     u5600:
  1492  00191A                     
  1493                           ; BSR set to: 0
  1494  00191A  51AA               	movf	_test_status& (0+255),w,b
  1495  00191C  B4D8               	btfsc	status,2,c
  1496  00191E  EF93  F00C         	goto	u5611
  1497  001922  EF95  F00C         	goto	u5610
  1498  001926                     u5611:
  1499  001926  EF73  F00C         	goto	l5624
  1500  00192A                     u5610:
  1501  00192A                     l5630:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;i2c_driver.c: 67:        if(test_status == 0)
  1505  00192A  51AA               	movf	_test_status& (0+255),w,b
  1506  00192C  A4D8               	btfss	status,2,c
  1507  00192E  EF9B  F00C         	goto	u5621
  1508  001932  EF9D  F00C         	goto	u5620
  1509  001936                     u5621:
  1510  001936  EFA3  F00C         	goto	l5634
  1511  00193A                     u5620:
  1512  00193A                     
  1513                           ; BSR set to: 0
  1514                           ;i2c_driver.c: 68:        {;i2c_driver.c: 69:         heat_element_testing();
  1515  00193A  ECC2  F006         	call	_heat_element_testing	;wreg free
  1516                           
  1517                           ;i2c_driver.c: 70:         heat_elmnt_result_update();
  1518  00193E  EC54  F013         	call	_heat_elmnt_result_update	;wreg free
  1519                           
  1520                           ;i2c_driver.c: 71:        }
  1521  001942  EF5D  F00C         	goto	l5622
  1522  001946                     l5634:
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;i2c_driver.c: 73:        {;i2c_driver.c: 74:             for(i = 0; i < 214; i++)
  1526  001946  0E00               	movlw	0
  1527  001948  0101               	movlb	1	; () banked
  1528  00194A  6FEF               	movwf	main@i& (0+255),b
  1529  00194C                     l5640:
  1530                           
  1531                           ; BSR set to: 1
  1532                           ;i2c_driver.c: 75:            {;i2c_driver.c: 76:                lcd_cmnt(0x80);
  1533  00194C  0E80               	movlw	128
  1534  00194E  EC3C  F018         	call	_lcd_cmnt
  1535  001952                     
  1536                           ;i2c_driver.c: 77:                sprintf((char *)lcd_test,"I%5u A%8u",i,loop_count);
  1537  001952  0EDB               	movlw	low main@lcd_test
  1538  001954  0100               	movlb	0	; () banked
  1539  001956  6FD0               	movwf	sprintf@s& (0+255),b
  1540  001958  0E01               	movlw	high main@lcd_test
  1541  00195A  6FD1               	movwf	(sprintf@s+1)& (0+255),b
  1542  00195C  0EB8               	movlw	low STR_1
  1543  00195E  6FD2               	movwf	sprintf@fmt& (0+255),b
  1544  001960  0E06               	movlw	high STR_1
  1545  001962  6FD3               	movwf	(sprintf@fmt+1)& (0+255),b
  1546  001964  C1EF  F0D4         	movff	main@i,?_sprintf+4
  1547  001968  6BD5               	clrf	(?_sprintf+5)& (0+255),b
  1548  00196A  C090  F0D6         	movff	_loop_count,?_sprintf+6
  1549  00196E  C091  F0D7         	movff	_loop_count+1,?_sprintf+7
  1550  001972  C092  F0D8         	movff	_loop_count+2,?_sprintf+8
  1551  001976  C093  F0D9         	movff	_loop_count+3,?_sprintf+9
  1552  00197A  EC57  F016         	call	_sprintf	;wreg free
  1553  00197E                     
  1554                           ;i2c_driver.c: 78:                uart_lcd_update(lcd_test,sizeof(lcd_test));
  1555  00197E  0EDB               	movlw	low main@lcd_test
  1556  001980  6E09               	movwf	uart_lcd_update@data^0,c
  1557  001982  0E01               	movlw	high main@lcd_test
  1558  001984  6E0A               	movwf	(uart_lcd_update@data+1)^0,c
  1559  001986  0E10               	movlw	16
  1560  001988  6E0B               	movwf	uart_lcd_update@len^0,c
  1561  00198A  ECA9  F016         	call	_uart_lcd_update	;wreg free
  1562  00198E                     
  1563                           ;i2c_driver.c: 79:                adc_update(0);
  1564  00198E  0E00               	movlw	0
  1565  001990  ECF5  F017         	call	_adc_update
  1566  001994                     
  1567                           ;i2c_driver.c: 80:                 lcd_cmnt(0xc0);
  1568  001994  0EC0               	movlw	192
  1569  001996  EC3C  F018         	call	_lcd_cmnt
  1570  00199A                     
  1571                           ;i2c_driver.c: 81:                 sprintf((char *)lcd_test,"Adc:%12x",adc_value[0]);
  1572  00199A  0EDB               	movlw	low main@lcd_test
  1573  00199C  0100               	movlb	0	; () banked
  1574  00199E  6FD0               	movwf	sprintf@s& (0+255),b
  1575  0019A0  0E01               	movlw	high main@lcd_test
  1576  0019A2  6FD1               	movwf	(sprintf@s+1)& (0+255),b
  1577  0019A4  0EC2               	movlw	low STR_2
  1578  0019A6  6FD2               	movwf	sprintf@fmt& (0+255),b
  1579  0019A8  0E06               	movlw	high STR_2
  1580  0019AA  6FD3               	movwf	(sprintf@fmt+1)& (0+255),b
  1581  0019AC  C100  F0D4         	movff	_adc_value,?_sprintf+4
  1582  0019B0  C101  F0D5         	movff	_adc_value+1,?_sprintf+5
  1583  0019B4  EC57  F016         	call	_sprintf	;wreg free
  1584  0019B8                     
  1585                           ;i2c_driver.c: 82:                 uart_lcd_update(lcd_test,sizeof(lcd_test));
  1586  0019B8  0EDB               	movlw	low main@lcd_test
  1587  0019BA  6E09               	movwf	uart_lcd_update@data^0,c
  1588  0019BC  0E01               	movlw	high main@lcd_test
  1589  0019BE  6E0A               	movwf	(uart_lcd_update@data+1)^0,c
  1590  0019C0  0E10               	movlw	16
  1591  0019C2  6E0B               	movwf	uart_lcd_update@len^0,c
  1592  0019C4  ECA9  F016         	call	_uart_lcd_update	;wreg free
  1593  0019C8                     
  1594                           ;i2c_driver.c: 83:                _delay((unsigned long)((1000)*(20000000/4000.0)));
  1595  0019C8  0E1A               	movlw	26
  1596  0019CA  0100               	movlb	0	; () banked
  1597  0019CC  6FED               	movwf	(??_main+1)& (0+255),b
  1598  0019CE  0E5E               	movlw	94
  1599  0019D0  6FEC               	movwf	??_main& (0+255),b
  1600  0019D2  0E6E               	movlw	110
  1601  0019D4                     u5747:
  1602  0019D4  2EE8               	decfsz	wreg,f,c
  1603  0019D6  D7FE               	bra	u5747
  1604  0019D8  2FEC               	decfsz	??_main& (0+255),f,b
  1605  0019DA  D7FC               	bra	u5747
  1606  0019DC  2FED               	decfsz	(??_main+1)& (0+255),f,b
  1607  0019DE  D7FA               	bra	u5747
  1608  0019E0  F000               	nop	
  1609  0019E2                     
  1610                           ;i2c_driver.c: 84:            }
  1611  0019E2  0101               	movlb	1	; () banked
  1612  0019E4  2BEF               	incf	main@i& (0+255),f,b
  1613  0019E6                     
  1614                           ; BSR set to: 1
  1615  0019E6  0ED5               	movlw	213
  1616  0019E8  65EF               	cpfsgt	main@i& (0+255),b
  1617  0019EA  EFF9  F00C         	goto	u5631
  1618  0019EE  EFFB  F00C         	goto	u5630
  1619  0019F2                     u5631:
  1620  0019F2  EFA6  F00C         	goto	l5640
  1621  0019F6                     u5630:
  1622  0019F6  EF5D  F00C         	goto	l5622
  1623  0019FA  EF07  F000         	goto	start
  1624  0019FE                     __end_of_main:
  1625                           	opt callstack 0
  1626                           
  1627 ;; *************** function _uart_lcd_update *****************
  1628 ;; Defined at:
  1629 ;;		line 41 in file "lcd_driver.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  data            2    8[COMRAM] PTR unsigned char 
  1632 ;;		 -> lcd_msg(16), lcd_msg1(16), main@lcd_test(16), 
  1633 ;;  len             1   10[COMRAM] unsigned char 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  i               2   14[COMRAM] int 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1645 ;;      Params:         3       0       0       0       0       0       0
  1646 ;;      Locals:         2       0       0       0       0       0       0
  1647 ;;      Temps:          3       0       0       0       0       0       0
  1648 ;;      Totals:         8       0       0       0       0       0       0
  1649 ;;Total ram usage:        8 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    2
  1652 ;; This function calls:
  1653 ;;		_lcd_data
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;;		_keypad_update
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text1
  1661  002D52                     __ptext1:
  1662                           	opt callstack 0
  1663  002D52                     _uart_lcd_update:
  1664                           	opt callstack 28
  1665  002D52                     
  1666                           ;lcd_driver.c: 41: void uart_lcd_update(int_u8 *data,int_u8 len);lcd_driver.c: 42: { int
      +                           i;;lcd_driver.c: 44:     for(i=0;i<len;i++)
  1667  002D52  0E00               	movlw	0
  1668  002D54  6E10               	movwf	(uart_lcd_update@i+1)^0,c
  1669  002D56  0E00               	movlw	0
  1670  002D58  6E0F               	movwf	uart_lcd_update@i^0,c
  1671  002D5A  EFBA  F016         	goto	l5488
  1672  002D5E                     l5484:
  1673                           
  1674                           ;lcd_driver.c: 45:     {;lcd_driver.c: 46:         lcd_data(data[i]);
  1675  002D5E  500F               	movf	uart_lcd_update@i^0,w,c
  1676  002D60  2409               	addwf	uart_lcd_update@data^0,w,c
  1677  002D62  6ED9               	movwf	fsr2l,c
  1678  002D64  5010               	movf	(uart_lcd_update@i+1)^0,w,c
  1679  002D66  200A               	addwfc	(uart_lcd_update@data+1)^0,w,c
  1680  002D68  6EDA               	movwf	fsr2h,c
  1681  002D6A  50DF               	movf	indf2,w,c
  1682  002D6C  EC2E  F018         	call	_lcd_data
  1683  002D70                     
  1684                           ;lcd_driver.c: 47:     }
  1685  002D70  4A0F               	infsnz	uart_lcd_update@i^0,f,c
  1686  002D72  2A10               	incf	(uart_lcd_update@i+1)^0,f,c
  1687  002D74                     l5488:
  1688  002D74  500B               	movf	uart_lcd_update@len^0,w,c
  1689  002D76  6E0C               	movwf	??_uart_lcd_update^0,c
  1690  002D78  6A0D               	clrf	(??_uart_lcd_update+1)^0,c
  1691  002D7A  500C               	movf	??_uart_lcd_update^0,w,c
  1692  002D7C  5C0F               	subwf	uart_lcd_update@i^0,w,c
  1693  002D7E  5010               	movf	(uart_lcd_update@i+1)^0,w,c
  1694  002D80  0A80               	xorlw	128
  1695  002D82  6E0E               	movwf	(??_uart_lcd_update+2)^0,c
  1696  002D84  500D               	movf	(??_uart_lcd_update+1)^0,w,c
  1697  002D86  0A80               	xorlw	128
  1698  002D88  580E               	subwfb	(??_uart_lcd_update+2)^0,w,c
  1699  002D8A  A0D8               	btfss	status,0,c
  1700  002D8C  EFCA  F016         	goto	u5461
  1701  002D90  EFCC  F016         	goto	u5460
  1702  002D94                     u5461:
  1703  002D94  EFAF  F016         	goto	l5484
  1704  002D98                     u5460:
  1705  002D98  0012               	return		;funcret
  1706  002D9A                     __end_of_uart_lcd_update:
  1707                           	opt callstack 0
  1708                           
  1709 ;; *************** function _lcd_data *****************
  1710 ;; Defined at:
  1711 ;;		line 33 in file "lcd_driver.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  data            1    wreg     unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  data            1    7[COMRAM] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1725 ;;      Params:         0       0       0       0       0       0       0
  1726 ;;      Locals:         1       0       0       0       0       0       0
  1727 ;;      Temps:          1       0       0       0       0       0       0
  1728 ;;      Totals:         2       0       0       0       0       0       0
  1729 ;;Total ram usage:        2 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    1
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_uart_lcd_update
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text2
  1740  00305C                     __ptext2:
  1741                           	opt callstack 0
  1742  00305C                     _lcd_data:
  1743                           	opt callstack 28
  1744                           
  1745                           ;incstack = 0
  1746                           ;lcd_data@data stored from wreg
  1747  00305C  6E08               	movwf	lcd_data@data^0,c
  1748  00305E                     
  1749                           ;lcd_driver.c: 33: void lcd_data(unsigned char data);lcd_driver.c: 34: {;lcd_driver.c: 3
      +                          5:     PORTD=data;
  1750  00305E  C008  FF83         	movff	lcd_data@data,3971	;volatile
  1751  003062                     
  1752                           ;lcd_driver.c: 36:     PORTBbits.RB1=1;
  1753  003062  8281               	bsf	129,1,c	;volatile
  1754  003064                     
  1755                           ;lcd_driver.c: 37:     PORTBbits.RB2=1;_delay((unsigned long)((2)*(20000000/4000.0)));PO
      +                          RTBbits.RB2=0;;
  1756  003064  8481               	bsf	129,2,c	;volatile
  1757  003066  0E0D               	movlw	13
  1758  003068  6E07               	movwf	??_lcd_data^0,c
  1759  00306A  0EFC               	movlw	252
  1760  00306C                     u5757:
  1761  00306C  2EE8               	decfsz	wreg,f,c
  1762  00306E  D7FE               	bra	u5757
  1763  003070  2E07               	decfsz	??_lcd_data^0,f,c
  1764  003072  D7FC               	bra	u5757
  1765  003074  9481               	bcf	129,2,c	;volatile
  1766  003076  0012               	return		;funcret
  1767  003078                     __end_of_lcd_data:
  1768                           	opt callstack 0
  1769                           
  1770 ;; *************** function _timer_init *****************
  1771 ;; Defined at:
  1772 ;;		line 384 in file "i2c_driver.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  delay           4   31[COMRAM] unsigned long 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      unsigned char 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1786 ;;      Params:         4       0       0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0
  1789 ;;      Totals:         4       0       0       0       0       0       0
  1790 ;;Total ram usage:        4 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    2
  1793 ;; This function calls:
  1794 ;;		___lldiv
  1795 ;;		___lmul
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text3
  1802  0022D2                     __ptext3:
  1803                           	opt callstack 0
  1804  0022D2                     _timer_init:
  1805                           	opt callstack 28
  1806  0022D2                     
  1807                           ;i2c_driver.c: 384: int_u8 timer_init(int_u32 delay);i2c_driver.c: 385: {;i2c_driver.c: 
      +                          387:     if(delay >100)
  1808  0022D2  5023               	movf	(timer_init@delay+3)^0,w,c
  1809  0022D4  1022               	iorwf	(timer_init@delay+2)^0,w,c
  1810  0022D6  1021               	iorwf	(timer_init@delay+1)^0,w,c
  1811  0022D8  E109               	bnz	u5440
  1812  0022DA  0E65               	movlw	101
  1813  0022DC  5C20               	subwf	timer_init@delay^0,w,c
  1814  0022DE  A0D8               	btfss	status,0,c
  1815  0022E0  EF74  F011         	goto	u5441
  1816  0022E4  EF76  F011         	goto	u5440
  1817  0022E8                     u5441:
  1818  0022E8  EF9A  F011         	goto	l5470
  1819  0022EC                     u5440:
  1820  0022EC                     
  1821                           ;i2c_driver.c: 388:     {;i2c_driver.c: 390:       counter_mod_value = delay/100;
  1822  0022EC  C020  F013         	movff	timer_init@delay,___lldiv@dividend
  1823  0022F0  C021  F014         	movff	timer_init@delay+1,___lldiv@dividend+1
  1824  0022F4  C022  F015         	movff	timer_init@delay+2,___lldiv@dividend+2
  1825  0022F8  C023  F016         	movff	timer_init@delay+3,___lldiv@dividend+3
  1826  0022FC  0E64               	movlw	100
  1827  0022FE  6E17               	movwf	___lldiv@divisor^0,c
  1828  002300  0E00               	movlw	0
  1829  002302  6E18               	movwf	(___lldiv@divisor+1)^0,c
  1830  002304  0E00               	movlw	0
  1831  002306  6E19               	movwf	(___lldiv@divisor+2)^0,c
  1832  002308  0E00               	movlw	0
  1833  00230A  6E1A               	movwf	(___lldiv@divisor+3)^0,c
  1834  00230C  ECEF  F014         	call	___lldiv	;wreg free
  1835  002310  C013  F151         	movff	?___lldiv,_counter_mod_value
  1836  002314  C014  F152         	movff	?___lldiv+1,_counter_mod_value+1
  1837  002318  C015  F153         	movff	?___lldiv+2,_counter_mod_value+2
  1838  00231C  C016  F154         	movff	?___lldiv+3,_counter_mod_value+3
  1839  002320                     
  1840                           ;i2c_driver.c: 391:       delay = 100;
  1841  002320  0E64               	movlw	100
  1842  002322  6E20               	movwf	timer_init@delay^0,c
  1843  002324  0E00               	movlw	0
  1844  002326  6E21               	movwf	(timer_init@delay+1)^0,c
  1845  002328  0E00               	movlw	0
  1846  00232A  6E22               	movwf	(timer_init@delay+2)^0,c
  1847  00232C  0E00               	movlw	0
  1848  00232E  6E23               	movwf	(timer_init@delay+3)^0,c
  1849                           
  1850                           ;i2c_driver.c: 392:     }
  1851  002330  EFA3  F011         	goto	l400
  1852  002334                     l5470:
  1853                           
  1854                           ;i2c_driver.c: 394:     {;i2c_driver.c: 395:       counter_mod_value = 1;
  1855  002334  0E01               	movlw	1
  1856  002336  0101               	movlb	1	; () banked
  1857  002338  6F51               	movwf	_counter_mod_value& (0+255),b
  1858  00233A  0E00               	movlw	0
  1859  00233C  6F52               	movwf	(_counter_mod_value+1)& (0+255),b
  1860  00233E  0E00               	movlw	0
  1861  002340  6F53               	movwf	(_counter_mod_value+2)& (0+255),b
  1862  002342  0E00               	movlw	0
  1863  002344  6F54               	movwf	(_counter_mod_value+3)& (0+255),b
  1864  002346                     l400:
  1865                           
  1866                           ;i2c_driver.c: 397:     T1CON=0xB1;
  1867  002346  0EB1               	movlw	177
  1868  002348  6ECD               	movwf	205,c	;volatile
  1869  00234A                     
  1870                           ;i2c_driver.c: 398:     timer_value = (65536 -(((delay) * 20000000))/((8) * 4000 ));
  1871  00234A  C020  F007         	movff	timer_init@delay,___lmul@multiplier
  1872  00234E  C021  F008         	movff	timer_init@delay+1,___lmul@multiplier+1
  1873  002352  C022  F009         	movff	timer_init@delay+2,___lmul@multiplier+2
  1874  002356  C023  F00A         	movff	timer_init@delay+3,___lmul@multiplier+3
  1875  00235A  0E00               	movlw	0
  1876  00235C  6E0B               	movwf	___lmul@multiplicand^0,c
  1877  00235E  0E2D               	movlw	45
  1878  002360  6E0C               	movwf	(___lmul@multiplicand+1)^0,c
  1879  002362  0E31               	movlw	49
  1880  002364  6E0D               	movwf	(___lmul@multiplicand+2)^0,c
  1881  002366  0E01               	movlw	1
  1882  002368  6E0E               	movwf	(___lmul@multiplicand+3)^0,c
  1883  00236A  ECC2  F015         	call	___lmul	;wreg free
  1884  00236E  C007  F013         	movff	?___lmul,___lldiv@dividend
  1885  002372  C008  F014         	movff	?___lmul+1,___lldiv@dividend+1
  1886  002376  C009  F015         	movff	?___lmul+2,___lldiv@dividend+2
  1887  00237A  C00A  F016         	movff	?___lmul+3,___lldiv@dividend+3
  1888  00237E  0E00               	movlw	0
  1889  002380  6E17               	movwf	___lldiv@divisor^0,c
  1890  002382  0E7D               	movlw	125
  1891  002384  6E18               	movwf	(___lldiv@divisor+1)^0,c
  1892  002386  0E00               	movlw	0
  1893  002388  6E19               	movwf	(___lldiv@divisor+2)^0,c
  1894  00238A  0E00               	movlw	0
  1895  00238C  6E1A               	movwf	(___lldiv@divisor+3)^0,c
  1896  00238E  ECEF  F014         	call	___lldiv	;wreg free
  1897  002392  5013               	movf	?___lldiv^0,w,c
  1898  002394  0800               	sublw	0
  1899  002396  0100               	movlb	0	; () banked
  1900  002398  6F9C               	movwf	_timer_value& (0+255),b
  1901  00239A  0E00               	movlw	0
  1902  00239C  5414               	subfwb	(?___lldiv+1)^0,w,c
  1903  00239E  6F9D               	movwf	(_timer_value+1)& (0+255),b
  1904  0023A0  0E01               	movlw	1
  1905  0023A2  5415               	subfwb	(?___lldiv+2)^0,w,c
  1906  0023A4  6F9E               	movwf	(_timer_value+2)& (0+255),b
  1907  0023A6  0E00               	movlw	0
  1908  0023A8  5416               	subfwb	(?___lldiv+3)^0,w,c
  1909  0023AA  6F9F               	movwf	(_timer_value+3)& (0+255),b
  1910  0023AC                     
  1911                           ; BSR set to: 0
  1912                           ;i2c_driver.c: 400:     if(timer_value > 0xffff)
  1913  0023AC  519F               	movf	(_timer_value+3)& (0+255),w,b
  1914  0023AE  E108               	bnz	u5450
  1915  0023B0  059E               	decf	(_timer_value+2)& (0+255),w,b
  1916  0023B2  A0D8               	btfss	status,0,c
  1917  0023B4  EFDE  F011         	goto	u5451
  1918  0023B8  EFE0  F011         	goto	u5450
  1919  0023BC                     u5451:
  1920  0023BC  EFE2  F011         	goto	l401
  1921  0023C0                     u5450:
  1922  0023C0                     
  1923                           ; BSR set to: 0
  1924                           ;i2c_driver.c: 401:     TMR1H = (timer_value & 0xff00)>>8;
  1925  0023C0  C09D  FFCF         	movff	_timer_value+1,4047	;volatile
  1926  0023C4                     l401:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;i2c_driver.c: 402:     TMR1L = timer_value & 0x00ff;
  1930  0023C4  C09C  FFCE         	movff	_timer_value,4046	;volatile
  1931  0023C8                     
  1932                           ; BSR set to: 0
  1933                           ;i2c_driver.c: 403:     INTCON=0xC0;
  1934  0023C8  0EC0               	movlw	192
  1935  0023CA  6EF2               	movwf	242,c	;volatile
  1936                           
  1937                           ;i2c_driver.c: 404:     PIE1=0x01;
  1938  0023CC  0E01               	movlw	1
  1939  0023CE  6E9D               	movwf	157,c	;volatile
  1940                           
  1941                           ;i2c_driver.c: 405:     IPR1=0x01;
  1942  0023D0  0E01               	movlw	1
  1943  0023D2  6E9F               	movwf	159,c	;volatile
  1944  0023D4                     
  1945                           ; BSR set to: 0
  1946  0023D4  0012               	return		;funcret
  1947  0023D6                     __end_of_timer_init:
  1948                           	opt callstack 0
  1949                           
  1950 ;; *************** function ___lmul *****************
  1951 ;; Defined at:
  1952 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  multiplier      4    6[COMRAM] unsigned long 
  1955 ;;  multiplicand    4   10[COMRAM] unsigned long 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  product         4   14[COMRAM] unsigned long 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  4    6[COMRAM] unsigned long 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1967 ;;      Params:         8       0       0       0       0       0       0
  1968 ;;      Locals:         4       0       0       0       0       0       0
  1969 ;;      Temps:          0       0       0       0       0       0       0
  1970 ;;      Totals:        12       0       0       0       0       0       0
  1971 ;;Total ram usage:       12 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_timer_init
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text4
  1982  002B84                     __ptext4:
  1983                           	opt callstack 0
  1984  002B84                     ___lmul:
  1985                           	opt callstack 28
  1986  002B84  0E00               	movlw	0
  1987  002B86  6E0F               	movwf	___lmul@product^0,c
  1988  002B88  0E00               	movlw	0
  1989  002B8A  6E10               	movwf	(___lmul@product+1)^0,c
  1990  002B8C  0E00               	movlw	0
  1991  002B8E  6E11               	movwf	(___lmul@product+2)^0,c
  1992  002B90  0E00               	movlw	0
  1993  002B92  6E12               	movwf	(___lmul@product+3)^0,c
  1994  002B94                     l5338:
  1995  002B94  A007               	btfss	___lmul@multiplier^0,0,c
  1996  002B96  EFCF  F015         	goto	u5241
  1997  002B9A  EFD1  F015         	goto	u5240
  1998  002B9E                     u5241:
  1999  002B9E  EFD9  F015         	goto	l5342
  2000  002BA2                     u5240:
  2001  002BA2  500B               	movf	___lmul@multiplicand^0,w,c
  2002  002BA4  260F               	addwf	___lmul@product^0,f,c
  2003  002BA6  500C               	movf	(___lmul@multiplicand+1)^0,w,c
  2004  002BA8  2210               	addwfc	(___lmul@product+1)^0,f,c
  2005  002BAA  500D               	movf	(___lmul@multiplicand+2)^0,w,c
  2006  002BAC  2211               	addwfc	(___lmul@product+2)^0,f,c
  2007  002BAE  500E               	movf	(___lmul@multiplicand+3)^0,w,c
  2008  002BB0  2212               	addwfc	(___lmul@product+3)^0,f,c
  2009  002BB2                     l5342:
  2010  002BB2  90D8               	bcf	status,0,c
  2011  002BB4  360B               	rlcf	___lmul@multiplicand^0,f,c
  2012  002BB6  360C               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2013  002BB8  360D               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2014  002BBA  360E               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2015  002BBC  90D8               	bcf	status,0,c
  2016  002BBE  320A               	rrcf	(___lmul@multiplier+3)^0,f,c
  2017  002BC0  3209               	rrcf	(___lmul@multiplier+2)^0,f,c
  2018  002BC2  3208               	rrcf	(___lmul@multiplier+1)^0,f,c
  2019  002BC4  3207               	rrcf	___lmul@multiplier^0,f,c
  2020  002BC6  5007               	movf	___lmul@multiplier^0,w,c
  2021  002BC8  1008               	iorwf	(___lmul@multiplier+1)^0,w,c
  2022  002BCA  1009               	iorwf	(___lmul@multiplier+2)^0,w,c
  2023  002BCC  100A               	iorwf	(___lmul@multiplier+3)^0,w,c
  2024  002BCE  A4D8               	btfss	status,2,c
  2025  002BD0  EFEC  F015         	goto	u5251
  2026  002BD4  EFEE  F015         	goto	u5250
  2027  002BD8                     u5251:
  2028  002BD8  EFCA  F015         	goto	l5338
  2029  002BDC                     u5250:
  2030  002BDC  C00F  F007         	movff	___lmul@product,?___lmul
  2031  002BE0  C010  F008         	movff	___lmul@product+1,?___lmul+1
  2032  002BE4  C011  F009         	movff	___lmul@product+2,?___lmul+2
  2033  002BE8  C012  F00A         	movff	___lmul@product+3,?___lmul+3
  2034  002BEC  0012               	return		;funcret
  2035  002BEE                     __end_of___lmul:
  2036                           	opt callstack 0
  2037                           
  2038 ;; *************** function ___lldiv *****************
  2039 ;; Defined at:
  2040 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  dividend        4   18[COMRAM] unsigned long 
  2043 ;;  divisor         4   22[COMRAM] unsigned long 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  quotient        4   26[COMRAM] unsigned long 
  2046 ;;  counter         1   30[COMRAM] unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  4   18[COMRAM] unsigned long 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2056 ;;      Params:         8       0       0       0       0       0       0
  2057 ;;      Locals:         5       0       0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0
  2059 ;;      Totals:        13       0       0       0       0       0       0
  2060 ;;Total ram usage:       13 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_timer_init
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text5
  2071  0029DE                     __ptext5:
  2072                           	opt callstack 0
  2073  0029DE                     ___lldiv:
  2074                           	opt callstack 28
  2075  0029DE  0E00               	movlw	0
  2076  0029E0  6E1B               	movwf	___lldiv@quotient^0,c
  2077  0029E2  0E00               	movlw	0
  2078  0029E4  6E1C               	movwf	(___lldiv@quotient+1)^0,c
  2079  0029E6  0E00               	movlw	0
  2080  0029E8  6E1D               	movwf	(___lldiv@quotient+2)^0,c
  2081  0029EA  0E00               	movlw	0
  2082  0029EC  6E1E               	movwf	(___lldiv@quotient+3)^0,c
  2083  0029EE  5017               	movf	___lldiv@divisor^0,w,c
  2084  0029F0  1018               	iorwf	(___lldiv@divisor+1)^0,w,c
  2085  0029F2  1019               	iorwf	(___lldiv@divisor+2)^0,w,c
  2086  0029F4  101A               	iorwf	(___lldiv@divisor+3)^0,w,c
  2087  0029F6  B4D8               	btfsc	status,2,c
  2088  0029F8  EF00  F015         	goto	u5261
  2089  0029FC  EF02  F015         	goto	u5260
  2090  002A00                     u5261:
  2091  002A00  EF38  F015         	goto	l834
  2092  002A04                     u5260:
  2093  002A04  0E01               	movlw	1
  2094  002A06  6E1F               	movwf	___lldiv@counter^0,c
  2095  002A08  EF0C  F015         	goto	l5354
  2096  002A0C                     l5352:
  2097  002A0C  90D8               	bcf	status,0,c
  2098  002A0E  3617               	rlcf	___lldiv@divisor^0,f,c
  2099  002A10  3618               	rlcf	(___lldiv@divisor+1)^0,f,c
  2100  002A12  3619               	rlcf	(___lldiv@divisor+2)^0,f,c
  2101  002A14  361A               	rlcf	(___lldiv@divisor+3)^0,f,c
  2102  002A16  2A1F               	incf	___lldiv@counter^0,f,c
  2103  002A18                     l5354:
  2104  002A18  AE1A               	btfss	(___lldiv@divisor+3)^0,7,c
  2105  002A1A  EF11  F015         	goto	u5271
  2106  002A1E  EF13  F015         	goto	u5270
  2107  002A22                     u5271:
  2108  002A22  EF06  F015         	goto	l5352
  2109  002A26                     u5270:
  2110  002A26                     l5356:
  2111  002A26  90D8               	bcf	status,0,c
  2112  002A28  361B               	rlcf	___lldiv@quotient^0,f,c
  2113  002A2A  361C               	rlcf	(___lldiv@quotient+1)^0,f,c
  2114  002A2C  361D               	rlcf	(___lldiv@quotient+2)^0,f,c
  2115  002A2E  361E               	rlcf	(___lldiv@quotient+3)^0,f,c
  2116  002A30  5017               	movf	___lldiv@divisor^0,w,c
  2117  002A32  5C13               	subwf	___lldiv@dividend^0,w,c
  2118  002A34  5018               	movf	(___lldiv@divisor+1)^0,w,c
  2119  002A36  5814               	subwfb	(___lldiv@dividend+1)^0,w,c
  2120  002A38  5019               	movf	(___lldiv@divisor+2)^0,w,c
  2121  002A3A  5815               	subwfb	(___lldiv@dividend+2)^0,w,c
  2122  002A3C  501A               	movf	(___lldiv@divisor+3)^0,w,c
  2123  002A3E  5816               	subwfb	(___lldiv@dividend+3)^0,w,c
  2124  002A40  A0D8               	btfss	status,0,c
  2125  002A42  EF25  F015         	goto	u5281
  2126  002A46  EF27  F015         	goto	u5280
  2127  002A4A                     u5281:
  2128  002A4A  EF30  F015         	goto	l5364
  2129  002A4E                     u5280:
  2130  002A4E  5017               	movf	___lldiv@divisor^0,w,c
  2131  002A50  5E13               	subwf	___lldiv@dividend^0,f,c
  2132  002A52  5018               	movf	(___lldiv@divisor+1)^0,w,c
  2133  002A54  5A14               	subwfb	(___lldiv@dividend+1)^0,f,c
  2134  002A56  5019               	movf	(___lldiv@divisor+2)^0,w,c
  2135  002A58  5A15               	subwfb	(___lldiv@dividend+2)^0,f,c
  2136  002A5A  501A               	movf	(___lldiv@divisor+3)^0,w,c
  2137  002A5C  5A16               	subwfb	(___lldiv@dividend+3)^0,f,c
  2138  002A5E  801B               	bsf	___lldiv@quotient^0,0,c
  2139  002A60                     l5364:
  2140  002A60  90D8               	bcf	status,0,c
  2141  002A62  321A               	rrcf	(___lldiv@divisor+3)^0,f,c
  2142  002A64  3219               	rrcf	(___lldiv@divisor+2)^0,f,c
  2143  002A66  3218               	rrcf	(___lldiv@divisor+1)^0,f,c
  2144  002A68  3217               	rrcf	___lldiv@divisor^0,f,c
  2145  002A6A  2E1F               	decfsz	___lldiv@counter^0,f,c
  2146  002A6C  EF13  F015         	goto	l5356
  2147  002A70                     l834:
  2148  002A70  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  2149  002A74  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  2150  002A78  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  2151  002A7C  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  2152  002A80  0012               	return		;funcret
  2153  002A82                     __end_of___lldiv:
  2154                           	opt callstack 0
  2155                           
  2156 ;; *************** function _sprintf *****************
  2157 ;; Defined at:
  2158 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  s               2    6[BANK0 ] PTR unsigned char 
  2161 ;;		 -> reply(16), lcd_msg(16), lcd_msg1(16), main@lcd_test(16), 
  2162 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  2163 ;;		 -> STR_18(13), STR_17(13), STR_16(13), STR_15(13), 
  2164 ;;		 -> STR_14(15), STR_13(15), STR_12(11), STR_11(12), 
  2165 ;;		 -> STR_10(12), STR_9(12), STR_8(17), STR_7(17), 
  2166 ;;		 -> STR_6(12), STR_5(12), STR_4(23), STR_3(24), 
  2167 ;;		 -> STR_2(9), STR_1(10), 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  f               6   28[BANK0 ] struct _IO_FILE
  2170 ;;  ap              2   26[BANK0 ] PTR void [1]
  2171 ;;		 -> ?_sprintf(2), 
  2172 ;;  ret             2    0        int 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  2    6[BANK0 ] int 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2182 ;;      Params:         0      18       0       0       0       0       0
  2183 ;;      Locals:         0      10       0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0
  2185 ;;      Totals:         0      28       0       0       0       0       0
  2186 ;;Total ram usage:       28 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    8
  2189 ;; This function calls:
  2190 ;;		_vfprintf
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;;		_keypad_update
  2194 ;;		_i2c_driver_motor_control_update
  2195 ;;		_uart_bluetooth_command_handler
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text6
  2200  002CAE                     __ptext6:
  2201                           	opt callstack 0
  2202  002CAE                     _sprintf:
  2203                           	opt callstack 22
  2204  002CAE  0ED4               	movlw	low (?_sprintf+4)
  2205  002CB0  0100               	movlb	0	; () banked
  2206  002CB2  6FE4               	movwf	sprintf@ap& (0+255),b
  2207  002CB4  0E00               	movlw	high (?_sprintf+4)
  2208  002CB6  6FE5               	movwf	(sprintf@ap+1)& (0+255),b
  2209  002CB8  C0D0  F0E6         	movff	sprintf@s,sprintf@f
  2210  002CBC  C0D1  F0E7         	movff	sprintf@s+1,sprintf@f+1
  2211  002CC0                     
  2212                           ; BSR set to: 0
  2213  002CC0  0E00               	movlw	0
  2214  002CC2  6FE9               	movwf	(sprintf@f+3)& (0+255),b
  2215  002CC4  0E00               	movlw	0
  2216  002CC6  6FE8               	movwf	(sprintf@f+2)& (0+255),b
  2217  002CC8                     
  2218                           ; BSR set to: 0
  2219  002CC8  0E00               	movlw	0
  2220  002CCA  6FEB               	movwf	(sprintf@f+5)& (0+255),b
  2221  002CCC  0E00               	movlw	0
  2222  002CCE  6FEA               	movwf	(sprintf@f+4)& (0+255),b
  2223  002CD0                     
  2224                           ; BSR set to: 0
  2225  002CD0  0EE6               	movlw	low sprintf@f
  2226  002CD2  6FCA               	movwf	vfprintf@fp& (0+255),b
  2227  002CD4  0E00               	movlw	high sprintf@f
  2228  002CD6  6FCB               	movwf	(vfprintf@fp+1)& (0+255),b
  2229  002CD8  C0D2  F0CC         	movff	sprintf@fmt,vfprintf@fmt
  2230  002CDC  C0D3  F0CD         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2231  002CE0  0EE4               	movlw	low sprintf@ap
  2232  002CE2  6FCE               	movwf	vfprintf@ap& (0+255),b
  2233  002CE4  0E00               	movlw	high sprintf@ap
  2234  002CE6  6FCF               	movwf	(vfprintf@ap+1)& (0+255),b
  2235  002CE8  ECF7  F015         	call	_vfprintf	;wreg free
  2236  002CEC  0100               	movlb	0	; () banked
  2237  002CEE  51E8               	movf	(sprintf@f+2)& (0+255),w,b
  2238  002CF0  25D0               	addwf	sprintf@s& (0+255),w,b
  2239  002CF2  6ED9               	movwf	fsr2l,c
  2240  002CF4  51E9               	movf	(sprintf@f+3)& (0+255),w,b
  2241  002CF6  21D1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2242  002CF8  6EDA               	movwf	fsr2h,c
  2243  002CFA  0E00               	movlw	0
  2244  002CFC  6EDF               	movwf	indf2,c
  2245  002CFE                     
  2246                           ; BSR set to: 0
  2247  002CFE  0012               	return		;funcret
  2248  002D00                     __end_of_sprintf:
  2249                           	opt callstack 0
  2250                           
  2251 ;; *************** function _vfprintf *****************
  2252 ;; Defined at:
  2253 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2256 ;;		 -> sprintf@f(6), 
  2257 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2258 ;;		 -> STR_18(13), STR_17(13), STR_16(13), STR_15(13), 
  2259 ;;		 -> STR_14(15), STR_13(15), STR_12(11), STR_11(12), 
  2260 ;;		 -> STR_10(12), STR_9(12), STR_8(17), STR_7(17), 
  2261 ;;		 -> STR_6(12), STR_5(12), STR_4(23), STR_3(24), 
  2262 ;;		 -> STR_2(9), STR_1(10), 
  2263 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2264 ;;		 -> sprintf@ap(2), 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  cfmt            2  111[COMRAM] PTR unsigned char 
  2267 ;;		 -> STR_18(13), STR_17(13), STR_16(13), STR_15(13), 
  2268 ;;		 -> STR_14(15), STR_13(15), STR_12(11), STR_11(12), 
  2269 ;;		 -> STR_10(12), STR_9(12), STR_8(17), STR_7(17), 
  2270 ;;		 -> STR_6(12), STR_5(12), STR_4(23), STR_3(24), 
  2271 ;;		 -> STR_2(9), STR_1(10), 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  2    0[BANK0 ] int 
  2274 ;; Registers used:
  2275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2281 ;;      Params:         0       6       0       0       0       0       0
  2282 ;;      Locals:         2       0       0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0
  2284 ;;      Totals:         2       6       0       0       0       0       0
  2285 ;;Total ram usage:        8 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    7
  2288 ;; This function calls:
  2289 ;;		_vfpfcnvrt
  2290 ;; This function is called by:
  2291 ;;		_sprintf
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text7
  2296  002BEE                     __ptext7:
  2297                           	opt callstack 0
  2298  002BEE                     _vfprintf:
  2299                           	opt callstack 22
  2300  002BEE                     
  2301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2302  002BEE  C0CC  F070         	movff	vfprintf@fmt,vfprintf@cfmt
  2303  002BF2  C0CD  F071         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2304  002BF6                     
  2305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2306  002BF6  0E00               	movlw	0
  2307  002BF8  0100               	movlb	0	; () banked
  2308  002BFA  6FA1               	movwf	(_nout+1)& (0+255),b
  2309  002BFC  0E00               	movlw	0
  2310  002BFE  6FA0               	movwf	_nout& (0+255),b
  2311                           
  2312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2313  002C00  EF15  F016         	goto	l5334
  2314  002C04                     l5332:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2318  002C04  C0CA  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  2319  002C08  C0CB  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2320  002C0C  0E70               	movlw	low vfprintf@cfmt
  2321  002C0E  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  2322  002C10  0E00               	movlw	high vfprintf@cfmt
  2323  002C12  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2324  002C14  C0CE  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2325  002C18  C0CF  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2326  002C1C  EC6C  F003         	call	_vfpfcnvrt	;wreg free
  2327  002C20  5049               	movf	?_vfpfcnvrt^0,w,c
  2328  002C22  0100               	movlb	0	; () banked
  2329  002C24  27A0               	addwf	_nout& (0+255),f,b
  2330  002C26  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  2331  002C28  23A1               	addwfc	(_nout+1)& (0+255),f,b
  2332  002C2A                     l5334:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2336  002C2A  C070  FFF6         	movff	vfprintf@cfmt,tblptrl
  2337  002C2E  C071  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2338  002C32                     	if	0	;tblptru may be non-zero
  2339  002C32                     	endif
  2340  002C32                     	if	0	;tblptru may be non-zero
  2341  002C32                     	endif
  2342  002C32  0008               	tblrd		*
  2343  002C34  50F5               	movf	tablat,w,c
  2344  002C36  0900               	iorlw	0
  2345  002C38  A4D8               	btfss	status,2,c
  2346  002C3A  EF21  F016         	goto	u5231
  2347  002C3E  EF23  F016         	goto	u5230
  2348  002C42                     u5231:
  2349  002C42  EF02  F016         	goto	l5332
  2350  002C46                     u5230:
  2351  002C46                     
  2352                           ; BSR set to: 0
  2353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2354  002C46  C0A0  F0CA         	movff	_nout,?_vfprintf
  2355  002C4A  C0A1  F0CB         	movff	_nout+1,?_vfprintf+1
  2356  002C4E                     
  2357                           ; BSR set to: 0
  2358  002C4E  0012               	return		;funcret
  2359  002C50                     __end_of_vfprintf:
  2360                           	opt callstack 0
  2361                           
  2362 ;; *************** function _vfpfcnvrt *****************
  2363 ;; Defined at:
  2364 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  2367 ;;		 -> sprintf@f(6), 
  2368 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  2369 ;;		 -> vfprintf@cfmt(2), 
  2370 ;;  ap              2   76[COMRAM] PTR PTR void 
  2371 ;;		 -> sprintf@ap(2), 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  llu             8  103[COMRAM] unsigned long long 
  2374 ;;  ll              8   94[COMRAM] long long 
  2375 ;;  f               4    0        long long 
  2376 ;;  vp              3    0        PTR void 
  2377 ;;  ct              3    0        unsigned char [3]
  2378 ;;  cp              3    0        PTR unsigned char 
  2379 ;;  i               2    0        int 
  2380 ;;  done            2    0        int 
  2381 ;;  c               1  102[COMRAM] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  2   72[COMRAM] int 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2391 ;;      Params:         6       0       0       0       0       0       0
  2392 ;;      Locals:        19       0       0       0       0       0       0
  2393 ;;      Temps:         14       0       0       0       0       0       0
  2394 ;;      Totals:        39       0       0       0       0       0       0
  2395 ;;Total ram usage:       39 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    6
  2398 ;; This function calls:
  2399 ;;		_atoi
  2400 ;;		_dtoa
  2401 ;;		_fputc
  2402 ;;		_isdigit
  2403 ;;		_strncmp
  2404 ;;		_utoa
  2405 ;;		_xtoa
  2406 ;; This function is called by:
  2407 ;;		_vfprintf
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text8
  2412  0006D8                     __ptext8:
  2413                           	opt callstack 0
  2414  0006D8                     _vfpfcnvrt:
  2415                           	opt callstack 22
  2416  0006D8                     
  2417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2418  0006D8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2419  0006DC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2420  0006E0  CFDE FFF6          	movff	postinc2,tblptrl
  2421  0006E4  CFDD FFF7          	movff	postdec2,tblptrh
  2422  0006E8                     	if	0	;tblptru may be non-zero
  2423  0006E8                     	endif
  2424  0006E8                     	if	0	;tblptru may be non-zero
  2425  0006E8                     	endif
  2426  0006E8  0008               	tblrd		*
  2427  0006EA  50F5               	movf	tablat,w,c
  2428  0006EC  0A25               	xorlw	37
  2429  0006EE  A4D8               	btfss	status,2,c
  2430  0006F0  EF7C  F003         	goto	u5001
  2431  0006F4  EF7E  F003         	goto	u5000
  2432  0006F8                     u5001:
  2433  0006F8  EFA6  F006         	goto	l5242
  2434  0006FC                     u5000:
  2435  0006FC                     
  2436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2437  0006FC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2438  000700  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2439  000704  2ADE               	incf	postinc2,f,c
  2440  000706  0E00               	movlw	0
  2441  000708  22DD               	addwfc	postdec2,f,c
  2442  00070A                     
  2443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2444  00070A  0E00               	movlw	0
  2445  00070C  0100               	movlb	0	; () banked
  2446  00070E  6FA3               	movwf	(_width+1)& (0+255),b
  2447  000710  0E00               	movlw	0
  2448  000712  6FA2               	movwf	_width& (0+255),b
  2449  000714  C0A2  F074         	movff	_width,_flags
  2450  000718  C0A3  F075         	movff	_width+1,_flags+1
  2451  00071C                     
  2452                           ; BSR set to: 0
  2453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2454  00071C  6872               	setf	_prec^0,c
  2455  00071E  6873               	setf	(_prec+1)^0,c
  2456  000720                     
  2457                           ; BSR set to: 0
  2458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2459  000720  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2460  000724  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2461  000728  CFDE FFF6          	movff	postinc2,tblptrl
  2462  00072C  CFDD FFF7          	movff	postdec2,tblptrh
  2463  000730                     	if	0	;tblptru may be non-zero
  2464  000730                     	endif
  2465  000730                     	if	0	;tblptru may be non-zero
  2466  000730                     	endif
  2467  000730  0008               	tblrd		*
  2468  000732  50F5               	movf	tablat,w,c
  2469  000734  0A2A               	xorlw	42
  2470  000736  A4D8               	btfss	status,2,c
  2471  000738  EFA0  F003         	goto	u5011
  2472  00073C  EFA2  F003         	goto	u5010
  2473  000740                     u5011:
  2474  000740  EFCB  F003         	goto	l5152
  2475  000744                     u5010:
  2476  000744                     
  2477                           ; BSR set to: 0
  2478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2479  000744  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2480  000748  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2481  00074C  2ADE               	incf	postinc2,f,c
  2482  00074E  0E00               	movlw	0
  2483  000750  22DD               	addwfc	postdec2,f,c
  2484                           
  2485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2486  000752  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2487  000756  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2488  00075A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2489  00075E  0E02               	movlw	2
  2490  000760  26DE               	addwf	postinc2,f,c
  2491  000762  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2492  000766  0E00               	movlw	0
  2493  000768  22DD               	addwfc	postdec2,f,c
  2494  00076A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2495  00076E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2496  000772  CFDE F0A2          	movff	postinc2,_width
  2497  000776  CFDD F0A3          	movff	postdec2,_width+1
  2498  00077A                     
  2499                           ; BSR set to: 0
  2500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2501  00077A  BFA3               	btfsc	(_width+1)& (0+255),7,b
  2502  00077C  EFC4  F003         	goto	u5020
  2503  000780  EFC2  F003         	goto	u5021
  2504  000784                     u5021:
  2505  000784  EF0E  F004         	goto	l5162
  2506  000788                     u5020:
  2507  000788                     
  2508                           ; BSR set to: 0
  2509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2510  000788  8074               	bsf	_flags^0,0,c
  2511                           
  2512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2513  00078A  6DA2               	negf	_width& (0+255),b
  2514  00078C  1FA3               	comf	(_width+1)& (0+255),f,b
  2515  00078E  B0D8               	btfsc	status,0,c
  2516  000790  2BA3               	incf	(_width+1)& (0+255),f,b
  2517  000792  EF0E  F004         	goto	l5162
  2518  000796                     l5152:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2522  000796  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2523  00079A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2524  00079E  CFDE F00E          	movff	postinc2,atoi@s
  2525  0007A2  CFDD F00F          	movff	postdec2,atoi@s+1
  2526  0007A6  ECD9  F00D         	call	_atoi	;wreg free
  2527  0007AA  C00E  F0A2         	movff	?_atoi,_width
  2528  0007AE  C00F  F0A3         	movff	?_atoi+1,_width+1
  2529                           
  2530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2531  0007B2  EFE2  F003         	goto	l5156
  2532  0007B6                     l5154:
  2533                           
  2534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2535  0007B6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2536  0007BA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2537  0007BE  2ADE               	incf	postinc2,f,c
  2538  0007C0  0E00               	movlw	0
  2539  0007C2  22DD               	addwfc	postdec2,f,c
  2540  0007C4                     l5156:
  2541  0007C4  0ED0               	movlw	208
  2542  0007C6  6E4F               	movwf	??_vfpfcnvrt^0,c
  2543  0007C8  0EFF               	movlw	255
  2544  0007CA  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  2545  0007CC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2546  0007D0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2547  0007D4  CFDE FFF6          	movff	postinc2,tblptrl
  2548  0007D8  CFDD FFF7          	movff	postdec2,tblptrh
  2549  0007DC                     	if	0	;tblptru may be non-zero
  2550  0007DC                     	endif
  2551  0007DC                     	if	0	;tblptru may be non-zero
  2552  0007DC                     	endif
  2553  0007DC  0008               	tblrd		*
  2554  0007DE  50F5               	movf	tablat,w,c
  2555  0007E0  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  2556  0007E2  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  2557  0007E4  504F               	movf	??_vfpfcnvrt^0,w,c
  2558  0007E6  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2559  0007E8  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2560  0007EA  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2561  0007EC  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  2562  0007EE  E10A               	bnz	u5030
  2563  0007F0  0E0A               	movlw	10
  2564  0007F2  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2565  0007F4  A0D8               	btfss	status,0,c
  2566  0007F6  EFFF  F003         	goto	u5031
  2567  0007FA  EF02  F004         	goto	u5030
  2568  0007FE                     u5031:
  2569  0007FE  0E01               	movlw	1
  2570  000800  EF03  F004         	goto	u5040
  2571  000804                     u5030:
  2572  000804  0E00               	movlw	0
  2573  000806                     u5040:
  2574  000806  6E5D               	movwf	_vfpfcnvrt$1008^0,c
  2575  000808  6A5E               	clrf	(_vfpfcnvrt$1008+1)^0,c
  2576  00080A  505D               	movf	_vfpfcnvrt$1008^0,w,c
  2577  00080C  105E               	iorwf	(_vfpfcnvrt$1008+1)^0,w,c
  2578  00080E  A4D8               	btfss	status,2,c
  2579  000810  EF0C  F004         	goto	u5051
  2580  000814  EF0E  F004         	goto	u5050
  2581  000818                     u5051:
  2582  000818  EFDB  F003         	goto	l5154
  2583  00081C                     u5050:
  2584  00081C                     l5162:
  2585                           
  2586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2587  00081C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2588  000820  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2589  000824  CFDE FFF6          	movff	postinc2,tblptrl
  2590  000828  CFDD FFF7          	movff	postdec2,tblptrh
  2591  00082C                     	if	0	;tblptru may be non-zero
  2592  00082C                     	endif
  2593  00082C                     	if	0	;tblptru may be non-zero
  2594  00082C                     	endif
  2595  00082C  0008               	tblrd		*
  2596  00082E  50F5               	movf	tablat,w,c
  2597  000830  0A64               	xorlw	100
  2598  000832  B4D8               	btfsc	status,2,c
  2599  000834  EF1E  F004         	goto	u5061
  2600  000838  EF20  F004         	goto	u5060
  2601  00083C                     u5061:
  2602  00083C  EF32  F004         	goto	l5166
  2603  000840                     u5060:
  2604  000840  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2605  000844  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2606  000848  CFDE FFF6          	movff	postinc2,tblptrl
  2607  00084C  CFDD FFF7          	movff	postdec2,tblptrh
  2608  000850                     	if	0	;tblptru may be non-zero
  2609  000850                     	endif
  2610  000850                     	if	0	;tblptru may be non-zero
  2611  000850                     	endif
  2612  000850  0008               	tblrd		*
  2613  000852  50F5               	movf	tablat,w,c
  2614  000854  0A69               	xorlw	105
  2615  000856  A4D8               	btfss	status,2,c
  2616  000858  EF30  F004         	goto	u5071
  2617  00085C  EF32  F004         	goto	u5070
  2618  000860                     u5071:
  2619  000860  EF72  F004         	goto	l5172
  2620  000864                     u5070:
  2621  000864                     l5166:
  2622                           
  2623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2624  000864  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2625  000868  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2626  00086C  2ADE               	incf	postinc2,f,c
  2627  00086E  0E00               	movlw	0
  2628  000870  22DD               	addwfc	postdec2,f,c
  2629                           
  2630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2631  000872  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2632  000876  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2633  00087A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2634  00087E  0E02               	movlw	2
  2635  000880  26DE               	addwf	postinc2,f,c
  2636  000882  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2637  000886  0E00               	movlw	0
  2638  000888  22DD               	addwfc	postdec2,f,c
  2639  00088A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2640  00088E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2641  000892  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  2642  000896  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  2643  00089A  0E00               	movlw	0
  2644  00089C  BE60               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2645  00089E  0EFF               	movlw	-1
  2646  0008A0  6E61               	movwf	(vfpfcnvrt@ll+2)^0,c
  2647  0008A2  6E62               	movwf	(vfpfcnvrt@ll+3)^0,c
  2648  0008A4  6E63               	movwf	(vfpfcnvrt@ll+4)^0,c
  2649  0008A6  6E64               	movwf	(vfpfcnvrt@ll+5)^0,c
  2650  0008A8  6E65               	movwf	(vfpfcnvrt@ll+6)^0,c
  2651  0008AA  6E66               	movwf	(vfpfcnvrt@ll+7)^0,c
  2652  0008AC                     l5168:
  2653                           
  2654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2655  0008AC  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  2656  0008B0  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2657  0008B4  C05F  F024         	movff	vfpfcnvrt@ll,dtoa@d
  2658  0008B8  C060  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2659  0008BC  C061  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2660  0008C0  C062  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2661  0008C4  C063  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2662  0008C8  C064  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2663  0008CC  C065  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2664  0008D0  C066  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2665  0008D4  EC49  F008         	call	_dtoa	;wreg free
  2666  0008D8  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  2667  0008DC  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2668  0008E0  EFC1  F006         	goto	l786
  2669  0008E4                     l5172:
  2670                           
  2671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
  2672  0008E4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2673  0008E8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2674  0008EC  CFDE F007          	movff	postinc2,strncmp@_l
  2675  0008F0  CFDD F008          	movff	postdec2,strncmp@_l+1
  2676  0008F4  0E9E               	movlw	low (STR_9+9)
  2677  0008F6  6E09               	movwf	strncmp@_r^0,c
  2678  0008F8  0E06               	movlw	high (STR_9+9)
  2679  0008FA  6E0A               	movwf	(strncmp@_r+1)^0,c
  2680  0008FC  0E00               	movlw	0
  2681  0008FE  6E0C               	movwf	(strncmp@n+1)^0,c
  2682  000900  0E02               	movlw	2
  2683  000902  6E0B               	movwf	strncmp@n^0,c
  2684  000904  ECE5  F012         	call	_strncmp	;wreg free
  2685  000908  5007               	movf	?_strncmp^0,w,c
  2686  00090A  1008               	iorwf	(?_strncmp+1)^0,w,c
  2687  00090C  B4D8               	btfsc	status,2,c
  2688  00090E  EF8B  F004         	goto	u5081
  2689  000912  EF8D  F004         	goto	u5080
  2690  000916                     u5081:
  2691  000916  EFA8  F004         	goto	l5176
  2692  00091A                     u5080:
  2693  00091A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2694  00091E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2695  000922  CFDE F007          	movff	postinc2,strncmp@_l
  2696  000926  CFDD F008          	movff	postdec2,strncmp@_l+1
  2697  00092A  0ECE               	movlw	low STR_23
  2698  00092C  6E09               	movwf	strncmp@_r^0,c
  2699  00092E  0E06               	movlw	high STR_23
  2700  000930  6E0A               	movwf	(strncmp@_r+1)^0,c
  2701  000932  0E00               	movlw	0
  2702  000934  6E0C               	movwf	(strncmp@n+1)^0,c
  2703  000936  0E02               	movlw	2
  2704  000938  6E0B               	movwf	strncmp@n^0,c
  2705  00093A  ECE5  F012         	call	_strncmp	;wreg free
  2706  00093E  5007               	movf	?_strncmp^0,w,c
  2707  000940  1008               	iorwf	(?_strncmp+1)^0,w,c
  2708  000942  A4D8               	btfss	status,2,c
  2709  000944  EFA6  F004         	goto	u5091
  2710  000948  EFA8  F004         	goto	u5090
  2711  00094C                     u5091:
  2712  00094C  EFEB  F004         	goto	l5182
  2713  000950                     u5090:
  2714  000950                     l5176:
  2715                           
  2716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
  2717  000950  0E02               	movlw	2
  2718  000952  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2719  000956  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2720  00095A  26DE               	addwf	postinc2,f,c
  2721  00095C  0E00               	movlw	0
  2722  00095E  22DD               	addwfc	postdec2,f,c
  2723                           
  2724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  2725  000960  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2726  000964  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2727  000968  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2728  00096C  0E04               	movlw	4
  2729  00096E  26DE               	addwf	postinc2,f,c
  2730  000970  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2731  000974  0E00               	movlw	0
  2732  000976  22DD               	addwfc	postdec2,f,c
  2733  000978  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2734  00097C  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2735  000980  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  2736  000984  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
  2737  000988  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
  2738  00098C  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
  2739  000990  C051  F055         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2740  000994  C052  F056         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2741  000998  C053  F057         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2742  00099C  C054  F058         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2743  0009A0  6A59               	clrf	(??_vfpfcnvrt+10)^0,c
  2744  0009A2  BE58               	btfsc	(??_vfpfcnvrt+9)^0,7,c
  2745  0009A4  6859               	setf	(??_vfpfcnvrt+10)^0,c
  2746  0009A6  C059  F05A         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2747  0009AA  C059  F05B         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2748  0009AE  C059  F05C         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2749  0009B2  C055  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2750  0009B6  C056  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2751  0009BA  C057  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2752  0009BE  C058  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2753  0009C2  C059  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2754  0009C6  C05A  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2755  0009CA  C05B  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2756  0009CE  C05C  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2757  0009D2  EF56  F004         	goto	l5168
  2758  0009D6                     l5182:
  2759                           
  2760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  2761  0009D6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2762  0009DA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2763  0009DE  CFDE FFF6          	movff	postinc2,tblptrl
  2764  0009E2  CFDD FFF7          	movff	postdec2,tblptrh
  2765  0009E6                     	if	0	;tblptru may be non-zero
  2766  0009E6                     	endif
  2767  0009E6                     	if	0	;tblptru may be non-zero
  2768  0009E6                     	endif
  2769  0009E6  0008               	tblrd		*
  2770  0009E8  50F5               	movf	tablat,w,c
  2771  0009EA  0A75               	xorlw	117
  2772  0009EC  A4D8               	btfss	status,2,c
  2773  0009EE  EFFB  F004         	goto	u5101
  2774  0009F2  EFFD  F004         	goto	u5100
  2775  0009F6                     u5101:
  2776  0009F6  EF3E  F005         	goto	l5190
  2777  0009FA                     u5100:
  2778  0009FA                     
  2779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  2780  0009FA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2781  0009FE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2782  000A02  2ADE               	incf	postinc2,f,c
  2783  000A04  0E00               	movlw	0
  2784  000A06  22DD               	addwfc	postdec2,f,c
  2785                           
  2786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2787  000A08  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2788  000A0C  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2789  000A10  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2790  000A14  0E02               	movlw	2
  2791  000A16  26DE               	addwf	postinc2,f,c
  2792  000A18  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2793  000A1C  0E00               	movlw	0
  2794  000A1E  22DD               	addwfc	postdec2,f,c
  2795  000A20  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2796  000A24  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2797  000A28  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  2798  000A2C  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  2799  000A30  C051  F068         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2800  000A34  C052  F069         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2801  000A38  6A6A               	clrf	(vfpfcnvrt@llu+2)^0,c
  2802  000A3A  6A6B               	clrf	(vfpfcnvrt@llu+3)^0,c
  2803  000A3C  6A6C               	clrf	(vfpfcnvrt@llu+4)^0,c
  2804  000A3E  6A6D               	clrf	(vfpfcnvrt@llu+5)^0,c
  2805  000A40  6A6E               	clrf	(vfpfcnvrt@llu+6)^0,c
  2806  000A42  6A6F               	clrf	(vfpfcnvrt@llu+7)^0,c
  2807  000A44                     l5186:
  2808                           
  2809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  2810  000A44  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
  2811  000A48  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2812  000A4C  C068  F024         	movff	vfpfcnvrt@llu,utoa@d
  2813  000A50  C069  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2814  000A54  C06A  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2815  000A58  C06B  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2816  000A5C  C06C  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2817  000A60  C06D  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2818  000A64  C06E  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2819  000A68  C06F  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2820  000A6C  EC22  F00B         	call	_utoa	;wreg free
  2821  000A70  C022  F049         	movff	?_utoa,?_vfpfcnvrt
  2822  000A74  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
  2823  000A78  EFC1  F006         	goto	l786
  2824  000A7C                     l5190:
  2825                           
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  2827  000A7C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2828  000A80  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2829  000A84  CFDE F007          	movff	postinc2,strncmp@_l
  2830  000A88  CFDD F008          	movff	postdec2,strncmp@_l+1
  2831  000A8C  0ED1               	movlw	low STR_28
  2832  000A8E  6E09               	movwf	strncmp@_r^0,c
  2833  000A90  0E06               	movlw	high STR_28
  2834  000A92  6E0A               	movwf	(strncmp@_r+1)^0,c
  2835  000A94  0E00               	movlw	0
  2836  000A96  6E0C               	movwf	(strncmp@n+1)^0,c
  2837  000A98  0E02               	movlw	2
  2838  000A9A  6E0B               	movwf	strncmp@n^0,c
  2839  000A9C  ECE5  F012         	call	_strncmp	;wreg free
  2840  000AA0  5007               	movf	?_strncmp^0,w,c
  2841  000AA2  1008               	iorwf	(?_strncmp+1)^0,w,c
  2842  000AA4  A4D8               	btfss	status,2,c
  2843  000AA6  EF57  F005         	goto	u5111
  2844  000AAA  EF59  F005         	goto	u5110
  2845  000AAE                     u5111:
  2846  000AAE  EF87  F005         	goto	l5198
  2847  000AB2                     u5110:
  2848  000AB2                     
  2849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  2850  000AB2  0E02               	movlw	2
  2851  000AB4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2852  000AB8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2853  000ABC  26DE               	addwf	postinc2,f,c
  2854  000ABE  0E00               	movlw	0
  2855  000AC0  22DD               	addwfc	postdec2,f,c
  2856                           
  2857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  2858  000AC2  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2859  000AC6  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2860  000ACA  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2861  000ACE  0E04               	movlw	4
  2862  000AD0  26DE               	addwf	postinc2,f,c
  2863  000AD2  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2864  000AD6  0E00               	movlw	0
  2865  000AD8  22DD               	addwfc	postdec2,f,c
  2866  000ADA  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2867  000ADE  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2868  000AE2  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  2869  000AE6  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
  2870  000AEA  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
  2871  000AEE  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
  2872  000AF2  5051               	movf	(??_vfpfcnvrt+2)^0,w,c
  2873  000AF4  6E68               	movwf	vfpfcnvrt@llu^0,c
  2874  000AF6  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  2875  000AF8  6E69               	movwf	(vfpfcnvrt@llu+1)^0,c
  2876  000AFA  5053               	movf	(??_vfpfcnvrt+4)^0,w,c
  2877  000AFC  6E6A               	movwf	(vfpfcnvrt@llu+2)^0,c
  2878  000AFE  5054               	movf	(??_vfpfcnvrt+5)^0,w,c
  2879  000B00  6E6B               	movwf	(vfpfcnvrt@llu+3)^0,c
  2880  000B02  6A6C               	clrf	(vfpfcnvrt@llu+4)^0,c
  2881  000B04  6A6D               	clrf	(vfpfcnvrt@llu+5)^0,c
  2882  000B06  6A6E               	clrf	(vfpfcnvrt@llu+6)^0,c
  2883  000B08  6A6F               	clrf	(vfpfcnvrt@llu+7)^0,c
  2884  000B0A  EF22  F005         	goto	l5186
  2885  000B0E                     l5198:
  2886                           
  2887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2888  000B0E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2889  000B12  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2890  000B16  CFDE FFF6          	movff	postinc2,tblptrl
  2891  000B1A  CFDD FFF7          	movff	postdec2,tblptrh
  2892  000B1E                     	if	0	;tblptru may be non-zero
  2893  000B1E                     	endif
  2894  000B1E                     	if	0	;tblptru may be non-zero
  2895  000B1E                     	endif
  2896  000B1E  0008               	tblrd		*
  2897  000B20  50F5               	movf	tablat,w,c
  2898  000B22  0A78               	xorlw	120
  2899  000B24  B4D8               	btfsc	status,2,c
  2900  000B26  EF97  F005         	goto	u5121
  2901  000B2A  EF99  F005         	goto	u5120
  2902  000B2E                     u5121:
  2903  000B2E  EFAB  F005         	goto	l5202
  2904  000B32                     u5120:
  2905  000B32  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2906  000B36  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2907  000B3A  CFDE FFF6          	movff	postinc2,tblptrl
  2908  000B3E  CFDD FFF7          	movff	postdec2,tblptrh
  2909  000B42                     	if	0	;tblptru may be non-zero
  2910  000B42                     	endif
  2911  000B42                     	if	0	;tblptru may be non-zero
  2912  000B42                     	endif
  2913  000B42  0008               	tblrd		*
  2914  000B44  50F5               	movf	tablat,w,c
  2915  000B46  0A58               	xorlw	88
  2916  000B48  A4D8               	btfss	status,2,c
  2917  000B4A  EFA9  F005         	goto	u5131
  2918  000B4E  EFAB  F005         	goto	u5130
  2919  000B52                     u5131:
  2920  000B52  EFF9  F005         	goto	l5212
  2921  000B56                     u5130:
  2922  000B56                     l5202:
  2923                           
  2924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  2925  000B56  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2926  000B5A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2927  000B5E  CFDE FFF6          	movff	postinc2,tblptrl
  2928  000B62  CFDD FFF7          	movff	postdec2,tblptrh
  2929  000B66                     	if	0	;tblptru may be non-zero
  2930  000B66                     	endif
  2931  000B66                     	if	0	;tblptru may be non-zero
  2932  000B66                     	endif
  2933  000B66  0008               	tblrd		*
  2934  000B68  CFF5 F067          	movff	tablat,vfpfcnvrt@c
  2935  000B6C                     
  2936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  2937  000B6C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2938  000B70  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2939  000B74  2ADE               	incf	postinc2,f,c
  2940  000B76  0E00               	movlw	0
  2941  000B78  22DD               	addwfc	postdec2,f,c
  2942  000B7A                     
  2943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2944  000B7A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2945  000B7E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2946  000B82  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2947  000B86  0E02               	movlw	2
  2948  000B88  26DE               	addwf	postinc2,f,c
  2949  000B8A  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2950  000B8E  0E00               	movlw	0
  2951  000B90  22DD               	addwfc	postdec2,f,c
  2952  000B92  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2953  000B96  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2954  000B9A  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  2955  000B9E  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  2956  000BA2  C051  F068         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2957  000BA6  C052  F069         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2958  000BAA  6A6A               	clrf	(vfpfcnvrt@llu+2)^0,c
  2959  000BAC  6A6B               	clrf	(vfpfcnvrt@llu+3)^0,c
  2960  000BAE  6A6C               	clrf	(vfpfcnvrt@llu+4)^0,c
  2961  000BB0  6A6D               	clrf	(vfpfcnvrt@llu+5)^0,c
  2962  000BB2  6A6E               	clrf	(vfpfcnvrt@llu+6)^0,c
  2963  000BB4  6A6F               	clrf	(vfpfcnvrt@llu+7)^0,c
  2964  000BB6                     l5208:
  2965                           
  2966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  2967  000BB6  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  2968  000BBA  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2969  000BBE  C068  F024         	movff	vfpfcnvrt@llu,xtoa@d
  2970  000BC2  C069  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2971  000BC6  C06A  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2972  000BCA  C06B  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2973  000BCE  C06C  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2974  000BD2  C06D  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2975  000BD6  C06E  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2976  000BDA  C06F  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2977  000BDE  C067  F02C         	movff	vfpfcnvrt@c,xtoa@x
  2978  000BE2  ECB8  F009         	call	_xtoa	;wreg free
  2979  000BE6  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  2980  000BEA  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2981  000BEE  EFC1  F006         	goto	l786
  2982  000BF2                     l5212:
  2983                           
  2984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
  2985  000BF2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2986  000BF6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2987  000BFA  CFDE F007          	movff	postinc2,strncmp@_l
  2988  000BFE  CFDD F008          	movff	postdec2,strncmp@_l+1
  2989  000C02  0ED4               	movlw	low STR_33
  2990  000C04  6E09               	movwf	strncmp@_r^0,c
  2991  000C06  0E06               	movlw	high STR_33
  2992  000C08  6E0A               	movwf	(strncmp@_r+1)^0,c
  2993  000C0A  0E00               	movlw	0
  2994  000C0C  6E0C               	movwf	(strncmp@n+1)^0,c
  2995  000C0E  0E02               	movlw	2
  2996  000C10  6E0B               	movwf	strncmp@n^0,c
  2997  000C12  ECE5  F012         	call	_strncmp	;wreg free
  2998  000C16  5007               	movf	?_strncmp^0,w,c
  2999  000C18  1008               	iorwf	(?_strncmp+1)^0,w,c
  3000  000C1A  B4D8               	btfsc	status,2,c
  3001  000C1C  EF12  F006         	goto	u5141
  3002  000C20  EF14  F006         	goto	u5140
  3003  000C24                     u5141:
  3004  000C24  EF2F  F006         	goto	l5216
  3005  000C28                     u5140:
  3006  000C28  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3007  000C2C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3008  000C30  CFDE F007          	movff	postinc2,strncmp@_l
  3009  000C34  CFDD F008          	movff	postdec2,strncmp@_l+1
  3010  000C38  0ECB               	movlw	low STR_37
  3011  000C3A  6E09               	movwf	strncmp@_r^0,c
  3012  000C3C  0E06               	movlw	high STR_37
  3013  000C3E  6E0A               	movwf	(strncmp@_r+1)^0,c
  3014  000C40  0E00               	movlw	0
  3015  000C42  6E0C               	movwf	(strncmp@n+1)^0,c
  3016  000C44  0E02               	movlw	2
  3017  000C46  6E0B               	movwf	strncmp@n^0,c
  3018  000C48  ECE5  F012         	call	_strncmp	;wreg free
  3019  000C4C  5007               	movf	?_strncmp^0,w,c
  3020  000C4E  1008               	iorwf	(?_strncmp+1)^0,w,c
  3021  000C50  A4D8               	btfss	status,2,c
  3022  000C52  EF2D  F006         	goto	u5151
  3023  000C56  EF2F  F006         	goto	u5150
  3024  000C5A                     u5151:
  3025  000C5A  EF70  F006         	goto	l5226
  3026  000C5E                     u5150:
  3027  000C5E                     l5216:
  3028                           
  3029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
  3030  000C5E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3031  000C62  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3032  000C66  CFDE F04F          	movff	postinc2,??_vfpfcnvrt
  3033  000C6A  CFDD F050          	movff	postdec2,??_vfpfcnvrt+1
  3034  000C6E  0E01               	movlw	1
  3035  000C70  264F               	addwf	??_vfpfcnvrt^0,f,c
  3036  000C72  0E00               	movlw	0
  3037  000C74  2250               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3038  000C76  C04F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3039  000C7A  C050  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3040  000C7E                     	if	0	;tblptru may be non-zero
  3041  000C7E                     	endif
  3042  000C7E                     	if	0	;tblptru may be non-zero
  3043  000C7E                     	endif
  3044  000C7E  0008               	tblrd		*
  3045  000C80  CFF5 F067          	movff	tablat,vfpfcnvrt@c
  3046  000C84                     
  3047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
  3048  000C84  0E02               	movlw	2
  3049  000C86  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3050  000C8A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3051  000C8E  26DE               	addwf	postinc2,f,c
  3052  000C90  0E00               	movlw	0
  3053  000C92  22DD               	addwfc	postdec2,f,c
  3054  000C94                     
  3055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  3056  000C94  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3057  000C98  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3058  000C9C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3059  000CA0  0E04               	movlw	4
  3060  000CA2  26DE               	addwf	postinc2,f,c
  3061  000CA4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3062  000CA8  0E00               	movlw	0
  3063  000CAA  22DD               	addwfc	postdec2,f,c
  3064  000CAC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3065  000CB0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3066  000CB4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  3067  000CB8  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
  3068  000CBC  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
  3069  000CC0  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
  3070  000CC4  5051               	movf	(??_vfpfcnvrt+2)^0,w,c
  3071  000CC6  6E68               	movwf	vfpfcnvrt@llu^0,c
  3072  000CC8  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  3073  000CCA  6E69               	movwf	(vfpfcnvrt@llu+1)^0,c
  3074  000CCC  5053               	movf	(??_vfpfcnvrt+4)^0,w,c
  3075  000CCE  6E6A               	movwf	(vfpfcnvrt@llu+2)^0,c
  3076  000CD0  5054               	movf	(??_vfpfcnvrt+5)^0,w,c
  3077  000CD2  6E6B               	movwf	(vfpfcnvrt@llu+3)^0,c
  3078  000CD4  6A6C               	clrf	(vfpfcnvrt@llu+4)^0,c
  3079  000CD6  6A6D               	clrf	(vfpfcnvrt@llu+5)^0,c
  3080  000CD8  6A6E               	clrf	(vfpfcnvrt@llu+6)^0,c
  3081  000CDA  6A6F               	clrf	(vfpfcnvrt@llu+7)^0,c
  3082  000CDC  EFDB  F005         	goto	l5208
  3083  000CE0                     l5226:
  3084                           
  3085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3086  000CE0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3087  000CE4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3088  000CE8  CFDE FFF6          	movff	postinc2,tblptrl
  3089  000CEC  CFDD FFF7          	movff	postdec2,tblptrh
  3090  000CF0                     	if	0	;tblptru may be non-zero
  3091  000CF0                     	endif
  3092  000CF0                     	if	0	;tblptru may be non-zero
  3093  000CF0                     	endif
  3094  000CF0  0008               	tblrd		*
  3095  000CF2  50F5               	movf	tablat,w,c
  3096  000CF4  0A25               	xorlw	37
  3097  000CF6  A4D8               	btfss	status,2,c
  3098  000CF8  EF80  F006         	goto	u5161
  3099  000CFC  EF82  F006         	goto	u5160
  3100  000D00                     u5161:
  3101  000D00  EF99  F006         	goto	l5236
  3102  000D04                     u5160:
  3103  000D04                     
  3104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3105  000D04  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3106  000D08  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3107  000D0C  2ADE               	incf	postinc2,f,c
  3108  000D0E  0E00               	movlw	0
  3109  000D10  22DD               	addwfc	postdec2,f,c
  3110  000D12                     
  3111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3112  000D12  0E00               	movlw	0
  3113  000D14  6E08               	movwf	(fputc@c+1)^0,c
  3114  000D16  0E25               	movlw	37
  3115  000D18  6E07               	movwf	fputc@c^0,c
  3116  000D1A  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3117  000D1E  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3118  000D22  EC29  F014         	call	_fputc	;wreg free
  3119  000D26                     l5232:
  3120                           
  3121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3122  000D26  0E00               	movlw	0
  3123  000D28  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3124  000D2A  0E01               	movlw	1
  3125  000D2C  6E49               	movwf	?_vfpfcnvrt^0,c
  3126  000D2E  EFC1  F006         	goto	l786
  3127  000D32                     l5236:
  3128                           
  3129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3130  000D32  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3131  000D36  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3132  000D3A  2ADE               	incf	postinc2,f,c
  3133  000D3C  0E00               	movlw	0
  3134  000D3E  22DD               	addwfc	postdec2,f,c
  3135  000D40                     
  3136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3137  000D40  0E00               	movlw	0
  3138  000D42  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3139  000D44  0E00               	movlw	0
  3140  000D46  6E49               	movwf	?_vfpfcnvrt^0,c
  3141  000D48  EFC1  F006         	goto	l786
  3142  000D4C                     l5242:
  3143                           
  3144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3145  000D4C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3146  000D50  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3147  000D54  CFDE FFF6          	movff	postinc2,tblptrl
  3148  000D58  CFDD FFF7          	movff	postdec2,tblptrh
  3149  000D5C                     	if	0	;tblptru may be non-zero
  3150  000D5C                     	endif
  3151  000D5C                     	if	0	;tblptru may be non-zero
  3152  000D5C                     	endif
  3153  000D5C  0008               	tblrd		*
  3154  000D5E  50F5               	movf	tablat,w,c
  3155  000D60  6E07               	movwf	fputc@c^0,c
  3156  000D62  6A08               	clrf	(fputc@c+1)^0,c
  3157  000D64  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3158  000D68  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3159  000D6C  EC29  F014         	call	_fputc	;wreg free
  3160  000D70                     
  3161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3162  000D70  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3163  000D74  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3164  000D78  2ADE               	incf	postinc2,f,c
  3165  000D7A  0E00               	movlw	0
  3166  000D7C  22DD               	addwfc	postdec2,f,c
  3167  000D7E  EF93  F006         	goto	l5232
  3168  000D82                     l786:
  3169  000D82  0012               	return		;funcret
  3170  000D84                     __end_of_vfpfcnvrt:
  3171                           	opt callstack 0
  3172                           
  3173 ;; *************** function _xtoa *****************
  3174 ;; Defined at:
  3175 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3178 ;;		 -> sprintf@f(6), 
  3179 ;;  d               8   35[COMRAM] unsigned long long 
  3180 ;;  x               1   43[COMRAM] unsigned char 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  n               8   60[COMRAM] unsigned long long 
  3183 ;;  c               2   70[COMRAM] int 
  3184 ;;  i               2   68[COMRAM] int 
  3185 ;;  w               2   58[COMRAM] int 
  3186 ;;  p               2   56[COMRAM] int 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2   33[COMRAM] int 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3196 ;;      Params:        11       0       0       0       0       0       0
  3197 ;;      Locals:        20       0       0       0       0       0       0
  3198 ;;      Temps:          8       0       0       0       0       0       0
  3199 ;;      Totals:        39       0       0       0       0       0       0
  3200 ;;Total ram usage:       39 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    5
  3203 ;; This function calls:
  3204 ;;		_isalpha
  3205 ;;		_isupper
  3206 ;;		_pad
  3207 ;;		_toupper
  3208 ;; This function is called by:
  3209 ;;		_vfpfcnvrt
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text9
  3214  001370                     __ptext9:
  3215                           	opt callstack 0
  3216  001370                     _xtoa:
  3217                           	opt callstack 22
  3218  001370                     
  3219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3220  001370  BE73               	btfsc	(_prec+1)^0,7,c
  3221  001372  EFBD  F009         	goto	u4711
  3222  001376  EFBF  F009         	goto	u4710
  3223  00137A                     u4711:
  3224  00137A  EFC0  F009         	goto	l5012
  3225  00137E                     u4710:
  3226  00137E                     
  3227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3228  00137E  9274               	bcf	_flags^0,1,c
  3229  001380                     l5012:
  3230                           
  3231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3232  001380  BE73               	btfsc	(_prec+1)^0,7,c
  3233  001382  EFCD  F009         	goto	u4720
  3234  001386  5073               	movf	(_prec+1)^0,w,c
  3235  001388  E106               	bnz	u4721
  3236  00138A  0472               	decf	_prec^0,w,c
  3237  00138C  B0D8               	btfsc	status,0,c
  3238  00138E  EFCB  F009         	goto	u4721
  3239  001392  EFCD  F009         	goto	u4720
  3240  001396                     u4721:
  3241  001396  EFD3  F009         	goto	l744
  3242  00139A                     u4720:
  3243  00139A  0E00               	movlw	0
  3244  00139C  6E3A               	movwf	(xtoa@p+1)^0,c
  3245  00139E  0E01               	movlw	1
  3246  0013A0  6E39               	movwf	xtoa@p^0,c
  3247  0013A2  EFD7  F009         	goto	l746
  3248  0013A6                     l744:
  3249  0013A6  C072  F039         	movff	_prec,xtoa@p
  3250  0013AA  C073  F03A         	movff	_prec+1,xtoa@p+1
  3251  0013AE                     l746:
  3252                           
  3253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3254  0013AE  C0A2  F03B         	movff	_width,xtoa@w
  3255  0013B2  C0A3  F03C         	movff	_width+1,xtoa@w+1
  3256                           
  3257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3258  0013B6  A874               	btfss	_flags^0,4,c
  3259  0013B8  EFE0  F009         	goto	u4731
  3260  0013BC  EFE2  F009         	goto	u4730
  3261  0013C0                     u4731:
  3262  0013C0  EFE6  F009         	goto	l5018
  3263  0013C4                     u4730:
  3264  0013C4                     
  3265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3266  0013C4  0EFE               	movlw	254
  3267  0013C6  263B               	addwf	xtoa@w^0,f,c
  3268  0013C8  0EFF               	movlw	255
  3269  0013CA  223C               	addwfc	(xtoa@w+1)^0,f,c
  3270  0013CC                     l5018:
  3271                           
  3272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3273  0013CC  C024  F03D         	movff	xtoa@d,xtoa@n
  3274  0013D0  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  3275  0013D4  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  3276  0013D8  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  3277  0013DC  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  3278  0013E0  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  3279  0013E4  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  3280  0013E8  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  3281  0013EC                     
  3282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  3283  0013EC  0E00               	movlw	0
  3284  0013EE  6E46               	movwf	(xtoa@i+1)^0,c
  3285  0013F0  0E1F               	movlw	31
  3286  0013F2  6E45               	movwf	xtoa@i^0,c
  3287  0013F4                     
  3288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  3289  0013F4  0E00               	movlw	0
  3290  0013F6  0101               	movlb	1	; () banked
  3291  0013F8  6F74               	movwf	(_dbuf+31)& (0+255),b
  3292                           
  3293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3294  0013FA  EFB2  F00A         	goto	l5054
  3295  0013FE                     l5024:
  3296                           
  3297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  3298  0013FE  0645               	decf	xtoa@i^0,f,c
  3299  001400  A0D8               	btfss	status,0,c
  3300  001402  0646               	decf	(xtoa@i+1)^0,f,c
  3301  001404                     
  3302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  3303  001404  0E0F               	movlw	15
  3304  001406  143D               	andwf	xtoa@n^0,w,c
  3305  001408  6E47               	movwf	xtoa@c^0,c
  3306  00140A  6A48               	clrf	(xtoa@c+1)^0,c
  3307  00140C                     
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3309  00140C  BE48               	btfsc	(xtoa@c+1)^0,7,c
  3310  00140E  EF12  F00A         	goto	u4741
  3311  001412  5048               	movf	(xtoa@c+1)^0,w,c
  3312  001414  E109               	bnz	u4740
  3313  001416  0E0A               	movlw	10
  3314  001418  5C47               	subwf	xtoa@c^0,w,c
  3315  00141A  A0D8               	btfss	status,0,c
  3316  00141C  EF12  F00A         	goto	u4741
  3317  001420  EF14  F00A         	goto	u4740
  3318  001424                     u4741:
  3319  001424  EF1C  F00A         	goto	l5032
  3320  001428                     u4740:
  3321  001428  0E57               	movlw	87
  3322  00142A  2447               	addwf	xtoa@c^0,w,c
  3323  00142C  6E47               	movwf	xtoa@c^0,c
  3324  00142E  0E00               	movlw	0
  3325  001430  2048               	addwfc	(xtoa@c+1)^0,w,c
  3326  001432  6E48               	movwf	(xtoa@c+1)^0,c
  3327  001434  EF22  F00A         	goto	l753
  3328  001438                     l5032:
  3329  001438  0E30               	movlw	48
  3330  00143A  2447               	addwf	xtoa@c^0,w,c
  3331  00143C  6E47               	movwf	xtoa@c^0,c
  3332  00143E  0E00               	movlw	0
  3333  001440  2048               	addwfc	(xtoa@c+1)^0,w,c
  3334  001442  6E48               	movwf	(xtoa@c+1)^0,c
  3335  001444                     l753:
  3336  001444  0EBF               	movlw	191
  3337  001446  6E2D               	movwf	??_xtoa^0,c
  3338  001448  0EFF               	movlw	255
  3339  00144A  6E2E               	movwf	(??_xtoa+1)^0,c
  3340  00144C  502C               	movf	xtoa@x^0,w,c
  3341  00144E  6E2F               	movwf	(??_xtoa+2)^0,c
  3342  001450  6A30               	clrf	(??_xtoa+3)^0,c
  3343  001452  502D               	movf	??_xtoa^0,w,c
  3344  001454  262F               	addwf	(??_xtoa+2)^0,f,c
  3345  001456  502E               	movf	(??_xtoa+1)^0,w,c
  3346  001458  2230               	addwfc	(??_xtoa+3)^0,f,c
  3347  00145A  5030               	movf	(??_xtoa+3)^0,w,c
  3348  00145C  E10A               	bnz	u4750
  3349  00145E  0E1A               	movlw	26
  3350  001460  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3351  001462  A0D8               	btfss	status,0,c
  3352  001464  EF36  F00A         	goto	u4751
  3353  001468  EF39  F00A         	goto	u4750
  3354  00146C                     u4751:
  3355  00146C  0E01               	movlw	1
  3356  00146E  EF3A  F00A         	goto	u4760
  3357  001472                     u4750:
  3358  001472  0E00               	movlw	0
  3359  001474                     u4760:
  3360  001474  6E35               	movwf	_xtoa$993^0,c
  3361  001476  6A36               	clrf	(_xtoa$993+1)^0,c
  3362  001478  5035               	movf	_xtoa$993^0,w,c
  3363  00147A  1036               	iorwf	(_xtoa$993+1)^0,w,c
  3364  00147C  B4D8               	btfsc	status,2,c
  3365  00147E  EF43  F00A         	goto	u4771
  3366  001482  EF45  F00A         	goto	u4770
  3367  001486                     u4771:
  3368  001486  EF75  F00A         	goto	l5046
  3369  00148A                     u4770:
  3370  00148A  0E9F               	movlw	159
  3371  00148C  6E2D               	movwf	??_xtoa^0,c
  3372  00148E  0EFF               	movlw	255
  3373  001490  6E2E               	movwf	(??_xtoa+1)^0,c
  3374  001492  0E20               	movlw	32
  3375  001494  1047               	iorwf	xtoa@c^0,w,c
  3376  001496  6E2F               	movwf	(??_xtoa+2)^0,c
  3377  001498  0E00               	movlw	0
  3378  00149A  1048               	iorwf	(xtoa@c+1)^0,w,c
  3379  00149C  6E30               	movwf	(??_xtoa+3)^0,c
  3380  00149E  502D               	movf	??_xtoa^0,w,c
  3381  0014A0  262F               	addwf	(??_xtoa+2)^0,f,c
  3382  0014A2  502E               	movf	(??_xtoa+1)^0,w,c
  3383  0014A4  2230               	addwfc	(??_xtoa+3)^0,f,c
  3384  0014A6  5030               	movf	(??_xtoa+3)^0,w,c
  3385  0014A8  E10A               	bnz	u4780
  3386  0014AA  0E1A               	movlw	26
  3387  0014AC  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3388  0014AE  A0D8               	btfss	status,0,c
  3389  0014B0  EF5C  F00A         	goto	u4781
  3390  0014B4  EF5F  F00A         	goto	u4780
  3391  0014B8                     u4781:
  3392  0014B8  0E01               	movlw	1
  3393  0014BA  EF60  F00A         	goto	u4790
  3394  0014BE                     u4780:
  3395  0014BE  0E00               	movlw	0
  3396  0014C0                     u4790:
  3397  0014C0  6E37               	movwf	_xtoa$994^0,c
  3398  0014C2  6A38               	clrf	(_xtoa$994+1)^0,c
  3399  0014C4  5037               	movf	_xtoa$994^0,w,c
  3400  0014C6  1038               	iorwf	(_xtoa$994+1)^0,w,c
  3401  0014C8  B4D8               	btfsc	status,2,c
  3402  0014CA  EF69  F00A         	goto	u4801
  3403  0014CE  EF6B  F00A         	goto	u4800
  3404  0014D2                     u4801:
  3405  0014D2  EF75  F00A         	goto	l5046
  3406  0014D6                     u4800:
  3407  0014D6                     
  3408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  3409  0014D6  C047  F00D         	movff	xtoa@c,toupper@c
  3410  0014DA  C048  F00E         	movff	xtoa@c+1,toupper@c+1
  3411  0014DE  EC28  F016         	call	_toupper	;wreg free
  3412  0014E2  C00D  F047         	movff	?_toupper,xtoa@c
  3413  0014E6  C00E  F048         	movff	?_toupper+1,xtoa@c+1
  3414  0014EA                     l5046:
  3415                           
  3416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3417  0014EA  0E55               	movlw	low _dbuf
  3418  0014EC  2445               	addwf	xtoa@i^0,w,c
  3419  0014EE  6ED9               	movwf	fsr2l,c
  3420  0014F0  0E01               	movlw	high _dbuf
  3421  0014F2  2046               	addwfc	(xtoa@i+1)^0,w,c
  3422  0014F4  6EDA               	movwf	fsr2h,c
  3423  0014F6  C047  FFDF         	movff	xtoa@c,indf2
  3424  0014FA                     
  3425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3426  0014FA  0639               	decf	xtoa@p^0,f,c
  3427  0014FC  A0D8               	btfss	status,0,c
  3428  0014FE  063A               	decf	(xtoa@p+1)^0,f,c
  3429  001500                     
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3431  001500  063B               	decf	xtoa@w^0,f,c
  3432  001502  A0D8               	btfss	status,0,c
  3433  001504  063C               	decf	(xtoa@w+1)^0,f,c
  3434  001506                     
  3435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3436  001506  C03D  F02D         	movff	xtoa@n,??_xtoa
  3437  00150A  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  3438  00150E  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  3439  001512  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  3440  001516  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  3441  00151A  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  3442  00151E  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  3443  001522  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  3444  001526  0E05               	movlw	5
  3445  001528  EF9F  F00A         	goto	u4810
  3446  00152C                     u4815:
  3447  00152C  90D8               	bcf	status,0,c
  3448  00152E  3234               	rrcf	(??_xtoa+7)^0,f,c
  3449  001530  3233               	rrcf	(??_xtoa+6)^0,f,c
  3450  001532  3232               	rrcf	(??_xtoa+5)^0,f,c
  3451  001534  3231               	rrcf	(??_xtoa+4)^0,f,c
  3452  001536  3230               	rrcf	(??_xtoa+3)^0,f,c
  3453  001538  322F               	rrcf	(??_xtoa+2)^0,f,c
  3454  00153A  322E               	rrcf	(??_xtoa+1)^0,f,c
  3455  00153C  322D               	rrcf	??_xtoa^0,f,c
  3456  00153E                     u4810:
  3457  00153E  2EE8               	decfsz	wreg,f,c
  3458  001540  EF96  F00A         	goto	u4815
  3459  001544  C02D  F03D         	movff	??_xtoa,xtoa@n
  3460  001548  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  3461  00154C  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  3462  001550  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  3463  001554  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  3464  001558  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  3465  00155C  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  3466  001560  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  3467  001564                     l5054:
  3468                           
  3469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3470  001564  BE46               	btfsc	(xtoa@i+1)^0,7,c
  3471  001566  EFBE  F00A         	goto	u4821
  3472  00156A  5046               	movf	(xtoa@i+1)^0,w,c
  3473  00156C  E109               	bnz	u4820
  3474  00156E  0E02               	movlw	2
  3475  001570  5C45               	subwf	xtoa@i^0,w,c
  3476  001572  A0D8               	btfss	status,0,c
  3477  001574  EFBE  F00A         	goto	u4821
  3478  001578  EFC0  F00A         	goto	u4820
  3479  00157C                     u4821:
  3480  00157C  EFF0  F00A         	goto	l767
  3481  001580                     u4820:
  3482  001580  503D               	movf	xtoa@n^0,w,c
  3483  001582  103E               	iorwf	(xtoa@n+1)^0,w,c
  3484  001584  103F               	iorwf	(xtoa@n+2)^0,w,c
  3485  001586  1040               	iorwf	(xtoa@n+3)^0,w,c
  3486  001588  1041               	iorwf	(xtoa@n+4)^0,w,c
  3487  00158A  1042               	iorwf	(xtoa@n+5)^0,w,c
  3488  00158C  1043               	iorwf	(xtoa@n+6)^0,w,c
  3489  00158E  1044               	iorwf	(xtoa@n+7)^0,w,c
  3490  001590  A4D8               	btfss	status,2,c
  3491  001592  EFCD  F00A         	goto	u4831
  3492  001596  EFCF  F00A         	goto	u4830
  3493  00159A                     u4831:
  3494  00159A  EFFF  F009         	goto	l5024
  3495  00159E                     u4830:
  3496  00159E  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  3497  0015A0  EFDC  F00A         	goto	u4840
  3498  0015A4  503A               	movf	(xtoa@p+1)^0,w,c
  3499  0015A6  E106               	bnz	u4841
  3500  0015A8  0439               	decf	xtoa@p^0,w,c
  3501  0015AA  B0D8               	btfsc	status,0,c
  3502  0015AC  EFDA  F00A         	goto	u4841
  3503  0015B0  EFDC  F00A         	goto	u4840
  3504  0015B4                     u4841:
  3505  0015B4  EFFF  F009         	goto	l5024
  3506  0015B8                     u4840:
  3507  0015B8  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  3508  0015BA  EFE7  F00A         	goto	u4851
  3509  0015BE  503C               	movf	(xtoa@w+1)^0,w,c
  3510  0015C0  E108               	bnz	u4850
  3511  0015C2  043B               	decf	xtoa@w^0,w,c
  3512  0015C4  A0D8               	btfss	status,0,c
  3513  0015C6  EFE7  F00A         	goto	u4851
  3514  0015CA  EFE9  F00A         	goto	u4850
  3515  0015CE                     u4851:
  3516  0015CE  EFF0  F00A         	goto	l767
  3517  0015D2                     u4850:
  3518  0015D2  B274               	btfsc	_flags^0,1,c
  3519  0015D4  EFEE  F00A         	goto	u4861
  3520  0015D8  EFF0  F00A         	goto	u4860
  3521  0015DC                     u4861:
  3522  0015DC  EFFF  F009         	goto	l5024
  3523  0015E0                     u4860:
  3524  0015E0                     l767:
  3525                           
  3526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  3527  0015E0  A874               	btfss	_flags^0,4,c
  3528  0015E2  EFF5  F00A         	goto	u4871
  3529  0015E6  EFF7  F00A         	goto	u4870
  3530  0015EA                     u4871:
  3531  0015EA  EF0D  F00B         	goto	l5070
  3532  0015EE                     u4870:
  3533  0015EE                     
  3534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  3535  0015EE  0645               	decf	xtoa@i^0,f,c
  3536  0015F0  A0D8               	btfss	status,0,c
  3537  0015F2  0646               	decf	(xtoa@i+1)^0,f,c
  3538  0015F4                     
  3539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  3540  0015F4  0E55               	movlw	low _dbuf
  3541  0015F6  2445               	addwf	xtoa@i^0,w,c
  3542  0015F8  6ED9               	movwf	fsr2l,c
  3543  0015FA  0E01               	movlw	high _dbuf
  3544  0015FC  2046               	addwfc	(xtoa@i+1)^0,w,c
  3545  0015FE  6EDA               	movwf	fsr2h,c
  3546  001600  C02C  FFDF         	movff	xtoa@x,indf2
  3547  001604                     
  3548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  3549  001604  0645               	decf	xtoa@i^0,f,c
  3550  001606  A0D8               	btfss	status,0,c
  3551  001608  0646               	decf	(xtoa@i+1)^0,f,c
  3552                           
  3553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  3554  00160A  0E55               	movlw	low _dbuf
  3555  00160C  2445               	addwf	xtoa@i^0,w,c
  3556  00160E  6ED9               	movwf	fsr2l,c
  3557  001610  0E01               	movlw	high _dbuf
  3558  001612  2046               	addwfc	(xtoa@i+1)^0,w,c
  3559  001614  6EDA               	movwf	fsr2h,c
  3560  001616  0E30               	movlw	48
  3561  001618  6EDF               	movwf	indf2,c
  3562  00161A                     l5070:
  3563                           
  3564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  3565  00161A  C022  F017         	movff	xtoa@fp,pad@fp
  3566  00161E  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  3567  001622  0E55               	movlw	low _dbuf
  3568  001624  2445               	addwf	xtoa@i^0,w,c
  3569  001626  6E19               	movwf	pad@buf^0,c
  3570  001628  0E01               	movlw	high _dbuf
  3571  00162A  2046               	addwfc	(xtoa@i+1)^0,w,c
  3572  00162C  6E1A               	movwf	(pad@buf+1)^0,c
  3573  00162E  C03B  F01B         	movff	xtoa@w,pad@p
  3574  001632  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  3575  001636  EC8E  F014         	call	_pad	;wreg free
  3576  00163A  C017  F022         	movff	?_pad,?_xtoa
  3577  00163E  C018  F023         	movff	?_pad+1,?_xtoa+1
  3578  001642  0012               	return		;funcret
  3579  001644                     __end_of_xtoa:
  3580                           	opt callstack 0
  3581                           
  3582 ;; *************** function _toupper *****************
  3583 ;; Defined at:
  3584 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  c               2   12[COMRAM] int 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  2   12[COMRAM] int 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3598 ;;      Params:         2       0       0       0       0       0       0
  3599 ;;      Locals:         2       0       0       0       0       0       0
  3600 ;;      Temps:          4       0       0       0       0       0       0
  3601 ;;      Totals:         8       0       0       0       0       0       0
  3602 ;;Total ram usage:        8 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    2
  3605 ;; This function calls:
  3606 ;;		_islower
  3607 ;; This function is called by:
  3608 ;;		_xtoa
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text10
  3613  002C50                     __ptext10:
  3614                           	opt callstack 0
  3615  002C50                     _toupper:
  3616                           	opt callstack 24
  3617  002C50  0E9F               	movlw	159
  3618  002C52  6E0F               	movwf	??_toupper^0,c
  3619  002C54  0EFF               	movlw	255
  3620  002C56  6E10               	movwf	(??_toupper+1)^0,c
  3621  002C58  C00D  F011         	movff	toupper@c,??_toupper+2
  3622  002C5C  C00E  F012         	movff	toupper@c+1,??_toupper+3
  3623  002C60  500F               	movf	??_toupper^0,w,c
  3624  002C62  2611               	addwf	(??_toupper+2)^0,f,c
  3625  002C64  5010               	movf	(??_toupper+1)^0,w,c
  3626  002C66  2212               	addwfc	(??_toupper+3)^0,f,c
  3627  002C68  5012               	movf	(??_toupper+3)^0,w,c
  3628  002C6A  E10A               	bnz	u4220
  3629  002C6C  0E1A               	movlw	26
  3630  002C6E  5C11               	subwf	(??_toupper+2)^0,w,c
  3631  002C70  A0D8               	btfss	status,0,c
  3632  002C72  EF3D  F016         	goto	u4221
  3633  002C76  EF40  F016         	goto	u4220
  3634  002C7A                     u4221:
  3635  002C7A  0E01               	movlw	1
  3636  002C7C  EF41  F016         	goto	u4230
  3637  002C80                     u4220:
  3638  002C80  0E00               	movlw	0
  3639  002C82                     u4230:
  3640  002C82  6E13               	movwf	_toupper$1606^0,c
  3641  002C84  6A14               	clrf	(_toupper$1606+1)^0,c
  3642  002C86  5013               	movf	_toupper$1606^0,w,c
  3643  002C88  1014               	iorwf	(_toupper$1606+1)^0,w,c
  3644  002C8A  B4D8               	btfsc	status,2,c
  3645  002C8C  EF4A  F016         	goto	u4241
  3646  002C90  EF4C  F016         	goto	u4240
  3647  002C94                     u4241:
  3648  002C94  EF52  F016         	goto	l1602
  3649  002C98                     u4240:
  3650  002C98  0E5F               	movlw	95
  3651  002C9A  140D               	andwf	toupper@c^0,w,c
  3652  002C9C  6E0D               	movwf	?_toupper^0,c
  3653  002C9E  6A0E               	clrf	(?_toupper+1)^0,c
  3654  002CA0  EF56  F016         	goto	l1607
  3655  002CA4                     l1602:
  3656  002CA4  C00D  F00D         	movff	toupper@c,?_toupper
  3657  002CA8  C00E  F00E         	movff	toupper@c+1,?_toupper+1
  3658  002CAC                     l1607:
  3659  002CAC  0012               	return		;funcret
  3660  002CAE                     __end_of_toupper:
  3661                           	opt callstack 0
  3662                           
  3663 ;; *************** function _islower *****************
  3664 ;; Defined at:
  3665 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  c               2    6[COMRAM] int 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  2    6[COMRAM] int 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3679 ;;      Params:         2       0       0       0       0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0
  3681 ;;      Temps:          4       0       0       0       0       0       0
  3682 ;;      Totals:         6       0       0       0       0       0       0
  3683 ;;Total ram usage:        6 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    1
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_toupper
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text11
  3694  002ED6                     __ptext11:
  3695                           	opt callstack 0
  3696  002ED6                     _islower:
  3697                           	opt callstack 24
  3698  002ED6  0E9F               	movlw	159
  3699  002ED8  6E09               	movwf	??_islower^0,c
  3700  002EDA  0EFF               	movlw	255
  3701  002EDC  6E0A               	movwf	(??_islower+1)^0,c
  3702  002EDE  C007  F00B         	movff	islower@c,??_islower+2
  3703  002EE2  C008  F00C         	movff	islower@c+1,??_islower+3
  3704  002EE6  5009               	movf	??_islower^0,w,c
  3705  002EE8  260B               	addwf	(??_islower+2)^0,f,c
  3706  002EEA  500A               	movf	(??_islower+1)^0,w,c
  3707  002EEC  220C               	addwfc	(??_islower+3)^0,f,c
  3708  002EEE  500C               	movf	(??_islower+3)^0,w,c
  3709  002EF0  E10A               	bnz	u4110
  3710  002EF2  0E1A               	movlw	26
  3711  002EF4  5C0B               	subwf	(??_islower+2)^0,w,c
  3712  002EF6  A0D8               	btfss	status,0,c
  3713  002EF8  EF80  F017         	goto	u4111
  3714  002EFC  EF83  F017         	goto	u4110
  3715  002F00                     u4111:
  3716  002F00  0E01               	movlw	1
  3717  002F02  EF84  F017         	goto	u4120
  3718  002F06                     u4110:
  3719  002F06  0E00               	movlw	0
  3720  002F08                     u4120:
  3721  002F08  6E07               	movwf	?_islower^0,c
  3722  002F0A  6A08               	clrf	(?_islower+1)^0,c
  3723  002F0C  0012               	return		;funcret
  3724  002F0E                     __end_of_islower:
  3725                           	opt callstack 0
  3726                           
  3727 ;; *************** function _isupper *****************
  3728 ;; Defined at:
  3729 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  c               2    6[COMRAM] int 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  2    6[COMRAM] int 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3743 ;;      Params:         2       0       0       0       0       0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0
  3745 ;;      Temps:          4       0       0       0       0       0       0
  3746 ;;      Totals:         6       0       0       0       0       0       0
  3747 ;;Total ram usage:        6 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    1
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_xtoa
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text12
  3758  002F0E                     __ptext12:
  3759                           	opt callstack 0
  3760  002F0E                     _isupper:
  3761                           	opt callstack 25
  3762  002F0E  0EBF               	movlw	191
  3763  002F10  6E09               	movwf	??_isupper^0,c
  3764  002F12  0EFF               	movlw	255
  3765  002F14  6E0A               	movwf	(??_isupper+1)^0,c
  3766  002F16  C007  F00B         	movff	isupper@c,??_isupper+2
  3767  002F1A  C008  F00C         	movff	isupper@c+1,??_isupper+3
  3768  002F1E  5009               	movf	??_isupper^0,w,c
  3769  002F20  260B               	addwf	(??_isupper+2)^0,f,c
  3770  002F22  500A               	movf	(??_isupper+1)^0,w,c
  3771  002F24  220C               	addwfc	(??_isupper+3)^0,f,c
  3772  002F26  500C               	movf	(??_isupper+3)^0,w,c
  3773  002F28  E10A               	bnz	u4180
  3774  002F2A  0E1A               	movlw	26
  3775  002F2C  5C0B               	subwf	(??_isupper+2)^0,w,c
  3776  002F2E  A0D8               	btfss	status,0,c
  3777  002F30  EF9C  F017         	goto	u4181
  3778  002F34  EF9F  F017         	goto	u4180
  3779  002F38                     u4181:
  3780  002F38  0E01               	movlw	1
  3781  002F3A  EFA0  F017         	goto	u4190
  3782  002F3E                     u4180:
  3783  002F3E  0E00               	movlw	0
  3784  002F40                     u4190:
  3785  002F40  6E07               	movwf	?_isupper^0,c
  3786  002F42  6A08               	clrf	(?_isupper+1)^0,c
  3787  002F44  0012               	return		;funcret
  3788  002F46                     __end_of_isupper:
  3789                           	opt callstack 0
  3790                           
  3791 ;; *************** function _isalpha *****************
  3792 ;; Defined at:
  3793 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  c               2    6[COMRAM] int 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  2    6[COMRAM] int 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3807 ;;      Params:         2       0       0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0       0       0
  3809 ;;      Temps:          4       0       0       0       0       0       0
  3810 ;;      Totals:         6       0       0       0       0       0       0
  3811 ;;Total ram usage:        6 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    1
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_xtoa
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text13
  3822  002E9A                     __ptext13:
  3823                           	opt callstack 0
  3824  002E9A                     _isalpha:
  3825                           	opt callstack 25
  3826  002E9A  0E9F               	movlw	159
  3827  002E9C  6E09               	movwf	??_isalpha^0,c
  3828  002E9E  0EFF               	movlw	255
  3829  002EA0  6E0A               	movwf	(??_isalpha+1)^0,c
  3830  002EA2  0E20               	movlw	32
  3831  002EA4  1007               	iorwf	isalpha@c^0,w,c
  3832  002EA6  6E0B               	movwf	(??_isalpha+2)^0,c
  3833  002EA8  0E00               	movlw	0
  3834  002EAA  1008               	iorwf	(isalpha@c+1)^0,w,c
  3835  002EAC  6E0C               	movwf	(??_isalpha+3)^0,c
  3836  002EAE  5009               	movf	??_isalpha^0,w,c
  3837  002EB0  260B               	addwf	(??_isalpha+2)^0,f,c
  3838  002EB2  500A               	movf	(??_isalpha+1)^0,w,c
  3839  002EB4  220C               	addwfc	(??_isalpha+3)^0,f,c
  3840  002EB6  500C               	movf	(??_isalpha+3)^0,w,c
  3841  002EB8  E10A               	bnz	u4200
  3842  002EBA  0E1A               	movlw	26
  3843  002EBC  5C0B               	subwf	(??_isalpha+2)^0,w,c
  3844  002EBE  A0D8               	btfss	status,0,c
  3845  002EC0  EF64  F017         	goto	u4201
  3846  002EC4  EF67  F017         	goto	u4200
  3847  002EC8                     u4201:
  3848  002EC8  0E01               	movlw	1
  3849  002ECA  EF68  F017         	goto	u4210
  3850  002ECE                     u4200:
  3851  002ECE  0E00               	movlw	0
  3852  002ED0                     u4210:
  3853  002ED0  6E07               	movwf	?_isalpha^0,c
  3854  002ED2  6A08               	clrf	(?_isalpha+1)^0,c
  3855  002ED4  0012               	return		;funcret
  3856  002ED6                     __end_of_isalpha:
  3857                           	opt callstack 0
  3858                           
  3859 ;; *************** function _utoa *****************
  3860 ;; Defined at:
  3861 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3864 ;;		 -> sprintf@f(6), 
  3865 ;;  d               8   35[COMRAM] unsigned long long 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  n               8   55[COMRAM] unsigned long long 
  3868 ;;  i               2   63[COMRAM] int 
  3869 ;;  w               2   53[COMRAM] int 
  3870 ;;  p               2   51[COMRAM] int 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  2   33[COMRAM] int 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3880 ;;      Params:        10       0       0       0       0       0       0
  3881 ;;      Locals:        14       0       0       0       0       0       0
  3882 ;;      Temps:          8       0       0       0       0       0       0
  3883 ;;      Totals:        32       0       0       0       0       0       0
  3884 ;;Total ram usage:       32 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    5
  3887 ;; This function calls:
  3888 ;;		___lodiv
  3889 ;;		___lomod
  3890 ;;		_pad
  3891 ;; This function is called by:
  3892 ;;		_vfpfcnvrt
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text14
  3897  001644                     __ptext14:
  3898                           	opt callstack 0
  3899  001644                     _utoa:
  3900                           	opt callstack 22
  3901  001644                     
  3902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  3903  001644  BE73               	btfsc	(_prec+1)^0,7,c
  3904  001646  EF27  F00B         	goto	u4641
  3905  00164A  EF29  F00B         	goto	u4640
  3906  00164E                     u4641:
  3907  00164E  EF2A  F00B         	goto	l4976
  3908  001652                     u4640:
  3909  001652                     
  3910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  3911  001652  9274               	bcf	_flags^0,1,c
  3912  001654                     l4976:
  3913                           
  3914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  3915  001654  BE73               	btfsc	(_prec+1)^0,7,c
  3916  001656  EF37  F00B         	goto	u4650
  3917  00165A  5073               	movf	(_prec+1)^0,w,c
  3918  00165C  E106               	bnz	u4651
  3919  00165E  0472               	decf	_prec^0,w,c
  3920  001660  B0D8               	btfsc	status,0,c
  3921  001662  EF35  F00B         	goto	u4651
  3922  001666  EF37  F00B         	goto	u4650
  3923  00166A                     u4651:
  3924  00166A  EF3D  F00B         	goto	l729
  3925  00166E                     u4650:
  3926  00166E  0E00               	movlw	0
  3927  001670  6E35               	movwf	(utoa@p+1)^0,c
  3928  001672  0E01               	movlw	1
  3929  001674  6E34               	movwf	utoa@p^0,c
  3930  001676  EF41  F00B         	goto	l731
  3931  00167A                     l729:
  3932  00167A  C072  F034         	movff	_prec,utoa@p
  3933  00167E  C073  F035         	movff	_prec+1,utoa@p+1
  3934  001682                     l731:
  3935                           
  3936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  3937  001682  C0A2  F036         	movff	_width,utoa@w
  3938  001686  C0A3  F037         	movff	_width+1,utoa@w+1
  3939                           
  3940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  3941  00168A  C024  F038         	movff	utoa@d,utoa@n
  3942  00168E  C025  F039         	movff	utoa@d+1,utoa@n+1
  3943  001692  C026  F03A         	movff	utoa@d+2,utoa@n+2
  3944  001696  C027  F03B         	movff	utoa@d+3,utoa@n+3
  3945  00169A  C028  F03C         	movff	utoa@d+4,utoa@n+4
  3946  00169E  C029  F03D         	movff	utoa@d+5,utoa@n+5
  3947  0016A2  C02A  F03E         	movff	utoa@d+6,utoa@n+6
  3948  0016A6  C02B  F03F         	movff	utoa@d+7,utoa@n+7
  3949  0016AA                     
  3950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  3951  0016AA  0E00               	movlw	0
  3952  0016AC  6E41               	movwf	(utoa@i+1)^0,c
  3953  0016AE  0E1F               	movlw	31
  3954  0016B0  6E40               	movwf	utoa@i^0,c
  3955  0016B2                     
  3956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  3957  0016B2  0E00               	movlw	0
  3958  0016B4  0101               	movlb	1	; () banked
  3959  0016B6  6F74               	movwf	(_dbuf+31)& (0+255),b
  3960                           
  3961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3962  0016B8  EFD4  F00B         	goto	l4994
  3963  0016BC                     l4984:
  3964                           
  3965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  3966  0016BC  0640               	decf	utoa@i^0,f,c
  3967  0016BE  A0D8               	btfss	status,0,c
  3968  0016C0  0641               	decf	(utoa@i+1)^0,f,c
  3969  0016C2                     
  3970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  3971  0016C2  0E55               	movlw	low _dbuf
  3972  0016C4  2440               	addwf	utoa@i^0,w,c
  3973  0016C6  6ED9               	movwf	fsr2l,c
  3974  0016C8  0E01               	movlw	high _dbuf
  3975  0016CA  2041               	addwfc	(utoa@i+1)^0,w,c
  3976  0016CC  6EDA               	movwf	fsr2h,c
  3977  0016CE  C038  F007         	movff	utoa@n,___lomod@dividend
  3978  0016D2  C039  F008         	movff	utoa@n+1,___lomod@dividend+1
  3979  0016D6  C03A  F009         	movff	utoa@n+2,___lomod@dividend+2
  3980  0016DA  C03B  F00A         	movff	utoa@n+3,___lomod@dividend+3
  3981  0016DE  C03C  F00B         	movff	utoa@n+4,___lomod@dividend+4
  3982  0016E2  C03D  F00C         	movff	utoa@n+5,___lomod@dividend+5
  3983  0016E6  C03E  F00D         	movff	utoa@n+6,___lomod@dividend+6
  3984  0016EA  C03F  F00E         	movff	utoa@n+7,___lomod@dividend+7
  3985  0016EE  0E0A               	movlw	10
  3986  0016F0  6E0F               	movwf	___lomod@divisor^0,c
  3987  0016F2  0E00               	movlw	0
  3988  0016F4  6E10               	movwf	(___lomod@divisor+1)^0,c
  3989  0016F6  0E00               	movlw	0
  3990  0016F8  6E11               	movwf	(___lomod@divisor+2)^0,c
  3991  0016FA  0E00               	movlw	0
  3992  0016FC  6E12               	movwf	(___lomod@divisor+3)^0,c
  3993  0016FE  0E00               	movlw	0
  3994  001700  6E13               	movwf	(___lomod@divisor+4)^0,c
  3995  001702  0E00               	movlw	0
  3996  001704  6E14               	movwf	(___lomod@divisor+5)^0,c
  3997  001706  0E00               	movlw	0
  3998  001708  6E15               	movwf	(___lomod@divisor+6)^0,c
  3999  00170A  0E00               	movlw	0
  4000  00170C  6E16               	movwf	(___lomod@divisor+7)^0,c
  4001  00170E  ECC1  F013         	call	___lomod	;wreg free
  4002  001712  C007  F02C         	movff	?___lomod,??_utoa
  4003  001716  C008  F02D         	movff	?___lomod+1,??_utoa+1
  4004  00171A  C009  F02E         	movff	?___lomod+2,??_utoa+2
  4005  00171E  C00A  F02F         	movff	?___lomod+3,??_utoa+3
  4006  001722  C00B  F030         	movff	?___lomod+4,??_utoa+4
  4007  001726  C00C  F031         	movff	?___lomod+5,??_utoa+5
  4008  00172A  C00D  F032         	movff	?___lomod+6,??_utoa+6
  4009  00172E  C00E  F033         	movff	?___lomod+7,??_utoa+7
  4010  001732  502C               	movf	??_utoa^0,w,c
  4011  001734  0F30               	addlw	48
  4012  001736  6EDF               	movwf	indf2,c
  4013  001738                     
  4014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  4015  001738  0634               	decf	utoa@p^0,f,c
  4016  00173A  A0D8               	btfss	status,0,c
  4017  00173C  0635               	decf	(utoa@p+1)^0,f,c
  4018  00173E                     
  4019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  4020  00173E  0636               	decf	utoa@w^0,f,c
  4021  001740  A0D8               	btfss	status,0,c
  4022  001742  0637               	decf	(utoa@w+1)^0,f,c
  4023  001744                     
  4024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  4025  001744  C038  F007         	movff	utoa@n,___lodiv@dividend
  4026  001748  C039  F008         	movff	utoa@n+1,___lodiv@dividend+1
  4027  00174C  C03A  F009         	movff	utoa@n+2,___lodiv@dividend+2
  4028  001750  C03B  F00A         	movff	utoa@n+3,___lodiv@dividend+3
  4029  001754  C03C  F00B         	movff	utoa@n+4,___lodiv@dividend+4
  4030  001758  C03D  F00C         	movff	utoa@n+5,___lodiv@dividend+5
  4031  00175C  C03E  F00D         	movff	utoa@n+6,___lodiv@dividend+6
  4032  001760  C03F  F00E         	movff	utoa@n+7,___lodiv@dividend+7
  4033  001764  0E0A               	movlw	10
  4034  001766  6E0F               	movwf	___lodiv@divisor^0,c
  4035  001768  0E00               	movlw	0
  4036  00176A  6E10               	movwf	(___lodiv@divisor+1)^0,c
  4037  00176C  0E00               	movlw	0
  4038  00176E  6E11               	movwf	(___lodiv@divisor+2)^0,c
  4039  001770  0E00               	movlw	0
  4040  001772  6E12               	movwf	(___lodiv@divisor+3)^0,c
  4041  001774  0E00               	movlw	0
  4042  001776  6E13               	movwf	(___lodiv@divisor+4)^0,c
  4043  001778  0E00               	movlw	0
  4044  00177A  6E14               	movwf	(___lodiv@divisor+5)^0,c
  4045  00177C  0E00               	movlw	0
  4046  00177E  6E15               	movwf	(___lodiv@divisor+6)^0,c
  4047  001780  0E00               	movlw	0
  4048  001782  6E16               	movwf	(___lodiv@divisor+7)^0,c
  4049  001784  EC6D  F012         	call	___lodiv	;wreg free
  4050  001788  C007  F038         	movff	?___lodiv,utoa@n
  4051  00178C  C008  F039         	movff	?___lodiv+1,utoa@n+1
  4052  001790  C009  F03A         	movff	?___lodiv+2,utoa@n+2
  4053  001794  C00A  F03B         	movff	?___lodiv+3,utoa@n+3
  4054  001798  C00B  F03C         	movff	?___lodiv+4,utoa@n+4
  4055  00179C  C00C  F03D         	movff	?___lodiv+5,utoa@n+5
  4056  0017A0  C00D  F03E         	movff	?___lodiv+6,utoa@n+6
  4057  0017A4  C00E  F03F         	movff	?___lodiv+7,utoa@n+7
  4058  0017A8                     l4994:
  4059                           
  4060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4061  0017A8  5040               	movf	utoa@i^0,w,c
  4062  0017AA  1041               	iorwf	(utoa@i+1)^0,w,c
  4063  0017AC  B4D8               	btfsc	status,2,c
  4064  0017AE  EFDB  F00B         	goto	u4661
  4065  0017B2  EFDD  F00B         	goto	u4660
  4066  0017B6                     u4661:
  4067  0017B6  EF0D  F00C         	goto	l5004
  4068  0017BA                     u4660:
  4069  0017BA  5038               	movf	utoa@n^0,w,c
  4070  0017BC  1039               	iorwf	(utoa@n+1)^0,w,c
  4071  0017BE  103A               	iorwf	(utoa@n+2)^0,w,c
  4072  0017C0  103B               	iorwf	(utoa@n+3)^0,w,c
  4073  0017C2  103C               	iorwf	(utoa@n+4)^0,w,c
  4074  0017C4  103D               	iorwf	(utoa@n+5)^0,w,c
  4075  0017C6  103E               	iorwf	(utoa@n+6)^0,w,c
  4076  0017C8  103F               	iorwf	(utoa@n+7)^0,w,c
  4077  0017CA  A4D8               	btfss	status,2,c
  4078  0017CC  EFEA  F00B         	goto	u4671
  4079  0017D0  EFEC  F00B         	goto	u4670
  4080  0017D4                     u4671:
  4081  0017D4  EF5E  F00B         	goto	l4984
  4082  0017D8                     u4670:
  4083  0017D8  BE35               	btfsc	(utoa@p+1)^0,7,c
  4084  0017DA  EFF9  F00B         	goto	u4680
  4085  0017DE  5035               	movf	(utoa@p+1)^0,w,c
  4086  0017E0  E106               	bnz	u4681
  4087  0017E2  0434               	decf	utoa@p^0,w,c
  4088  0017E4  B0D8               	btfsc	status,0,c
  4089  0017E6  EFF7  F00B         	goto	u4681
  4090  0017EA  EFF9  F00B         	goto	u4680
  4091  0017EE                     u4681:
  4092  0017EE  EF5E  F00B         	goto	l4984
  4093  0017F2                     u4680:
  4094  0017F2  BE37               	btfsc	(utoa@w+1)^0,7,c
  4095  0017F4  EF04  F00C         	goto	u4691
  4096  0017F8  5037               	movf	(utoa@w+1)^0,w,c
  4097  0017FA  E108               	bnz	u4690
  4098  0017FC  0436               	decf	utoa@w^0,w,c
  4099  0017FE  A0D8               	btfss	status,0,c
  4100  001800  EF04  F00C         	goto	u4691
  4101  001804  EF06  F00C         	goto	u4690
  4102  001808                     u4691:
  4103  001808  EF0D  F00C         	goto	l5004
  4104  00180C                     u4690:
  4105  00180C  B274               	btfsc	_flags^0,1,c
  4106  00180E  EF0B  F00C         	goto	u4701
  4107  001812  EF0D  F00C         	goto	u4700
  4108  001816                     u4701:
  4109  001816  EF5E  F00B         	goto	l4984
  4110  00181A                     u4700:
  4111  00181A                     l5004:
  4112                           
  4113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  4114  00181A  C022  F017         	movff	utoa@fp,pad@fp
  4115  00181E  C023  F018         	movff	utoa@fp+1,pad@fp+1
  4116  001822  0E55               	movlw	low _dbuf
  4117  001824  2440               	addwf	utoa@i^0,w,c
  4118  001826  6E19               	movwf	pad@buf^0,c
  4119  001828  0E01               	movlw	high _dbuf
  4120  00182A  2041               	addwfc	(utoa@i+1)^0,w,c
  4121  00182C  6E1A               	movwf	(pad@buf+1)^0,c
  4122  00182E  C036  F01B         	movff	utoa@w,pad@p
  4123  001832  C037  F01C         	movff	utoa@w+1,pad@p+1
  4124  001836  EC8E  F014         	call	_pad	;wreg free
  4125  00183A  C017  F022         	movff	?_pad,?_utoa
  4126  00183E  C018  F023         	movff	?_pad+1,?_utoa+1
  4127  001842  0012               	return		;funcret
  4128  001844                     __end_of_utoa:
  4129                           	opt callstack 0
  4130                           
  4131 ;; *************** function ___lomod *****************
  4132 ;; Defined at:
  4133 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  dividend        8    6[COMRAM] unsigned long long 
  4136 ;;  divisor         8   14[COMRAM] unsigned long long 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  counter         1   22[COMRAM] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  8    6[COMRAM] unsigned long long 
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4148 ;;      Params:        16       0       0       0       0       0       0
  4149 ;;      Locals:         1       0       0       0       0       0       0
  4150 ;;      Temps:          0       0       0       0       0       0       0
  4151 ;;      Totals:        17       0       0       0       0       0       0
  4152 ;;Total ram usage:       17 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    1
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_utoa
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text15
  4163  002782                     __ptext15:
  4164                           	opt callstack 0
  4165  002782                     ___lomod:
  4166                           	opt callstack 25
  4167  002782  500F               	movf	___lomod@divisor^0,w,c
  4168  002784  1010               	iorwf	(___lomod@divisor+1)^0,w,c
  4169  002786  1011               	iorwf	(___lomod@divisor+2)^0,w,c
  4170  002788  1012               	iorwf	(___lomod@divisor+3)^0,w,c
  4171  00278A  1013               	iorwf	(___lomod@divisor+4)^0,w,c
  4172  00278C  1014               	iorwf	(___lomod@divisor+5)^0,w,c
  4173  00278E  1015               	iorwf	(___lomod@divisor+6)^0,w,c
  4174  002790  1016               	iorwf	(___lomod@divisor+7)^0,w,c
  4175  002792  B4D8               	btfsc	status,2,c
  4176  002794  EFCE  F013         	goto	u4441
  4177  002798  EFD0  F013         	goto	u4440
  4178  00279C                     u4441:
  4179  00279C  EF18  F014         	goto	l1255
  4180  0027A0                     u4440:
  4181  0027A0  0E01               	movlw	1
  4182  0027A2  6E17               	movwf	___lomod@counter^0,c
  4183  0027A4  EFDE  F013         	goto	l4888
  4184  0027A8                     l4886:
  4185  0027A8  90D8               	bcf	status,0,c
  4186  0027AA  360F               	rlcf	___lomod@divisor^0,f,c
  4187  0027AC  3610               	rlcf	(___lomod@divisor+1)^0,f,c
  4188  0027AE  3611               	rlcf	(___lomod@divisor+2)^0,f,c
  4189  0027B0  3612               	rlcf	(___lomod@divisor+3)^0,f,c
  4190  0027B2  3613               	rlcf	(___lomod@divisor+4)^0,f,c
  4191  0027B4  3614               	rlcf	(___lomod@divisor+5)^0,f,c
  4192  0027B6  3615               	rlcf	(___lomod@divisor+6)^0,f,c
  4193  0027B8  3616               	rlcf	(___lomod@divisor+7)^0,f,c
  4194  0027BA  2A17               	incf	___lomod@counter^0,f,c
  4195  0027BC                     l4888:
  4196  0027BC  AE16               	btfss	(___lomod@divisor+7)^0,7,c
  4197  0027BE  EFE3  F013         	goto	u4451
  4198  0027C2  EFE5  F013         	goto	u4450
  4199  0027C6                     u4451:
  4200  0027C6  EFD4  F013         	goto	l4886
  4201  0027CA                     u4450:
  4202  0027CA                     l4890:
  4203  0027CA  500F               	movf	___lomod@divisor^0,w,c
  4204  0027CC  5C07               	subwf	___lomod@dividend^0,w,c
  4205  0027CE  5010               	movf	(___lomod@divisor+1)^0,w,c
  4206  0027D0  5808               	subwfb	(___lomod@dividend+1)^0,w,c
  4207  0027D2  5011               	movf	(___lomod@divisor+2)^0,w,c
  4208  0027D4  5809               	subwfb	(___lomod@dividend+2)^0,w,c
  4209  0027D6  5012               	movf	(___lomod@divisor+3)^0,w,c
  4210  0027D8  580A               	subwfb	(___lomod@dividend+3)^0,w,c
  4211  0027DA  5013               	movf	(___lomod@divisor+4)^0,w,c
  4212  0027DC  580B               	subwfb	(___lomod@dividend+4)^0,w,c
  4213  0027DE  5014               	movf	(___lomod@divisor+5)^0,w,c
  4214  0027E0  580C               	subwfb	(___lomod@dividend+5)^0,w,c
  4215  0027E2  5015               	movf	(___lomod@divisor+6)^0,w,c
  4216  0027E4  580D               	subwfb	(___lomod@dividend+6)^0,w,c
  4217  0027E6  5016               	movf	(___lomod@divisor+7)^0,w,c
  4218  0027E8  580E               	subwfb	(___lomod@dividend+7)^0,w,c
  4219  0027EA  A0D8               	btfss	status,0,c
  4220  0027EC  EFFA  F013         	goto	u4461
  4221  0027F0  EFFC  F013         	goto	u4460
  4222  0027F4                     u4461:
  4223  0027F4  EF0C  F014         	goto	l4894
  4224  0027F8                     u4460:
  4225  0027F8  500F               	movf	___lomod@divisor^0,w,c
  4226  0027FA  5E07               	subwf	___lomod@dividend^0,f,c
  4227  0027FC  5010               	movf	(___lomod@divisor+1)^0,w,c
  4228  0027FE  5A08               	subwfb	(___lomod@dividend+1)^0,f,c
  4229  002800  5011               	movf	(___lomod@divisor+2)^0,w,c
  4230  002802  5A09               	subwfb	(___lomod@dividend+2)^0,f,c
  4231  002804  5012               	movf	(___lomod@divisor+3)^0,w,c
  4232  002806  5A0A               	subwfb	(___lomod@dividend+3)^0,f,c
  4233  002808  5013               	movf	(___lomod@divisor+4)^0,w,c
  4234  00280A  5A0B               	subwfb	(___lomod@dividend+4)^0,f,c
  4235  00280C  5014               	movf	(___lomod@divisor+5)^0,w,c
  4236  00280E  5A0C               	subwfb	(___lomod@dividend+5)^0,f,c
  4237  002810  5015               	movf	(___lomod@divisor+6)^0,w,c
  4238  002812  5A0D               	subwfb	(___lomod@dividend+6)^0,f,c
  4239  002814  5016               	movf	(___lomod@divisor+7)^0,w,c
  4240  002816  5A0E               	subwfb	(___lomod@dividend+7)^0,f,c
  4241  002818                     l4894:
  4242  002818  90D8               	bcf	status,0,c
  4243  00281A  3216               	rrcf	(___lomod@divisor+7)^0,f,c
  4244  00281C  3215               	rrcf	(___lomod@divisor+6)^0,f,c
  4245  00281E  3214               	rrcf	(___lomod@divisor+5)^0,f,c
  4246  002820  3213               	rrcf	(___lomod@divisor+4)^0,f,c
  4247  002822  3212               	rrcf	(___lomod@divisor+3)^0,f,c
  4248  002824  3211               	rrcf	(___lomod@divisor+2)^0,f,c
  4249  002826  3210               	rrcf	(___lomod@divisor+1)^0,f,c
  4250  002828  320F               	rrcf	___lomod@divisor^0,f,c
  4251  00282A  2E17               	decfsz	___lomod@counter^0,f,c
  4252  00282C  EFE5  F013         	goto	l4890
  4253  002830                     l1255:
  4254  002830  C007  F007         	movff	___lomod@dividend,?___lomod
  4255  002834  C008  F008         	movff	___lomod@dividend+1,?___lomod+1
  4256  002838  C009  F009         	movff	___lomod@dividend+2,?___lomod+2
  4257  00283C  C00A  F00A         	movff	___lomod@dividend+3,?___lomod+3
  4258  002840  C00B  F00B         	movff	___lomod@dividend+4,?___lomod+4
  4259  002844  C00C  F00C         	movff	___lomod@dividend+5,?___lomod+5
  4260  002848  C00D  F00D         	movff	___lomod@dividend+6,?___lomod+6
  4261  00284C  C00E  F00E         	movff	___lomod@dividend+7,?___lomod+7
  4262  002850  0012               	return		;funcret
  4263  002852                     __end_of___lomod:
  4264                           	opt callstack 0
  4265                           
  4266 ;; *************** function ___lodiv *****************
  4267 ;; Defined at:
  4268 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  dividend        8    6[COMRAM] unsigned long long 
  4271 ;;  divisor         8   14[COMRAM] unsigned long long 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  quotient        8   22[COMRAM] unsigned long long 
  4274 ;;  counter         1   30[COMRAM] unsigned char 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  8    6[COMRAM] unsigned long long 
  4277 ;; Registers used:
  4278 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4284 ;;      Params:        16       0       0       0       0       0       0
  4285 ;;      Locals:         9       0       0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0
  4287 ;;      Totals:        25       0       0       0       0       0       0
  4288 ;;Total ram usage:       25 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    1
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_utoa
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text16
  4299  0024DA                     __ptext16:
  4300                           	opt callstack 0
  4301  0024DA                     ___lodiv:
  4302                           	opt callstack 25
  4303  0024DA  EE20  F017         	lfsr	2,___lodiv@quotient
  4304  0024DE  0E07               	movlw	7
  4305  0024E0                     u4401:
  4306  0024E0  6ADE               	clrf	postinc2,c
  4307  0024E2  06E8               	decf	wreg,f,c
  4308  0024E4  E2FD               	bc	u4401
  4309  0024E6  500F               	movf	___lodiv@divisor^0,w,c
  4310  0024E8  1010               	iorwf	(___lodiv@divisor+1)^0,w,c
  4311  0024EA  1011               	iorwf	(___lodiv@divisor+2)^0,w,c
  4312  0024EC  1012               	iorwf	(___lodiv@divisor+3)^0,w,c
  4313  0024EE  1013               	iorwf	(___lodiv@divisor+4)^0,w,c
  4314  0024F0  1014               	iorwf	(___lodiv@divisor+5)^0,w,c
  4315  0024F2  1015               	iorwf	(___lodiv@divisor+6)^0,w,c
  4316  0024F4  1016               	iorwf	(___lodiv@divisor+7)^0,w,c
  4317  0024F6  B4D8               	btfsc	status,2,c
  4318  0024F8  EF80  F012         	goto	u4411
  4319  0024FC  EF82  F012         	goto	u4410
  4320  002500                     u4411:
  4321  002500  EFD4  F012         	goto	l1245
  4322  002504                     u4410:
  4323  002504  0E01               	movlw	1
  4324  002506  6E1F               	movwf	___lodiv@counter^0,c
  4325  002508  EF90  F012         	goto	l4868
  4326  00250C                     l4866:
  4327  00250C  90D8               	bcf	status,0,c
  4328  00250E  360F               	rlcf	___lodiv@divisor^0,f,c
  4329  002510  3610               	rlcf	(___lodiv@divisor+1)^0,f,c
  4330  002512  3611               	rlcf	(___lodiv@divisor+2)^0,f,c
  4331  002514  3612               	rlcf	(___lodiv@divisor+3)^0,f,c
  4332  002516  3613               	rlcf	(___lodiv@divisor+4)^0,f,c
  4333  002518  3614               	rlcf	(___lodiv@divisor+5)^0,f,c
  4334  00251A  3615               	rlcf	(___lodiv@divisor+6)^0,f,c
  4335  00251C  3616               	rlcf	(___lodiv@divisor+7)^0,f,c
  4336  00251E  2A1F               	incf	___lodiv@counter^0,f,c
  4337  002520                     l4868:
  4338  002520  AE16               	btfss	(___lodiv@divisor+7)^0,7,c
  4339  002522  EF95  F012         	goto	u4421
  4340  002526  EF97  F012         	goto	u4420
  4341  00252A                     u4421:
  4342  00252A  EF86  F012         	goto	l4866
  4343  00252E                     u4420:
  4344  00252E                     l4870:
  4345  00252E  90D8               	bcf	status,0,c
  4346  002530  3617               	rlcf	___lodiv@quotient^0,f,c
  4347  002532  3618               	rlcf	(___lodiv@quotient+1)^0,f,c
  4348  002534  3619               	rlcf	(___lodiv@quotient+2)^0,f,c
  4349  002536  361A               	rlcf	(___lodiv@quotient+3)^0,f,c
  4350  002538  361B               	rlcf	(___lodiv@quotient+4)^0,f,c
  4351  00253A  361C               	rlcf	(___lodiv@quotient+5)^0,f,c
  4352  00253C  361D               	rlcf	(___lodiv@quotient+6)^0,f,c
  4353  00253E  361E               	rlcf	(___lodiv@quotient+7)^0,f,c
  4354  002540  500F               	movf	___lodiv@divisor^0,w,c
  4355  002542  5C07               	subwf	___lodiv@dividend^0,w,c
  4356  002544  5010               	movf	(___lodiv@divisor+1)^0,w,c
  4357  002546  5808               	subwfb	(___lodiv@dividend+1)^0,w,c
  4358  002548  5011               	movf	(___lodiv@divisor+2)^0,w,c
  4359  00254A  5809               	subwfb	(___lodiv@dividend+2)^0,w,c
  4360  00254C  5012               	movf	(___lodiv@divisor+3)^0,w,c
  4361  00254E  580A               	subwfb	(___lodiv@dividend+3)^0,w,c
  4362  002550  5013               	movf	(___lodiv@divisor+4)^0,w,c
  4363  002552  580B               	subwfb	(___lodiv@dividend+4)^0,w,c
  4364  002554  5014               	movf	(___lodiv@divisor+5)^0,w,c
  4365  002556  580C               	subwfb	(___lodiv@dividend+5)^0,w,c
  4366  002558  5015               	movf	(___lodiv@divisor+6)^0,w,c
  4367  00255A  580D               	subwfb	(___lodiv@dividend+6)^0,w,c
  4368  00255C  5016               	movf	(___lodiv@divisor+7)^0,w,c
  4369  00255E  580E               	subwfb	(___lodiv@dividend+7)^0,w,c
  4370  002560  A0D8               	btfss	status,0,c
  4371  002562  EFB5  F012         	goto	u4431
  4372  002566  EFB7  F012         	goto	u4430
  4373  00256A                     u4431:
  4374  00256A  EFC8  F012         	goto	l4878
  4375  00256E                     u4430:
  4376  00256E  500F               	movf	___lodiv@divisor^0,w,c
  4377  002570  5E07               	subwf	___lodiv@dividend^0,f,c
  4378  002572  5010               	movf	(___lodiv@divisor+1)^0,w,c
  4379  002574  5A08               	subwfb	(___lodiv@dividend+1)^0,f,c
  4380  002576  5011               	movf	(___lodiv@divisor+2)^0,w,c
  4381  002578  5A09               	subwfb	(___lodiv@dividend+2)^0,f,c
  4382  00257A  5012               	movf	(___lodiv@divisor+3)^0,w,c
  4383  00257C  5A0A               	subwfb	(___lodiv@dividend+3)^0,f,c
  4384  00257E  5013               	movf	(___lodiv@divisor+4)^0,w,c
  4385  002580  5A0B               	subwfb	(___lodiv@dividend+4)^0,f,c
  4386  002582  5014               	movf	(___lodiv@divisor+5)^0,w,c
  4387  002584  5A0C               	subwfb	(___lodiv@dividend+5)^0,f,c
  4388  002586  5015               	movf	(___lodiv@divisor+6)^0,w,c
  4389  002588  5A0D               	subwfb	(___lodiv@dividend+6)^0,f,c
  4390  00258A  5016               	movf	(___lodiv@divisor+7)^0,w,c
  4391  00258C  5A0E               	subwfb	(___lodiv@dividend+7)^0,f,c
  4392  00258E  8017               	bsf	___lodiv@quotient^0,0,c
  4393  002590                     l4878:
  4394  002590  90D8               	bcf	status,0,c
  4395  002592  3216               	rrcf	(___lodiv@divisor+7)^0,f,c
  4396  002594  3215               	rrcf	(___lodiv@divisor+6)^0,f,c
  4397  002596  3214               	rrcf	(___lodiv@divisor+5)^0,f,c
  4398  002598  3213               	rrcf	(___lodiv@divisor+4)^0,f,c
  4399  00259A  3212               	rrcf	(___lodiv@divisor+3)^0,f,c
  4400  00259C  3211               	rrcf	(___lodiv@divisor+2)^0,f,c
  4401  00259E  3210               	rrcf	(___lodiv@divisor+1)^0,f,c
  4402  0025A0  320F               	rrcf	___lodiv@divisor^0,f,c
  4403  0025A2  2E1F               	decfsz	___lodiv@counter^0,f,c
  4404  0025A4  EF97  F012         	goto	l4870
  4405  0025A8                     l1245:
  4406  0025A8  C017  F007         	movff	___lodiv@quotient,?___lodiv
  4407  0025AC  C018  F008         	movff	___lodiv@quotient+1,?___lodiv+1
  4408  0025B0  C019  F009         	movff	___lodiv@quotient+2,?___lodiv+2
  4409  0025B4  C01A  F00A         	movff	___lodiv@quotient+3,?___lodiv+3
  4410  0025B8  C01B  F00B         	movff	___lodiv@quotient+4,?___lodiv+4
  4411  0025BC  C01C  F00C         	movff	___lodiv@quotient+5,?___lodiv+5
  4412  0025C0  C01D  F00D         	movff	___lodiv@quotient+6,?___lodiv+6
  4413  0025C4  C01E  F00E         	movff	___lodiv@quotient+7,?___lodiv+7
  4414  0025C8  0012               	return		;funcret
  4415  0025CA                     __end_of___lodiv:
  4416                           	opt callstack 0
  4417                           
  4418 ;; *************** function _strncmp *****************
  4419 ;; Defined at:
  4420 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  _l              2    6[COMRAM] PTR const unsigned char 
  4423 ;;		 -> STR_18(13), STR_17(13), STR_16(13), STR_15(13), 
  4424 ;;		 -> STR_14(15), STR_13(15), STR_12(11), STR_11(12), 
  4425 ;;		 -> STR_10(12), STR_9(12), STR_8(17), STR_7(17), 
  4426 ;;		 -> STR_6(12), STR_5(12), STR_4(23), STR_3(24), 
  4427 ;;		 -> STR_2(9), STR_1(10), 
  4428 ;;  _r              2    8[COMRAM] PTR const unsigned char 
  4429 ;;		 -> STR_39(3), STR_35(3), STR_30(3), STR_25(3), 
  4430 ;;		 -> STR_21(3), 
  4431 ;;  n               2   10[COMRAM] unsigned int 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  r               2   15[COMRAM] PTR const unsigned char 
  4434 ;;		 -> STR_39(3), STR_35(3), STR_30(3), STR_25(3), 
  4435 ;;		 -> STR_21(3), 
  4436 ;;  l               2   13[COMRAM] PTR const unsigned char 
  4437 ;;		 -> STR_18(13), STR_17(13), STR_16(13), STR_15(13), 
  4438 ;;		 -> STR_14(15), STR_13(15), STR_12(11), STR_11(12), 
  4439 ;;		 -> STR_10(12), STR_9(12), STR_8(17), STR_7(17), 
  4440 ;;		 -> STR_6(12), STR_5(12), STR_4(23), STR_3(24), 
  4441 ;;		 -> STR_2(9), STR_1(10), 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  2    6[COMRAM] int 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4451 ;;      Params:         6       0       0       0       0       0       0
  4452 ;;      Locals:         4       0       0       0       0       0       0
  4453 ;;      Temps:          1       0       0       0       0       0       0
  4454 ;;      Totals:        11       0       0       0       0       0       0
  4455 ;;Total ram usage:       11 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    1
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_vfpfcnvrt
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text17
  4466  0025CA                     __ptext17:
  4467                           	opt callstack 0
  4468  0025CA                     _strncmp:
  4469                           	opt callstack 26
  4470  0025CA  C007  F00E         	movff	strncmp@_l,strncmp@l
  4471  0025CE  C008  F00F         	movff	strncmp@_l+1,strncmp@l+1
  4472  0025D2  C009  F010         	movff	strncmp@_r,strncmp@r
  4473  0025D6  C00A  F011         	movff	strncmp@_r+1,strncmp@r+1
  4474  0025DA  060B               	decf	strncmp@n^0,f,c
  4475  0025DC  A0D8               	btfss	status,0,c
  4476  0025DE  060C               	decf	(strncmp@n+1)^0,f,c
  4477  0025E0  280B               	incf	strncmp@n^0,w,c
  4478  0025E2  E106               	bnz	u4951
  4479  0025E4  280C               	incf	(strncmp@n+1)^0,w,c
  4480  0025E6  A4D8               	btfss	status,2,c
  4481  0025E8  EFF8  F012         	goto	u4951
  4482  0025EC  EFFA  F012         	goto	u4950
  4483  0025F0                     u4951:
  4484  0025F0  EF07  F013         	goto	l5124
  4485  0025F4                     u4950:
  4486  0025F4  0E00               	movlw	0
  4487  0025F6  6E08               	movwf	(?_strncmp+1)^0,c
  4488  0025F8  0E00               	movlw	0
  4489  0025FA  6E07               	movwf	?_strncmp^0,c
  4490  0025FC  EF53  F013         	goto	l1592
  4491  002600                     l5122:
  4492  002600  4A0E               	infsnz	strncmp@l^0,f,c
  4493  002602  2A0F               	incf	(strncmp@l+1)^0,f,c
  4494  002604  4A10               	infsnz	strncmp@r^0,f,c
  4495  002606  2A11               	incf	(strncmp@r+1)^0,f,c
  4496  002608  060B               	decf	strncmp@n^0,f,c
  4497  00260A  A0D8               	btfss	status,0,c
  4498  00260C  060C               	decf	(strncmp@n+1)^0,f,c
  4499  00260E                     l5124:
  4500  00260E  C00E  FFF6         	movff	strncmp@l,tblptrl
  4501  002612  C00F  FFF7         	movff	strncmp@l+1,tblptrh
  4502  002616                     	if	0	;tblptru may be non-zero
  4503  002616                     	endif
  4504  002616                     	if	0	;tblptru may be non-zero
  4505  002616                     	endif
  4506  002616  0008               	tblrd		*
  4507  002618  50F5               	movf	tablat,w,c
  4508  00261A  0900               	iorlw	0
  4509  00261C  B4D8               	btfsc	status,2,c
  4510  00261E  EF13  F013         	goto	u4961
  4511  002622  EF15  F013         	goto	u4960
  4512  002626                     u4961:
  4513  002626  EF41  F013         	goto	l5132
  4514  00262A                     u4960:
  4515  00262A  C010  FFF6         	movff	strncmp@r,tblptrl
  4516  00262E  C011  FFF7         	movff	strncmp@r+1,tblptrh
  4517  002632                     	if	0	;tblptru may be non-zero
  4518  002632                     	endif
  4519  002632                     	if	0	;tblptru may be non-zero
  4520  002632                     	endif
  4521  002632  0008               	tblrd		*
  4522  002634  50F5               	movf	tablat,w,c
  4523  002636  0900               	iorlw	0
  4524  002638  B4D8               	btfsc	status,2,c
  4525  00263A  EF21  F013         	goto	u4971
  4526  00263E  EF23  F013         	goto	u4970
  4527  002642                     u4971:
  4528  002642  EF41  F013         	goto	l5132
  4529  002646                     u4970:
  4530  002646  500B               	movf	strncmp@n^0,w,c
  4531  002648  100C               	iorwf	(strncmp@n+1)^0,w,c
  4532  00264A  B4D8               	btfsc	status,2,c
  4533  00264C  EF2A  F013         	goto	u4981
  4534  002650  EF2C  F013         	goto	u4980
  4535  002654                     u4981:
  4536  002654  EF41  F013         	goto	l5132
  4537  002658                     u4980:
  4538  002658  C00E  FFF6         	movff	strncmp@l,tblptrl
  4539  00265C  C00F  FFF7         	movff	strncmp@l+1,tblptrh
  4540  002660                     	if	0	;tblptru may be non-zero
  4541  002660                     	endif
  4542  002660                     	if	0	;tblptru may be non-zero
  4543  002660                     	endif
  4544  002660  0008               	tblrd		*
  4545  002662  CFF5 F00D          	movff	tablat,??_strncmp
  4546  002666  C010  FFF6         	movff	strncmp@r,tblptrl
  4547  00266A  C011  FFF7         	movff	strncmp@r+1,tblptrh
  4548  00266E                     	if	0	;tblptru may be non-zero
  4549  00266E                     	endif
  4550  00266E                     	if	0	;tblptru may be non-zero
  4551  00266E                     	endif
  4552  00266E  0008               	tblrd		*
  4553  002670  50F5               	movf	tablat,w,c
  4554  002672  180D               	xorwf	??_strncmp^0,w,c
  4555  002674  B4D8               	btfsc	status,2,c
  4556  002676  EF3F  F013         	goto	u4991
  4557  00267A  EF41  F013         	goto	u4990
  4558  00267E                     u4991:
  4559  00267E  EF00  F013         	goto	l5122
  4560  002682                     u4990:
  4561  002682                     l5132:
  4562  002682  C00E  FFF6         	movff	strncmp@l,tblptrl
  4563  002686  C00F  FFF7         	movff	strncmp@l+1,tblptrh
  4564  00268A                     	if	0	;tblptru may be non-zero
  4565  00268A                     	endif
  4566  00268A                     	if	0	;tblptru may be non-zero
  4567  00268A                     	endif
  4568  00268A  0008               	tblrd		*
  4569  00268C  CFF5 F00D          	movff	tablat,??_strncmp
  4570  002690  C010  FFF6         	movff	strncmp@r,tblptrl
  4571  002694  C011  FFF7         	movff	strncmp@r+1,tblptrh
  4572  002698                     	if	0	;tblptru may be non-zero
  4573  002698                     	endif
  4574  002698                     	if	0	;tblptru may be non-zero
  4575  002698                     	endif
  4576  002698  0008               	tblrd		*
  4577  00269A  50F5               	movf	tablat,w,c
  4578  00269C  5C0D               	subwf	??_strncmp^0,w,c
  4579  00269E  6E07               	movwf	?_strncmp^0,c
  4580  0026A0  6A08               	clrf	(?_strncmp+1)^0,c
  4581  0026A2  A0D8               	btfss	status,0,c
  4582  0026A4  0608               	decf	(?_strncmp+1)^0,f,c
  4583  0026A6                     l1592:
  4584  0026A6  0012               	return		;funcret
  4585  0026A8                     __end_of_strncmp:
  4586                           	opt callstack 0
  4587                           
  4588 ;; *************** function _dtoa *****************
  4589 ;; Defined at:
  4590 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  4593 ;;		 -> sprintf@f(6), 
  4594 ;;  d               8   35[COMRAM] long long 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;  n               8   59[COMRAM] long long 
  4597 ;;  i               2   67[COMRAM] int 
  4598 ;;  s               2   57[COMRAM] int 
  4599 ;;  w               2   55[COMRAM] int 
  4600 ;;  p               2   53[COMRAM] int 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  2   33[COMRAM] int 
  4603 ;; Registers used:
  4604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4610 ;;      Params:        10       0       0       0       0       0       0
  4611 ;;      Locals:        18       0       0       0       0       0       0
  4612 ;;      Temps:          8       0       0       0       0       0       0
  4613 ;;      Totals:        36       0       0       0       0       0       0
  4614 ;;Total ram usage:       36 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    5
  4617 ;; This function calls:
  4618 ;;		___aodiv
  4619 ;;		___aomod
  4620 ;;		_abs
  4621 ;;		_pad
  4622 ;; This function is called by:
  4623 ;;		_vfpfcnvrt
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text18
  4628  001092                     __ptext18:
  4629                           	opt callstack 0
  4630  001092                     _dtoa:
  4631                           	opt callstack 22
  4632  001092                     
  4633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4634  001092  C024  F03C         	movff	dtoa@d,dtoa@n
  4635  001096  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  4636  00109A  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  4637  00109E  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  4638  0010A2  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  4639  0010A6  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  4640  0010AA  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  4641  0010AE  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  4642  0010B2                     
  4643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4644  0010B2  BE43               	btfsc	(dtoa@n+7)^0,7,c
  4645  0010B4  EF5E  F008         	goto	u4491
  4646  0010B8  EF61  F008         	goto	u4490
  4647  0010BC                     u4491:
  4648  0010BC  0E01               	movlw	1
  4649  0010BE  EF62  F008         	goto	u4500
  4650  0010C2                     u4490:
  4651  0010C2  0E00               	movlw	0
  4652  0010C4                     u4500:
  4653  0010C4  6E3A               	movwf	dtoa@s^0,c
  4654  0010C6  6A3B               	clrf	(dtoa@s+1)^0,c
  4655                           
  4656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4657  0010C8  503A               	movf	dtoa@s^0,w,c
  4658  0010CA  103B               	iorwf	(dtoa@s+1)^0,w,c
  4659  0010CC  B4D8               	btfsc	status,2,c
  4660  0010CE  EF6B  F008         	goto	u4511
  4661  0010D2  EF6D  F008         	goto	u4510
  4662  0010D6                     u4511:
  4663  0010D6  EF7D  F008         	goto	l4916
  4664  0010DA                     u4510:
  4665  0010DA                     
  4666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4667  0010DA  1E43               	comf	(dtoa@n+7)^0,f,c
  4668  0010DC  1E42               	comf	(dtoa@n+6)^0,f,c
  4669  0010DE  1E41               	comf	(dtoa@n+5)^0,f,c
  4670  0010E0  1E40               	comf	(dtoa@n+4)^0,f,c
  4671  0010E2  1E3F               	comf	(dtoa@n+3)^0,f,c
  4672  0010E4  1E3E               	comf	(dtoa@n+2)^0,f,c
  4673  0010E6  1E3D               	comf	(dtoa@n+1)^0,f,c
  4674  0010E8  6C3C               	negf	dtoa@n^0,c
  4675  0010EA  0E00               	movlw	0
  4676  0010EC  223D               	addwfc	(dtoa@n+1)^0,f,c
  4677  0010EE  223E               	addwfc	(dtoa@n+2)^0,f,c
  4678  0010F0  223F               	addwfc	(dtoa@n+3)^0,f,c
  4679  0010F2  2240               	addwfc	(dtoa@n+4)^0,f,c
  4680  0010F4  2241               	addwfc	(dtoa@n+5)^0,f,c
  4681  0010F6  2242               	addwfc	(dtoa@n+6)^0,f,c
  4682  0010F8  2243               	addwfc	(dtoa@n+7)^0,f,c
  4683  0010FA                     l4916:
  4684                           
  4685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4686  0010FA  BE73               	btfsc	(_prec+1)^0,7,c
  4687  0010FC  EF82  F008         	goto	u4521
  4688  001100  EF84  F008         	goto	u4520
  4689  001104                     u4521:
  4690  001104  EF85  F008         	goto	l4920
  4691  001108                     u4520:
  4692  001108                     
  4693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4694  001108  9274               	bcf	_flags^0,1,c
  4695  00110A                     l4920:
  4696                           
  4697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4698  00110A  BE73               	btfsc	(_prec+1)^0,7,c
  4699  00110C  EF92  F008         	goto	u4530
  4700  001110  5073               	movf	(_prec+1)^0,w,c
  4701  001112  E106               	bnz	u4531
  4702  001114  0472               	decf	_prec^0,w,c
  4703  001116  B0D8               	btfsc	status,0,c
  4704  001118  EF90  F008         	goto	u4531
  4705  00111C  EF92  F008         	goto	u4530
  4706  001120                     u4531:
  4707  001120  EF98  F008         	goto	l704
  4708  001124                     u4530:
  4709  001124  0E00               	movlw	0
  4710  001126  6E37               	movwf	(dtoa@p+1)^0,c
  4711  001128  0E01               	movlw	1
  4712  00112A  6E36               	movwf	dtoa@p^0,c
  4713  00112C  EF9C  F008         	goto	l706
  4714  001130                     l704:
  4715  001130  C072  F036         	movff	_prec,dtoa@p
  4716  001134  C073  F037         	movff	_prec+1,dtoa@p+1
  4717  001138                     l706:
  4718                           
  4719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4720  001138  C0A2  F038         	movff	_width,dtoa@w
  4721  00113C  C0A3  F039         	movff	_width+1,dtoa@w+1
  4722  001140                     
  4723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4724  001140  503A               	movf	dtoa@s^0,w,c
  4725  001142  103B               	iorwf	(dtoa@s+1)^0,w,c
  4726  001144  A4D8               	btfss	status,2,c
  4727  001146  EFA7  F008         	goto	u4541
  4728  00114A  EFA9  F008         	goto	u4540
  4729  00114E                     u4541:
  4730  00114E  EFB0  F008         	goto	l4928
  4731  001152                     u4540:
  4732  001152  A474               	btfss	_flags^0,2,c
  4733  001154  EFAE  F008         	goto	u4551
  4734  001158  EFB0  F008         	goto	u4550
  4735  00115C                     u4551:
  4736  00115C  EFB3  F008         	goto	l4930
  4737  001160                     u4550:
  4738  001160                     l4928:
  4739                           
  4740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4741  001160  0638               	decf	dtoa@w^0,f,c
  4742  001162  A0D8               	btfss	status,0,c
  4743  001164  0639               	decf	(dtoa@w+1)^0,f,c
  4744  001166                     l4930:
  4745                           
  4746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4747  001166  0E00               	movlw	0
  4748  001168  6E45               	movwf	(dtoa@i+1)^0,c
  4749  00116A  0E1F               	movlw	31
  4750  00116C  6E44               	movwf	dtoa@i^0,c
  4751  00116E                     
  4752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4753  00116E  0E00               	movlw	0
  4754  001170  0101               	movlb	1	; () banked
  4755  001172  6F74               	movwf	(_dbuf+31)& (0+255),b
  4756                           
  4757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4758  001174  EF38  F009         	goto	l4944
  4759  001178                     l4934:
  4760                           
  4761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4762  001178  0644               	decf	dtoa@i^0,f,c
  4763  00117A  A0D8               	btfss	status,0,c
  4764  00117C  0645               	decf	(dtoa@i+1)^0,f,c
  4765  00117E                     
  4766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4767  00117E  0E55               	movlw	low _dbuf
  4768  001180  2444               	addwf	dtoa@i^0,w,c
  4769  001182  6ED9               	movwf	fsr2l,c
  4770  001184  0E01               	movlw	high _dbuf
  4771  001186  2045               	addwfc	(dtoa@i+1)^0,w,c
  4772  001188  6EDA               	movwf	fsr2h,c
  4773  00118A  C03C  F007         	movff	dtoa@n,___aomod@dividend
  4774  00118E  C03D  F008         	movff	dtoa@n+1,___aomod@dividend+1
  4775  001192  C03E  F009         	movff	dtoa@n+2,___aomod@dividend+2
  4776  001196  C03F  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  4777  00119A  C040  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  4778  00119E  C041  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  4779  0011A2  C042  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  4780  0011A6  C043  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  4781  0011AA  0E0A               	movlw	10
  4782  0011AC  6E0F               	movwf	___aomod@divisor^0,c
  4783  0011AE  0E00               	movlw	0
  4784  0011B0  6E10               	movwf	(___aomod@divisor+1)^0,c
  4785  0011B2  0E00               	movlw	0
  4786  0011B4  6E11               	movwf	(___aomod@divisor+2)^0,c
  4787  0011B6  0E00               	movlw	0
  4788  0011B8  6E12               	movwf	(___aomod@divisor+3)^0,c
  4789  0011BA  0E00               	movlw	0
  4790  0011BC  6E13               	movwf	(___aomod@divisor+4)^0,c
  4791  0011BE  0E00               	movlw	0
  4792  0011C0  6E14               	movwf	(___aomod@divisor+5)^0,c
  4793  0011C2  0E00               	movlw	0
  4794  0011C4  6E15               	movwf	(___aomod@divisor+6)^0,c
  4795  0011C6  0E00               	movlw	0
  4796  0011C8  6E16               	movwf	(___aomod@divisor+7)^0,c
  4797  0011CA  EC20  F010         	call	___aomod	;wreg free
  4798  0011CE  C007  F02C         	movff	?___aomod,??_dtoa
  4799  0011D2  C008  F02D         	movff	?___aomod+1,??_dtoa+1
  4800  0011D6  C009  F02E         	movff	?___aomod+2,??_dtoa+2
  4801  0011DA  C00A  F02F         	movff	?___aomod+3,??_dtoa+3
  4802  0011DE  C00B  F030         	movff	?___aomod+4,??_dtoa+4
  4803  0011E2  C00C  F031         	movff	?___aomod+5,??_dtoa+5
  4804  0011E6  C00D  F032         	movff	?___aomod+6,??_dtoa+6
  4805  0011EA  C00E  F033         	movff	?___aomod+7,??_dtoa+7
  4806  0011EE  C02C  F019         	movff	??_dtoa,abs@a
  4807  0011F2  C02E  F01A         	movff	??_dtoa+2,abs@a+1
  4808  0011F6  ECEF  F016         	call	_abs	;wreg free
  4809  0011FA  5019               	movf	?_abs^0,w,c
  4810  0011FC  0F30               	addlw	48
  4811  0011FE  6EDF               	movwf	indf2,c
  4812  001200                     
  4813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4814  001200  0636               	decf	dtoa@p^0,f,c
  4815  001202  A0D8               	btfss	status,0,c
  4816  001204  0637               	decf	(dtoa@p+1)^0,f,c
  4817  001206                     
  4818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4819  001206  0638               	decf	dtoa@w^0,f,c
  4820  001208  A0D8               	btfss	status,0,c
  4821  00120A  0639               	decf	(dtoa@w+1)^0,f,c
  4822  00120C                     
  4823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4824  00120C  C03C  F007         	movff	dtoa@n,___aodiv@dividend
  4825  001210  C03D  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  4826  001214  C03E  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  4827  001218  C03F  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  4828  00121C  C040  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  4829  001220  C041  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  4830  001224  C042  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  4831  001228  C043  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  4832  00122C  0E0A               	movlw	10
  4833  00122E  6E0F               	movwf	___aodiv@divisor^0,c
  4834  001230  0E00               	movlw	0
  4835  001232  6E10               	movwf	(___aodiv@divisor+1)^0,c
  4836  001234  0E00               	movlw	0
  4837  001236  6E11               	movwf	(___aodiv@divisor+2)^0,c
  4838  001238  0E00               	movlw	0
  4839  00123A  6E12               	movwf	(___aodiv@divisor+3)^0,c
  4840  00123C  0E00               	movlw	0
  4841  00123E  6E13               	movwf	(___aodiv@divisor+4)^0,c
  4842  001240  0E00               	movlw	0
  4843  001242  6E14               	movwf	(___aodiv@divisor+5)^0,c
  4844  001244  0E00               	movlw	0
  4845  001246  6E15               	movwf	(___aodiv@divisor+6)^0,c
  4846  001248  0E00               	movlw	0
  4847  00124A  6E16               	movwf	(___aodiv@divisor+7)^0,c
  4848  00124C  ECA1  F00E         	call	___aodiv	;wreg free
  4849  001250  C007  F03C         	movff	?___aodiv,dtoa@n
  4850  001254  C008  F03D         	movff	?___aodiv+1,dtoa@n+1
  4851  001258  C009  F03E         	movff	?___aodiv+2,dtoa@n+2
  4852  00125C  C00A  F03F         	movff	?___aodiv+3,dtoa@n+3
  4853  001260  C00B  F040         	movff	?___aodiv+4,dtoa@n+4
  4854  001264  C00C  F041         	movff	?___aodiv+5,dtoa@n+5
  4855  001268  C00D  F042         	movff	?___aodiv+6,dtoa@n+6
  4856  00126C  C00E  F043         	movff	?___aodiv+7,dtoa@n+7
  4857  001270                     l4944:
  4858                           
  4859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4860  001270  BE45               	btfsc	(dtoa@i+1)^0,7,c
  4861  001272  EF43  F009         	goto	u4561
  4862  001276  5045               	movf	(dtoa@i+1)^0,w,c
  4863  001278  E108               	bnz	u4560
  4864  00127A  0444               	decf	dtoa@i^0,w,c
  4865  00127C  A0D8               	btfss	status,0,c
  4866  00127E  EF43  F009         	goto	u4561
  4867  001282  EF45  F009         	goto	u4560
  4868  001286                     u4561:
  4869  001286  EF75  F009         	goto	l4954
  4870  00128A                     u4560:
  4871  00128A  503C               	movf	dtoa@n^0,w,c
  4872  00128C  103D               	iorwf	(dtoa@n+1)^0,w,c
  4873  00128E  103E               	iorwf	(dtoa@n+2)^0,w,c
  4874  001290  103F               	iorwf	(dtoa@n+3)^0,w,c
  4875  001292  1040               	iorwf	(dtoa@n+4)^0,w,c
  4876  001294  1041               	iorwf	(dtoa@n+5)^0,w,c
  4877  001296  1042               	iorwf	(dtoa@n+6)^0,w,c
  4878  001298  1043               	iorwf	(dtoa@n+7)^0,w,c
  4879  00129A  A4D8               	btfss	status,2,c
  4880  00129C  EF52  F009         	goto	u4571
  4881  0012A0  EF54  F009         	goto	u4570
  4882  0012A4                     u4571:
  4883  0012A4  EFBC  F008         	goto	l4934
  4884  0012A8                     u4570:
  4885  0012A8  BE37               	btfsc	(dtoa@p+1)^0,7,c
  4886  0012AA  EF61  F009         	goto	u4580
  4887  0012AE  5037               	movf	(dtoa@p+1)^0,w,c
  4888  0012B0  E106               	bnz	u4581
  4889  0012B2  0436               	decf	dtoa@p^0,w,c
  4890  0012B4  B0D8               	btfsc	status,0,c
  4891  0012B6  EF5F  F009         	goto	u4581
  4892  0012BA  EF61  F009         	goto	u4580
  4893  0012BE                     u4581:
  4894  0012BE  EFBC  F008         	goto	l4934
  4895  0012C2                     u4580:
  4896  0012C2  BE39               	btfsc	(dtoa@w+1)^0,7,c
  4897  0012C4  EF6C  F009         	goto	u4591
  4898  0012C8  5039               	movf	(dtoa@w+1)^0,w,c
  4899  0012CA  E108               	bnz	u4590
  4900  0012CC  0438               	decf	dtoa@w^0,w,c
  4901  0012CE  A0D8               	btfss	status,0,c
  4902  0012D0  EF6C  F009         	goto	u4591
  4903  0012D4  EF6E  F009         	goto	u4590
  4904  0012D8                     u4591:
  4905  0012D8  EF75  F009         	goto	l4954
  4906  0012DC                     u4590:
  4907  0012DC  B274               	btfsc	_flags^0,1,c
  4908  0012DE  EF73  F009         	goto	u4601
  4909  0012E2  EF75  F009         	goto	u4600
  4910  0012E6                     u4601:
  4911  0012E6  EFBC  F008         	goto	l4934
  4912  0012EA                     u4600:
  4913  0012EA                     l4954:
  4914                           
  4915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4916  0012EA  503A               	movf	dtoa@s^0,w,c
  4917  0012EC  103B               	iorwf	(dtoa@s+1)^0,w,c
  4918  0012EE  A4D8               	btfss	status,2,c
  4919  0012F0  EF7C  F009         	goto	u4611
  4920  0012F4  EF7E  F009         	goto	u4610
  4921  0012F8                     u4611:
  4922  0012F8  EF85  F009         	goto	l4958
  4923  0012FC                     u4610:
  4924  0012FC  A474               	btfss	_flags^0,2,c
  4925  0012FE  EF83  F009         	goto	u4621
  4926  001302  EF85  F009         	goto	u4620
  4927  001306                     u4621:
  4928  001306  EFA3  F009         	goto	l4968
  4929  00130A                     u4620:
  4930  00130A                     l4958:
  4931                           
  4932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4933  00130A  0644               	decf	dtoa@i^0,f,c
  4934  00130C  A0D8               	btfss	status,0,c
  4935  00130E  0645               	decf	(dtoa@i+1)^0,f,c
  4936  001310                     
  4937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4938  001310  503A               	movf	dtoa@s^0,w,c
  4939  001312  103B               	iorwf	(dtoa@s+1)^0,w,c
  4940  001314  A4D8               	btfss	status,2,c
  4941  001316  EF8F  F009         	goto	u4631
  4942  00131A  EF91  F009         	goto	u4630
  4943  00131E                     u4631:
  4944  00131E  EF97  F009         	goto	l4964
  4945  001322                     u4630:
  4946  001322  0E00               	movlw	0
  4947  001324  6E35               	movwf	(_dtoa$975+1)^0,c
  4948  001326  0E2B               	movlw	43
  4949  001328  6E34               	movwf	_dtoa$975^0,c
  4950  00132A  EF9B  F009         	goto	l4966
  4951  00132E                     l4964:
  4952  00132E  0E00               	movlw	0
  4953  001330  6E35               	movwf	(_dtoa$975+1)^0,c
  4954  001332  0E2D               	movlw	45
  4955  001334  6E34               	movwf	_dtoa$975^0,c
  4956  001336                     l4966:
  4957  001336  0E55               	movlw	low _dbuf
  4958  001338  2444               	addwf	dtoa@i^0,w,c
  4959  00133A  6ED9               	movwf	fsr2l,c
  4960  00133C  0E01               	movlw	high _dbuf
  4961  00133E  2045               	addwfc	(dtoa@i+1)^0,w,c
  4962  001340  6EDA               	movwf	fsr2h,c
  4963  001342  C034  FFDF         	movff	_dtoa$975,indf2
  4964  001346                     l4968:
  4965                           
  4966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4967  001346  C022  F017         	movff	dtoa@fp,pad@fp
  4968  00134A  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  4969  00134E  0E55               	movlw	low _dbuf
  4970  001350  2444               	addwf	dtoa@i^0,w,c
  4971  001352  6E19               	movwf	pad@buf^0,c
  4972  001354  0E01               	movlw	high _dbuf
  4973  001356  2045               	addwfc	(dtoa@i+1)^0,w,c
  4974  001358  6E1A               	movwf	(pad@buf+1)^0,c
  4975  00135A  C038  F01B         	movff	dtoa@w,pad@p
  4976  00135E  C039  F01C         	movff	dtoa@w+1,pad@p+1
  4977  001362  EC8E  F014         	call	_pad	;wreg free
  4978  001366  C017  F022         	movff	?_pad,?_dtoa
  4979  00136A  C018  F023         	movff	?_pad+1,?_dtoa+1
  4980  00136E  0012               	return		;funcret
  4981  001370                     __end_of_dtoa:
  4982                           	opt callstack 0
  4983                           
  4984 ;; *************** function _pad *****************
  4985 ;; Defined at:
  4986 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4989 ;;		 -> sprintf@f(6), 
  4990 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4991 ;;		 -> dbuf(32), 
  4992 ;;  p               2   26[COMRAM] int 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  w               2   31[COMRAM] int 
  4995 ;;  i               2   29[COMRAM] int 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  2   22[COMRAM] int 
  4998 ;; Registers used:
  4999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5005 ;;      Params:         6       0       0       0       0       0       0
  5006 ;;      Locals:         4       0       0       0       0       0       0
  5007 ;;      Temps:          1       0       0       0       0       0       0
  5008 ;;      Totals:        11       0       0       0       0       0       0
  5009 ;;Total ram usage:       11 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    4
  5012 ;; This function calls:
  5013 ;;		_fputc
  5014 ;;		_fputs
  5015 ;;		_strlen
  5016 ;; This function is called by:
  5017 ;;		_dtoa
  5018 ;;		_utoa
  5019 ;;		_xtoa
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text19
  5024  00291C                     __ptext19:
  5025                           	opt callstack 0
  5026  00291C                     _pad:
  5027                           	opt callstack 22
  5028  00291C                     
  5029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5030  00291C  A074               	btfss	_flags^0,0,c
  5031  00291E  EF93  F014         	goto	u4131
  5032  002922  EF95  F014         	goto	u4130
  5033  002926                     u4131:
  5034  002926  EF9F  F014         	goto	l4730
  5035  00292A                     u4130:
  5036  00292A                     
  5037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5038  00292A  C019  F010         	movff	pad@buf,fputs@s
  5039  00292E  C01A  F011         	movff	pad@buf+1,fputs@s+1
  5040  002932  C017  F012         	movff	pad@fp,fputs@fp
  5041  002936  C018  F013         	movff	pad@fp+1,fputs@fp+1
  5042  00293A  ECCD  F016         	call	_fputs	;wreg free
  5043  00293E                     l4730:
  5044                           
  5045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5046  00293E  BE1C               	btfsc	(pad@p+1)^0,7,c
  5047  002940  EFA4  F014         	goto	u4141
  5048  002944  EFA6  F014         	goto	u4140
  5049  002948                     u4141:
  5050  002948  EFAC  F014         	goto	l4734
  5051  00294C                     u4140:
  5052  00294C  C01B  F020         	movff	pad@p,pad@w
  5053  002950  C01C  F021         	movff	pad@p+1,pad@w+1
  5054  002954  EFB0  F014         	goto	l693
  5055  002958                     l4734:
  5056  002958  0E00               	movlw	0
  5057  00295A  6E21               	movwf	(pad@w+1)^0,c
  5058  00295C  0E00               	movlw	0
  5059  00295E  6E20               	movwf	pad@w^0,c
  5060  002960                     l693:
  5061                           
  5062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5063  002960  0E00               	movlw	0
  5064  002962  6E1F               	movwf	(pad@i+1)^0,c
  5065  002964  0E00               	movlw	0
  5066  002966  6E1E               	movwf	pad@i^0,c
  5067                           
  5068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5069  002968  EFC2  F014         	goto	l4740
  5070  00296C                     l4736:
  5071                           
  5072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5073  00296C  0E00               	movlw	0
  5074  00296E  6E08               	movwf	(fputc@c+1)^0,c
  5075  002970  0E20               	movlw	32
  5076  002972  6E07               	movwf	fputc@c^0,c
  5077  002974  C017  F009         	movff	pad@fp,fputc@fp
  5078  002978  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  5079  00297C  EC29  F014         	call	_fputc	;wreg free
  5080  002980                     
  5081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5082  002980  4A1E               	infsnz	pad@i^0,f,c
  5083  002982  2A1F               	incf	(pad@i+1)^0,f,c
  5084  002984                     l4740:
  5085                           
  5086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5087  002984  5020               	movf	pad@w^0,w,c
  5088  002986  5C1E               	subwf	pad@i^0,w,c
  5089  002988  501F               	movf	(pad@i+1)^0,w,c
  5090  00298A  0A80               	xorlw	128
  5091  00298C  6E1D               	movwf	??_pad^0,c
  5092  00298E  5021               	movf	(pad@w+1)^0,w,c
  5093  002990  0A80               	xorlw	128
  5094  002992  581D               	subwfb	??_pad^0,w,c
  5095  002994  A0D8               	btfss	status,0,c
  5096  002996  EFCF  F014         	goto	u4151
  5097  00299A  EFD1  F014         	goto	u4150
  5098  00299E                     u4151:
  5099  00299E  EFB6  F014         	goto	l4736
  5100  0029A2                     u4150:
  5101  0029A2                     
  5102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5103  0029A2  B074               	btfsc	_flags^0,0,c
  5104  0029A4  EFD6  F014         	goto	u4161
  5105  0029A8  EFD8  F014         	goto	u4160
  5106  0029AC                     u4161:
  5107  0029AC  EFE2  F014         	goto	l4744
  5108  0029B0                     u4160:
  5109  0029B0                     
  5110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5111  0029B0  C019  F010         	movff	pad@buf,fputs@s
  5112  0029B4  C01A  F011         	movff	pad@buf+1,fputs@s+1
  5113  0029B8  C017  F012         	movff	pad@fp,fputs@fp
  5114  0029BC  C018  F013         	movff	pad@fp+1,fputs@fp+1
  5115  0029C0  ECCD  F016         	call	_fputs	;wreg free
  5116  0029C4                     l4744:
  5117                           
  5118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5119  0029C4  C019  F007         	movff	pad@buf,strlen@s
  5120  0029C8  C01A  F008         	movff	pad@buf+1,strlen@s+1
  5121  0029CC  ECDA  F017         	call	_strlen	;wreg free
  5122  0029D0  5020               	movf	pad@w^0,w,c
  5123  0029D2  2407               	addwf	?_strlen^0,w,c
  5124  0029D4  6E17               	movwf	?_pad^0,c
  5125  0029D6  5021               	movf	(pad@w+1)^0,w,c
  5126  0029D8  2008               	addwfc	(?_strlen+1)^0,w,c
  5127  0029DA  6E18               	movwf	(?_pad+1)^0,c
  5128  0029DC  0012               	return		;funcret
  5129  0029DE                     __end_of_pad:
  5130                           	opt callstack 0
  5131                           
  5132 ;; *************** function _strlen *****************
  5133 ;; Defined at:
  5134 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5137 ;;		 -> dbuf(32), 
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;  a               2    8[COMRAM] PTR const unsigned char 
  5140 ;;		 -> dbuf(32), 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  2    6[COMRAM] unsigned int 
  5143 ;; Registers used:
  5144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5150 ;;      Params:         2       0       0       0       0       0       0
  5151 ;;      Locals:         2       0       0       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0
  5153 ;;      Totals:         4       0       0       0       0       0       0
  5154 ;;Total ram usage:        4 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    1
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_pad
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text20
  5165  002FB4                     __ptext20:
  5166                           	opt callstack 0
  5167  002FB4                     _strlen:
  5168                           	opt callstack 24
  5169  002FB4  C007  F009         	movff	strlen@s,strlen@a
  5170  002FB8  C008  F00A         	movff	strlen@s+1,strlen@a+1
  5171  002FBC  EFE2  F017         	goto	l4716
  5172  002FC0                     l4714:
  5173  002FC0  4A07               	infsnz	strlen@s^0,f,c
  5174  002FC2  2A08               	incf	(strlen@s+1)^0,f,c
  5175  002FC4                     l4716:
  5176  002FC4  C007  FFD9         	movff	strlen@s,fsr2l
  5177  002FC8  C008  FFDA         	movff	strlen@s+1,fsr2h
  5178  002FCC  50DF               	movf	indf2,w,c
  5179  002FCE  A4D8               	btfss	status,2,c
  5180  002FD0  EFEC  F017         	goto	u4101
  5181  002FD4  EFEE  F017         	goto	u4100
  5182  002FD8                     u4101:
  5183  002FD8  EFE0  F017         	goto	l4714
  5184  002FDC                     u4100:
  5185  002FDC  5009               	movf	strlen@a^0,w,c
  5186  002FDE  5C07               	subwf	strlen@s^0,w,c
  5187  002FE0  6E07               	movwf	?_strlen^0,c
  5188  002FE2  500A               	movf	(strlen@a+1)^0,w,c
  5189  002FE4  5808               	subwfb	(strlen@s+1)^0,w,c
  5190  002FE6  6E08               	movwf	(?_strlen+1)^0,c
  5191  002FE8  0012               	return		;funcret
  5192  002FEA                     __end_of_strlen:
  5193                           	opt callstack 0
  5194                           
  5195 ;; *************** function _fputs *****************
  5196 ;; Defined at:
  5197 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;  s               2   15[COMRAM] PTR const unsigned char 
  5200 ;;		 -> dbuf(32), 
  5201 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  5202 ;;		 -> sprintf@f(6), 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  i               2   20[COMRAM] int 
  5205 ;;  c               1   19[COMRAM] unsigned char 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  2   15[COMRAM] int 
  5208 ;; Registers used:
  5209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5215 ;;      Params:         4       0       0       0       0       0       0
  5216 ;;      Locals:         3       0       0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0
  5218 ;;      Totals:         7       0       0       0       0       0       0
  5219 ;;Total ram usage:        7 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    3
  5222 ;; This function calls:
  5223 ;;		_fputc
  5224 ;; This function is called by:
  5225 ;;		_pad
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text21
  5230  002D9A                     __ptext21:
  5231                           	opt callstack 0
  5232  002D9A                     _fputs:
  5233                           	opt callstack 22
  5234  002D9A  0E00               	movlw	0
  5235  002D9C  6E16               	movwf	(fputs@i+1)^0,c
  5236  002D9E  0E00               	movlw	0
  5237  002DA0  6E15               	movwf	fputs@i^0,c
  5238  002DA2  EFDE  F016         	goto	l4710
  5239  002DA6                     l4706:
  5240  002DA6  C014  F007         	movff	fputs@c,fputc@c
  5241  002DAA  6A08               	clrf	(fputc@c+1)^0,c
  5242  002DAC  C012  F009         	movff	fputs@fp,fputc@fp
  5243  002DB0  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  5244  002DB4  EC29  F014         	call	_fputc	;wreg free
  5245  002DB8  4A15               	infsnz	fputs@i^0,f,c
  5246  002DBA  2A16               	incf	(fputs@i+1)^0,f,c
  5247  002DBC                     l4710:
  5248  002DBC  5015               	movf	fputs@i^0,w,c
  5249  002DBE  2410               	addwf	fputs@s^0,w,c
  5250  002DC0  6ED9               	movwf	fsr2l,c
  5251  002DC2  5016               	movf	(fputs@i+1)^0,w,c
  5252  002DC4  2011               	addwfc	(fputs@s+1)^0,w,c
  5253  002DC6  6EDA               	movwf	fsr2h,c
  5254  002DC8  50DF               	movf	indf2,w,c
  5255  002DCA  6E14               	movwf	fputs@c^0,c
  5256  002DCC  5014               	movf	fputs@c^0,w,c
  5257  002DCE  A4D8               	btfss	status,2,c
  5258  002DD0  EFEC  F016         	goto	u4091
  5259  002DD4  EFEE  F016         	goto	u4090
  5260  002DD8                     u4091:
  5261  002DD8  EFD3  F016         	goto	l4706
  5262  002DDC                     u4090:
  5263  002DDC  0012               	return		;funcret
  5264  002DDE                     __end_of_fputs:
  5265                           	opt callstack 0
  5266                           
  5267 ;; *************** function _fputc *****************
  5268 ;; Defined at:
  5269 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  c               2    6[COMRAM] int 
  5272 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  5273 ;;		 -> sprintf@f(6), 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;		None
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  2    6[COMRAM] int 
  5278 ;; Registers used:
  5279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5285 ;;      Params:         4       0       0       0       0       0       0
  5286 ;;      Locals:         0       0       0       0       0       0       0
  5287 ;;      Temps:          5       0       0       0       0       0       0
  5288 ;;      Totals:         9       0       0       0       0       0       0
  5289 ;;Total ram usage:        9 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    2
  5292 ;; This function calls:
  5293 ;;		_putch
  5294 ;; This function is called by:
  5295 ;;		_pad
  5296 ;;		_vfpfcnvrt
  5297 ;;		_fputs
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text22
  5302  002852                     __ptext22:
  5303                           	opt callstack 0
  5304  002852                     _fputc:
  5305                           	opt callstack 22
  5306  002852  5009               	movf	fputc@fp^0,w,c
  5307  002854  100A               	iorwf	(fputc@fp+1)^0,w,c
  5308  002856  B4D8               	btfsc	status,2,c
  5309  002858  EF30  F014         	goto	u4051
  5310  00285C  EF32  F014         	goto	u4050
  5311  002860                     u4051:
  5312  002860  EF3B  F014         	goto	l4694
  5313  002864                     u4050:
  5314  002864  5009               	movf	fputc@fp^0,w,c
  5315  002866  100A               	iorwf	(fputc@fp+1)^0,w,c
  5316  002868  A4D8               	btfss	status,2,c
  5317  00286A  EF39  F014         	goto	u4061
  5318  00286E  EF3B  F014         	goto	u4060
  5319  002872                     u4061:
  5320  002872  EF40  F014         	goto	l4696
  5321  002876                     u4060:
  5322  002876                     l4694:
  5323  002876  5007               	movf	fputc@c^0,w,c
  5324  002878  EC4A  F018         	call	_putch
  5325  00287C  EF8D  F014         	goto	l1564
  5326  002880                     l4696:
  5327  002880  EE20 F004          	lfsr	2,4
  5328  002884  5009               	movf	fputc@fp^0,w,c
  5329  002886  26D9               	addwf	fsr2l,f,c
  5330  002888  500A               	movf	(fputc@fp+1)^0,w,c
  5331  00288A  22DA               	addwfc	fsr2h,f,c
  5332  00288C  50DE               	movf	postinc2,w,c
  5333  00288E  10DE               	iorwf	postinc2,w,c
  5334  002890  B4D8               	btfsc	status,2,c
  5335  002892  EF4D  F014         	goto	u4071
  5336  002896  EF4F  F014         	goto	u4070
  5337  00289A                     u4071:
  5338  00289A  EF6A  F014         	goto	l4700
  5339  00289E                     u4070:
  5340  00289E  EE20 F004          	lfsr	2,4
  5341  0028A2  5009               	movf	fputc@fp^0,w,c
  5342  0028A4  26D9               	addwf	fsr2l,f,c
  5343  0028A6  500A               	movf	(fputc@fp+1)^0,w,c
  5344  0028A8  22DA               	addwfc	fsr2h,f,c
  5345  0028AA  EE10 F002          	lfsr	1,2
  5346  0028AE  5009               	movf	fputc@fp^0,w,c
  5347  0028B0  26E1               	addwf	fsr1l,f,c
  5348  0028B2  500A               	movf	(fputc@fp+1)^0,w,c
  5349  0028B4  22E2               	addwfc	fsr1h,f,c
  5350  0028B6  50DE               	movf	postinc2,w,c
  5351  0028B8  5CE6               	subwf	postinc1,w,c
  5352  0028BA  50E6               	movf	postinc1,w,c
  5353  0028BC  0A80               	xorlw	128
  5354  0028BE  6E0F               	movwf	(??_fputc+4)^0,c
  5355  0028C0  50DE               	movf	postinc2,w,c
  5356  0028C2  0A80               	xorlw	128
  5357  0028C4  580F               	subwfb	(??_fputc+4)^0,w,c
  5358  0028C6  B0D8               	btfsc	status,0,c
  5359  0028C8  EF68  F014         	goto	u4081
  5360  0028CC  EF6A  F014         	goto	u4080
  5361  0028D0                     u4081:
  5362  0028D0  EF8D  F014         	goto	l1564
  5363  0028D4                     u4080:
  5364  0028D4                     l4700:
  5365  0028D4  EE20 F002          	lfsr	2,2
  5366  0028D8  5009               	movf	fputc@fp^0,w,c
  5367  0028DA  26D9               	addwf	fsr2l,f,c
  5368  0028DC  500A               	movf	(fputc@fp+1)^0,w,c
  5369  0028DE  22DA               	addwfc	fsr2h,f,c
  5370  0028E0  CFDE F00B          	movff	postinc2,??_fputc
  5371  0028E4  CFDD F00C          	movff	postdec2,??_fputc+1
  5372  0028E8  C009  FFD9         	movff	fputc@fp,fsr2l
  5373  0028EC  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  5374  0028F0  CFDE F00D          	movff	postinc2,??_fputc+2
  5375  0028F4  CFDD F00E          	movff	postdec2,??_fputc+3
  5376  0028F8  500B               	movf	??_fputc^0,w,c
  5377  0028FA  240D               	addwf	(??_fputc+2)^0,w,c
  5378  0028FC  6ED9               	movwf	fsr2l,c
  5379  0028FE  500C               	movf	(??_fputc+1)^0,w,c
  5380  002900  200E               	addwfc	(??_fputc+3)^0,w,c
  5381  002902  6EDA               	movwf	fsr2h,c
  5382  002904  C007  FFDF         	movff	fputc@c,indf2
  5383  002908  EE20 F002          	lfsr	2,2
  5384  00290C  5009               	movf	fputc@fp^0,w,c
  5385  00290E  26D9               	addwf	fsr2l,f,c
  5386  002910  500A               	movf	(fputc@fp+1)^0,w,c
  5387  002912  22DA               	addwfc	fsr2h,f,c
  5388  002914  2ADE               	incf	postinc2,f,c
  5389  002916  0E00               	movlw	0
  5390  002918  22DD               	addwfc	postdec2,f,c
  5391  00291A                     l1564:
  5392  00291A  0012               	return		;funcret
  5393  00291C                     __end_of_fputc:
  5394                           	opt callstack 0
  5395                           
  5396 ;; *************** function _putch *****************
  5397 ;; Defined at:
  5398 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  c               1    wreg     unsigned char 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  c               1    0[COMRAM] unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      void 
  5405 ;; Registers used:
  5406 ;;		wreg
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5412 ;;      Params:         0       0       0       0       0       0       0
  5413 ;;      Locals:         0       0       0       0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0       0       0
  5415 ;;      Totals:         0       0       0       0       0       0       0
  5416 ;;Total ram usage:        0 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    1
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_fputc
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text23
  5427  003094                     __ptext23:
  5428                           	opt callstack 0
  5429  003094                     _putch:
  5430                           	opt callstack 22
  5431  003094  0012               	return		;funcret
  5432  003096                     __end_of_putch:
  5433                           	opt callstack 0
  5434                           
  5435 ;; *************** function _abs *****************
  5436 ;; Defined at:
  5437 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  a               2   24[COMRAM] int 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;		None
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  2   24[COMRAM] int 
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5451 ;;      Params:         2       0       0       0       0       0       0
  5452 ;;      Locals:         0       0       0       0       0       0       0
  5453 ;;      Temps:          2       0       0       0       0       0       0
  5454 ;;      Totals:         4       0       0       0       0       0       0
  5455 ;;Total ram usage:        4 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    1
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_dtoa
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text24
  5466  002DDE                     __ptext24:
  5467                           	opt callstack 0
  5468  002DDE                     _abs:
  5469                           	opt callstack 25
  5470  002DDE  BE1A               	btfsc	(abs@a+1)^0,7,c
  5471  002DE0  EFFC  F016         	goto	u4170
  5472  002DE4  501A               	movf	(abs@a+1)^0,w,c
  5473  002DE6  E106               	bnz	u4171
  5474  002DE8  0419               	decf	abs@a^0,w,c
  5475  002DEA  B0D8               	btfsc	status,0,c
  5476  002DEC  EFFA  F016         	goto	u4171
  5477  002DF0  EFFC  F016         	goto	u4170
  5478  002DF4                     u4171:
  5479  002DF4  EF0A  F017         	goto	l1482
  5480  002DF8                     u4170:
  5481  002DF8  C019  F01B         	movff	abs@a,??_abs
  5482  002DFC  C01A  F01C         	movff	abs@a+1,??_abs+1
  5483  002E00  1E1B               	comf	??_abs^0,f,c
  5484  002E02  1E1C               	comf	(??_abs+1)^0,f,c
  5485  002E04  4A1B               	infsnz	??_abs^0,f,c
  5486  002E06  2A1C               	incf	(??_abs+1)^0,f,c
  5487  002E08  C01B  F019         	movff	??_abs,?_abs
  5488  002E0C  C01C  F01A         	movff	??_abs+1,?_abs+1
  5489  002E10  EF0E  F017         	goto	l1485
  5490  002E14                     l1482:
  5491  002E14  C019  F019         	movff	abs@a,?_abs
  5492  002E18  C01A  F01A         	movff	abs@a+1,?_abs+1
  5493  002E1C                     l1485:
  5494  002E1C  0012               	return		;funcret
  5495  002E1E                     __end_of_abs:
  5496                           	opt callstack 0
  5497                           
  5498 ;; *************** function ___aomod *****************
  5499 ;; Defined at:
  5500 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  dividend        8    6[COMRAM] long long 
  5503 ;;  divisor         8   14[COMRAM] long long 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  sign            1   23[COMRAM] unsigned char 
  5506 ;;  counter         1   22[COMRAM] unsigned char 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  8    6[COMRAM] long long 
  5509 ;; Registers used:
  5510 ;;		wreg, status,2, status,0
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5516 ;;      Params:        16       0       0       0       0       0       0
  5517 ;;      Locals:         2       0       0       0       0       0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0
  5519 ;;      Totals:        18       0       0       0       0       0       0
  5520 ;;Total ram usage:       18 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    1
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		_dtoa
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text25
  5531  002040                     __ptext25:
  5532                           	opt callstack 0
  5533  002040                     ___aomod:
  5534                           	opt callstack 25
  5535  002040  0E00               	movlw	0
  5536  002042  6E18               	movwf	___aomod@sign^0,c
  5537  002044  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  5538  002046  EF29  F010         	goto	u4340
  5539  00204A  EF27  F010         	goto	u4341
  5540  00204E                     u4341:
  5541  00204E  EF3B  F010         	goto	l4832
  5542  002052                     u4340:
  5543  002052  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  5544  002054  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  5545  002056  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  5546  002058  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  5547  00205A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  5548  00205C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  5549  00205E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  5550  002060  6C07               	negf	___aomod@dividend^0,c
  5551  002062  0E00               	movlw	0
  5552  002064  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  5553  002066  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  5554  002068  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  5555  00206A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  5556  00206C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  5557  00206E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  5558  002070  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  5559  002072  0E01               	movlw	1
  5560  002074  6E18               	movwf	___aomod@sign^0,c
  5561  002076                     l4832:
  5562  002076  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  5563  002078  EF42  F010         	goto	u4350
  5564  00207C  EF40  F010         	goto	u4351
  5565  002080                     u4351:
  5566  002080  EF52  F010         	goto	l4836
  5567  002084                     u4350:
  5568  002084  1E16               	comf	(___aomod@divisor+7)^0,f,c
  5569  002086  1E15               	comf	(___aomod@divisor+6)^0,f,c
  5570  002088  1E14               	comf	(___aomod@divisor+5)^0,f,c
  5571  00208A  1E13               	comf	(___aomod@divisor+4)^0,f,c
  5572  00208C  1E12               	comf	(___aomod@divisor+3)^0,f,c
  5573  00208E  1E11               	comf	(___aomod@divisor+2)^0,f,c
  5574  002090  1E10               	comf	(___aomod@divisor+1)^0,f,c
  5575  002092  6C0F               	negf	___aomod@divisor^0,c
  5576  002094  0E00               	movlw	0
  5577  002096  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  5578  002098  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  5579  00209A  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  5580  00209C  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  5581  00209E  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  5582  0020A0  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  5583  0020A2  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  5584  0020A4                     l4836:
  5585  0020A4  500F               	movf	___aomod@divisor^0,w,c
  5586  0020A6  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  5587  0020A8  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  5588  0020AA  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  5589  0020AC  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  5590  0020AE  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  5591  0020B0  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  5592  0020B2  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  5593  0020B4  B4D8               	btfsc	status,2,c
  5594  0020B6  EF5F  F010         	goto	u4361
  5595  0020BA  EF61  F010         	goto	u4360
  5596  0020BE                     u4361:
  5597  0020BE  EFA9  F010         	goto	l4852
  5598  0020C2                     u4360:
  5599  0020C2  0E01               	movlw	1
  5600  0020C4  6E17               	movwf	___aomod@counter^0,c
  5601  0020C6  EF6F  F010         	goto	l4842
  5602  0020CA                     l4840:
  5603  0020CA  90D8               	bcf	status,0,c
  5604  0020CC  360F               	rlcf	___aomod@divisor^0,f,c
  5605  0020CE  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  5606  0020D0  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  5607  0020D2  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  5608  0020D4  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  5609  0020D6  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  5610  0020D8  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  5611  0020DA  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  5612  0020DC  2A17               	incf	___aomod@counter^0,f,c
  5613  0020DE                     l4842:
  5614  0020DE  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  5615  0020E0  EF74  F010         	goto	u4371
  5616  0020E4  EF76  F010         	goto	u4370
  5617  0020E8                     u4371:
  5618  0020E8  EF65  F010         	goto	l4840
  5619  0020EC                     u4370:
  5620  0020EC                     l4844:
  5621  0020EC  500F               	movf	___aomod@divisor^0,w,c
  5622  0020EE  5C07               	subwf	___aomod@dividend^0,w,c
  5623  0020F0  5010               	movf	(___aomod@divisor+1)^0,w,c
  5624  0020F2  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  5625  0020F4  5011               	movf	(___aomod@divisor+2)^0,w,c
  5626  0020F6  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  5627  0020F8  5012               	movf	(___aomod@divisor+3)^0,w,c
  5628  0020FA  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  5629  0020FC  5013               	movf	(___aomod@divisor+4)^0,w,c
  5630  0020FE  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  5631  002100  5014               	movf	(___aomod@divisor+5)^0,w,c
  5632  002102  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  5633  002104  5015               	movf	(___aomod@divisor+6)^0,w,c
  5634  002106  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  5635  002108  5016               	movf	(___aomod@divisor+7)^0,w,c
  5636  00210A  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  5637  00210C  A0D8               	btfss	status,0,c
  5638  00210E  EF8B  F010         	goto	u4381
  5639  002112  EF8D  F010         	goto	u4380
  5640  002116                     u4381:
  5641  002116  EF9D  F010         	goto	l4848
  5642  00211A                     u4380:
  5643  00211A  500F               	movf	___aomod@divisor^0,w,c
  5644  00211C  5E07               	subwf	___aomod@dividend^0,f,c
  5645  00211E  5010               	movf	(___aomod@divisor+1)^0,w,c
  5646  002120  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  5647  002122  5011               	movf	(___aomod@divisor+2)^0,w,c
  5648  002124  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  5649  002126  5012               	movf	(___aomod@divisor+3)^0,w,c
  5650  002128  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  5651  00212A  5013               	movf	(___aomod@divisor+4)^0,w,c
  5652  00212C  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  5653  00212E  5014               	movf	(___aomod@divisor+5)^0,w,c
  5654  002130  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  5655  002132  5015               	movf	(___aomod@divisor+6)^0,w,c
  5656  002134  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  5657  002136  5016               	movf	(___aomod@divisor+7)^0,w,c
  5658  002138  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  5659  00213A                     l4848:
  5660  00213A  90D8               	bcf	status,0,c
  5661  00213C  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  5662  00213E  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  5663  002140  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  5664  002142  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  5665  002144  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  5666  002146  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  5667  002148  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  5668  00214A  320F               	rrcf	___aomod@divisor^0,f,c
  5669  00214C  2E17               	decfsz	___aomod@counter^0,f,c
  5670  00214E  EF76  F010         	goto	l4844
  5671  002152                     l4852:
  5672  002152  5018               	movf	___aomod@sign^0,w,c
  5673  002154  B4D8               	btfsc	status,2,c
  5674  002156  EFAF  F010         	goto	u4391
  5675  00215A  EFB1  F010         	goto	u4390
  5676  00215E                     u4391:
  5677  00215E  EFC1  F010         	goto	l4856
  5678  002162                     u4390:
  5679  002162  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  5680  002164  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  5681  002166  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  5682  002168  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  5683  00216A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  5684  00216C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  5685  00216E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  5686  002170  6C07               	negf	___aomod@dividend^0,c
  5687  002172  0E00               	movlw	0
  5688  002174  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  5689  002176  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  5690  002178  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  5691  00217A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  5692  00217C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  5693  00217E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  5694  002180  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  5695  002182                     l4856:
  5696  002182  C007  F007         	movff	___aomod@dividend,?___aomod
  5697  002186  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  5698  00218A  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  5699  00218E  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  5700  002192  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  5701  002196  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  5702  00219A  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  5703  00219E  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  5704  0021A2  0012               	return		;funcret
  5705  0021A4                     __end_of___aomod:
  5706                           	opt callstack 0
  5707                           
  5708 ;; *************** function ___aodiv *****************
  5709 ;; Defined at:
  5710 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;  dividend        8    6[COMRAM] long long 
  5713 ;;  divisor         8   14[COMRAM] long long 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  quotient        8   24[COMRAM] long long 
  5716 ;;  sign            1   23[COMRAM] unsigned char 
  5717 ;;  counter         1   22[COMRAM] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  8    6[COMRAM] long long 
  5720 ;; Registers used:
  5721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5727 ;;      Params:        16       0       0       0       0       0       0
  5728 ;;      Locals:        10       0       0       0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0
  5730 ;;      Totals:        26       0       0       0       0       0       0
  5731 ;;Total ram usage:       26 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    1
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_dtoa
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text26
  5742  001D42                     __ptext26:
  5743                           	opt callstack 0
  5744  001D42                     ___aodiv:
  5745                           	opt callstack 25
  5746  001D42  0E00               	movlw	0
  5747  001D44  6E18               	movwf	___aodiv@sign^0,c
  5748  001D46  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  5749  001D48  EFAA  F00E         	goto	u4270
  5750  001D4C  EFA8  F00E         	goto	u4271
  5751  001D50                     u4271:
  5752  001D50  EFBC  F00E         	goto	l4788
  5753  001D54                     u4270:
  5754  001D54  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  5755  001D56  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  5756  001D58  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  5757  001D5A  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  5758  001D5C  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  5759  001D5E  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  5760  001D60  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  5761  001D62  6C0F               	negf	___aodiv@divisor^0,c
  5762  001D64  0E00               	movlw	0
  5763  001D66  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  5764  001D68  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  5765  001D6A  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  5766  001D6C  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  5767  001D6E  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  5768  001D70  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  5769  001D72  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  5770  001D74  0E01               	movlw	1
  5771  001D76  6E18               	movwf	___aodiv@sign^0,c
  5772  001D78                     l4788:
  5773  001D78  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  5774  001D7A  EFC3  F00E         	goto	u4280
  5775  001D7E  EFC1  F00E         	goto	u4281
  5776  001D82                     u4281:
  5777  001D82  EFD5  F00E         	goto	l4794
  5778  001D86                     u4280:
  5779  001D86  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  5780  001D88  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  5781  001D8A  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  5782  001D8C  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  5783  001D8E  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  5784  001D90  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  5785  001D92  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  5786  001D94  6C07               	negf	___aodiv@dividend^0,c
  5787  001D96  0E00               	movlw	0
  5788  001D98  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  5789  001D9A  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  5790  001D9C  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  5791  001D9E  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  5792  001DA0  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  5793  001DA2  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  5794  001DA4  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  5795  001DA6  0E01               	movlw	1
  5796  001DA8  1A18               	xorwf	___aodiv@sign^0,f,c
  5797  001DAA                     l4794:
  5798  001DAA  EE20  F019         	lfsr	2,___aodiv@quotient
  5799  001DAE  0E07               	movlw	7
  5800  001DB0                     u4291:
  5801  001DB0  6ADE               	clrf	postinc2,c
  5802  001DB2  06E8               	decf	wreg,f,c
  5803  001DB4  E2FD               	bc	u4291
  5804  001DB6  500F               	movf	___aodiv@divisor^0,w,c
  5805  001DB8  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  5806  001DBA  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  5807  001DBC  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  5808  001DBE  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  5809  001DC0  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  5810  001DC2  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  5811  001DC4  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  5812  001DC6  B4D8               	btfsc	status,2,c
  5813  001DC8  EFE8  F00E         	goto	u4301
  5814  001DCC  EFEA  F00E         	goto	u4300
  5815  001DD0                     u4301:
  5816  001DD0  EF3C  F00F         	goto	l4816
  5817  001DD4                     u4300:
  5818  001DD4  0E01               	movlw	1
  5819  001DD6  6E17               	movwf	___aodiv@counter^0,c
  5820  001DD8  EFF8  F00E         	goto	l4802
  5821  001DDC                     l4800:
  5822  001DDC  90D8               	bcf	status,0,c
  5823  001DDE  360F               	rlcf	___aodiv@divisor^0,f,c
  5824  001DE0  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  5825  001DE2  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  5826  001DE4  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  5827  001DE6  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  5828  001DE8  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  5829  001DEA  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  5830  001DEC  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  5831  001DEE  2A17               	incf	___aodiv@counter^0,f,c
  5832  001DF0                     l4802:
  5833  001DF0  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  5834  001DF2  EFFD  F00E         	goto	u4311
  5835  001DF6  EFFF  F00E         	goto	u4310
  5836  001DFA                     u4311:
  5837  001DFA  EFEE  F00E         	goto	l4800
  5838  001DFE                     u4310:
  5839  001DFE                     l4804:
  5840  001DFE  90D8               	bcf	status,0,c
  5841  001E00  3619               	rlcf	___aodiv@quotient^0,f,c
  5842  001E02  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  5843  001E04  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  5844  001E06  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  5845  001E08  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  5846  001E0A  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  5847  001E0C  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  5848  001E0E  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  5849  001E10  500F               	movf	___aodiv@divisor^0,w,c
  5850  001E12  5C07               	subwf	___aodiv@dividend^0,w,c
  5851  001E14  5010               	movf	(___aodiv@divisor+1)^0,w,c
  5852  001E16  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  5853  001E18  5011               	movf	(___aodiv@divisor+2)^0,w,c
  5854  001E1A  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  5855  001E1C  5012               	movf	(___aodiv@divisor+3)^0,w,c
  5856  001E1E  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  5857  001E20  5013               	movf	(___aodiv@divisor+4)^0,w,c
  5858  001E22  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  5859  001E24  5014               	movf	(___aodiv@divisor+5)^0,w,c
  5860  001E26  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  5861  001E28  5015               	movf	(___aodiv@divisor+6)^0,w,c
  5862  001E2A  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  5863  001E2C  5016               	movf	(___aodiv@divisor+7)^0,w,c
  5864  001E2E  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  5865  001E30  A0D8               	btfss	status,0,c
  5866  001E32  EF1D  F00F         	goto	u4321
  5867  001E36  EF1F  F00F         	goto	u4320
  5868  001E3A                     u4321:
  5869  001E3A  EF30  F00F         	goto	l4812
  5870  001E3E                     u4320:
  5871  001E3E  500F               	movf	___aodiv@divisor^0,w,c
  5872  001E40  5E07               	subwf	___aodiv@dividend^0,f,c
  5873  001E42  5010               	movf	(___aodiv@divisor+1)^0,w,c
  5874  001E44  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  5875  001E46  5011               	movf	(___aodiv@divisor+2)^0,w,c
  5876  001E48  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  5877  001E4A  5012               	movf	(___aodiv@divisor+3)^0,w,c
  5878  001E4C  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  5879  001E4E  5013               	movf	(___aodiv@divisor+4)^0,w,c
  5880  001E50  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  5881  001E52  5014               	movf	(___aodiv@divisor+5)^0,w,c
  5882  001E54  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  5883  001E56  5015               	movf	(___aodiv@divisor+6)^0,w,c
  5884  001E58  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  5885  001E5A  5016               	movf	(___aodiv@divisor+7)^0,w,c
  5886  001E5C  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  5887  001E5E  8019               	bsf	___aodiv@quotient^0,0,c
  5888  001E60                     l4812:
  5889  001E60  90D8               	bcf	status,0,c
  5890  001E62  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  5891  001E64  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  5892  001E66  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  5893  001E68  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  5894  001E6A  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  5895  001E6C  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  5896  001E6E  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  5897  001E70  320F               	rrcf	___aodiv@divisor^0,f,c
  5898  001E72  2E17               	decfsz	___aodiv@counter^0,f,c
  5899  001E74  EFFF  F00E         	goto	l4804
  5900  001E78                     l4816:
  5901  001E78  5018               	movf	___aodiv@sign^0,w,c
  5902  001E7A  B4D8               	btfsc	status,2,c
  5903  001E7C  EF42  F00F         	goto	u4331
  5904  001E80  EF44  F00F         	goto	u4330
  5905  001E84                     u4331:
  5906  001E84  EF54  F00F         	goto	l4820
  5907  001E88                     u4330:
  5908  001E88  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  5909  001E8A  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  5910  001E8C  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  5911  001E8E  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  5912  001E90  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  5913  001E92  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  5914  001E94  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  5915  001E96  6C19               	negf	___aodiv@quotient^0,c
  5916  001E98  0E00               	movlw	0
  5917  001E9A  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  5918  001E9C  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  5919  001E9E  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  5920  001EA0  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  5921  001EA2  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  5922  001EA4  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  5923  001EA6  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  5924  001EA8                     l4820:
  5925  001EA8  C019  F007         	movff	___aodiv@quotient,?___aodiv
  5926  001EAC  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  5927  001EB0  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  5928  001EB4  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  5929  001EB8  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  5930  001EBC  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  5931  001EC0  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  5932  001EC4  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  5933  001EC8  0012               	return		;funcret
  5934  001ECA                     __end_of___aodiv:
  5935                           	opt callstack 0
  5936                           
  5937 ;; *************** function _atoi *****************
  5938 ;; Defined at:
  5939 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5942 ;;		 -> STR_18(13), STR_17(13), STR_16(13), STR_15(13), 
  5943 ;;		 -> STR_14(15), STR_13(15), STR_12(11), STR_11(12), 
  5944 ;;		 -> STR_10(12), STR_9(12), STR_8(17), STR_7(17), 
  5945 ;;		 -> STR_6(12), STR_5(12), STR_4(23), STR_3(24), 
  5946 ;;		 -> STR_2(9), STR_1(10), 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  n               2   26[COMRAM] int 
  5949 ;;  neg             2   19[COMRAM] int 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  2   13[COMRAM] int 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5959 ;;      Params:         2       0       0       0       0       0       0
  5960 ;;      Locals:         9       0       0       0       0       0       0
  5961 ;;      Temps:          4       0       0       0       0       0       0
  5962 ;;      Totals:        15       0       0       0       0       0       0
  5963 ;;Total ram usage:       15 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    2
  5966 ;; This function calls:
  5967 ;;		___wmul
  5968 ;;		_isdigit
  5969 ;;		_isspace
  5970 ;; This function is called by:
  5971 ;;		_vfpfcnvrt
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text27
  5976  001BB2                     __ptext27:
  5977                           	opt callstack 0
  5978  001BB2                     _atoi:
  5979                           	opt callstack 25
  5980  001BB2  0E00               	movlw	0
  5981  001BB4  6E1C               	movwf	(atoi@n+1)^0,c
  5982  001BB6  0E00               	movlw	0
  5983  001BB8  6E1B               	movwf	atoi@n^0,c
  5984  001BBA  0E00               	movlw	0
  5985  001BBC  6E15               	movwf	(atoi@neg+1)^0,c
  5986  001BBE  0E00               	movlw	0
  5987  001BC0  6E14               	movwf	atoi@neg^0,c
  5988  001BC2  EFE5  F00D         	goto	l5078
  5989  001BC6                     l5076:
  5990  001BC6  4A0E               	infsnz	atoi@s^0,f,c
  5991  001BC8  2A0F               	incf	(atoi@s+1)^0,f,c
  5992  001BCA                     l5078:
  5993  001BCA  0E01               	movlw	1
  5994  001BCC  6E1A               	movwf	_atoi$1491^0,c
  5995  001BCE  C00E  FFF6         	movff	atoi@s,tblptrl
  5996  001BD2  C00F  FFF7         	movff	atoi@s+1,tblptrh
  5997  001BD6                     	if	0	;tblptru may be non-zero
  5998  001BD6                     	endif
  5999  001BD6                     	if	0	;tblptru may be non-zero
  6000  001BD6                     	endif
  6001  001BD6  0008               	tblrd		*
  6002  001BD8  50F5               	movf	tablat,w,c
  6003  001BDA  0A20               	xorlw	32
  6004  001BDC  B4D8               	btfsc	status,2,c
  6005  001BDE  EFF3  F00D         	goto	u4881
  6006  001BE2  EFF5  F00D         	goto	u4880
  6007  001BE6                     u4881:
  6008  001BE6  EF12  F00E         	goto	l5086
  6009  001BEA                     u4880:
  6010  001BEA  0EF7               	movlw	247
  6011  001BEC  6E10               	movwf	??_atoi^0,c
  6012  001BEE  0EFF               	movlw	255
  6013  001BF0  6E11               	movwf	(??_atoi+1)^0,c
  6014  001BF2  C00E  FFF6         	movff	atoi@s,tblptrl
  6015  001BF6  C00F  FFF7         	movff	atoi@s+1,tblptrh
  6016  001BFA                     	if	0	;tblptru may be non-zero
  6017  001BFA                     	endif
  6018  001BFA                     	if	0	;tblptru may be non-zero
  6019  001BFA                     	endif
  6020  001BFA  0008               	tblrd		*
  6021  001BFC  50F5               	movf	tablat,w,c
  6022  001BFE  6E12               	movwf	(??_atoi+2)^0,c
  6023  001C00  6A13               	clrf	(??_atoi+3)^0,c
  6024  001C02  5010               	movf	??_atoi^0,w,c
  6025  001C04  2612               	addwf	(??_atoi+2)^0,f,c
  6026  001C06  5011               	movf	(??_atoi+1)^0,w,c
  6027  001C08  2213               	addwfc	(??_atoi+3)^0,f,c
  6028  001C0A  5013               	movf	(??_atoi+3)^0,w,c
  6029  001C0C  E109               	bnz	u4890
  6030  001C0E  0E05               	movlw	5
  6031  001C10  5C12               	subwf	(??_atoi+2)^0,w,c
  6032  001C12  A0D8               	btfss	status,0,c
  6033  001C14  EF0E  F00E         	goto	u4891
  6034  001C18  EF10  F00E         	goto	u4890
  6035  001C1C                     u4891:
  6036  001C1C  EF12  F00E         	goto	l5086
  6037  001C20                     u4890:
  6038  001C20  0E00               	movlw	0
  6039  001C22  6E1A               	movwf	_atoi$1491^0,c
  6040  001C24                     l5086:
  6041  001C24  C01A  F016         	movff	_atoi$1491,_atoi$1490
  6042  001C28  6A17               	clrf	(_atoi$1490+1)^0,c
  6043  001C2A  5016               	movf	_atoi$1490^0,w,c
  6044  001C2C  1017               	iorwf	(_atoi$1490+1)^0,w,c
  6045  001C2E  A4D8               	btfss	status,2,c
  6046  001C30  EF1C  F00E         	goto	u4901
  6047  001C34  EF1E  F00E         	goto	u4900
  6048  001C38                     u4901:
  6049  001C38  EFE3  F00D         	goto	l5076
  6050  001C3C                     u4900:
  6051  001C3C  EF28  F00E         	goto	l5096
  6052  001C40                     l5092:
  6053  001C40  0E00               	movlw	0
  6054  001C42  6E15               	movwf	(atoi@neg+1)^0,c
  6055  001C44  0E01               	movlw	1
  6056  001C46  6E14               	movwf	atoi@neg^0,c
  6057  001C48                     l5094:
  6058  001C48  4A0E               	infsnz	atoi@s^0,f,c
  6059  001C4A  2A0F               	incf	(atoi@s+1)^0,f,c
  6060  001C4C  EF5D  F00E         	goto	l5102
  6061  001C50                     l5096:
  6062  001C50  C00E  FFF6         	movff	atoi@s,tblptrl
  6063  001C54  C00F  FFF7         	movff	atoi@s+1,tblptrh
  6064  001C58                     	if	0	;tblptru may be non-zero
  6065  001C58                     	endif
  6066  001C58                     	if	0	;tblptru may be non-zero
  6067  001C58                     	endif
  6068  001C58  0008               	tblrd		*
  6069  001C5A  50F5               	movf	tablat,w,c
  6070  001C5C  6E10               	movwf	??_atoi^0,c
  6071  001C5E  6A11               	clrf	(??_atoi+1)^0,c
  6072                           
  6073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6074                           ; Switch size 1, requested type "simple"
  6075                           ; Number of cases is 1, Range of values is 0 to 0
  6076                           ; switch strategies available:
  6077                           ; Name         Instructions Cycles
  6078                           ; simple_byte            4     3 (average)
  6079                           ;	Chosen strategy is simple_byte
  6080  001C60  5011               	movf	(??_atoi+1)^0,w,c
  6081  001C62  0A00               	xorlw	0	; case 0
  6082  001C64  B4D8               	btfsc	status,2,c
  6083  001C66  EF37  F00E         	goto	l5958
  6084  001C6A  EF5D  F00E         	goto	l5102
  6085  001C6E                     l5958:
  6086                           
  6087                           ; Switch size 1, requested type "simple"
  6088                           ; Number of cases is 2, Range of values is 43 to 45
  6089                           ; switch strategies available:
  6090                           ; Name         Instructions Cycles
  6091                           ; simple_byte            7     4 (average)
  6092                           ;	Chosen strategy is simple_byte
  6093  001C6E  5010               	movf	??_atoi^0,w,c
  6094  001C70  0A2B               	xorlw	43	; case 43
  6095  001C72  B4D8               	btfsc	status,2,c
  6096  001C74  EF24  F00E         	goto	l5094
  6097  001C78  0A06               	xorlw	6	; case 45
  6098  001C7A  B4D8               	btfsc	status,2,c
  6099  001C7C  EF20  F00E         	goto	l5092
  6100  001C80  EF5D  F00E         	goto	l5102
  6101  001C84                     l5098:
  6102  001C84  C01B  F007         	movff	atoi@n,___wmul@multiplier
  6103  001C88  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  6104  001C8C  0E00               	movlw	0
  6105  001C8E  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  6106  001C90  0E0A               	movlw	10
  6107  001C92  6E09               	movwf	___wmul@multiplicand^0,c
  6108  001C94  EC0A  F018         	call	___wmul	;wreg free
  6109  001C98  C00E  FFF6         	movff	atoi@s,tblptrl
  6110  001C9C  C00F  FFF7         	movff	atoi@s+1,tblptrh
  6111  001CA0                     	if	0	;tblptru may be non-zero
  6112  001CA0                     	endif
  6113  001CA0                     	if	0	;tblptru may be non-zero
  6114  001CA0                     	endif
  6115  001CA0  0008               	tblrd		*
  6116  001CA2  50F5               	movf	tablat,w,c
  6117  001CA4  5E07               	subwf	?___wmul^0,f,c
  6118  001CA6  0E00               	movlw	0
  6119  001CA8  5A08               	subwfb	(?___wmul+1)^0,f,c
  6120  001CAA  0E30               	movlw	48
  6121  001CAC  2407               	addwf	?___wmul^0,w,c
  6122  001CAE  6E1B               	movwf	atoi@n^0,c
  6123  001CB0  0E00               	movlw	0
  6124  001CB2  2008               	addwfc	(?___wmul+1)^0,w,c
  6125  001CB4  6E1C               	movwf	(atoi@n+1)^0,c
  6126  001CB6  EF24  F00E         	goto	l5094
  6127  001CBA                     l5102:
  6128  001CBA  0ED0               	movlw	208
  6129  001CBC  6E10               	movwf	??_atoi^0,c
  6130  001CBE  0EFF               	movlw	255
  6131  001CC0  6E11               	movwf	(??_atoi+1)^0,c
  6132  001CC2  C00E  FFF6         	movff	atoi@s,tblptrl
  6133  001CC6  C00F  FFF7         	movff	atoi@s+1,tblptrh
  6134  001CCA                     	if	0	;tblptru may be non-zero
  6135  001CCA                     	endif
  6136  001CCA                     	if	0	;tblptru may be non-zero
  6137  001CCA                     	endif
  6138  001CCA  0008               	tblrd		*
  6139  001CCC  50F5               	movf	tablat,w,c
  6140  001CCE  6E12               	movwf	(??_atoi+2)^0,c
  6141  001CD0  6A13               	clrf	(??_atoi+3)^0,c
  6142  001CD2  5010               	movf	??_atoi^0,w,c
  6143  001CD4  2612               	addwf	(??_atoi+2)^0,f,c
  6144  001CD6  5011               	movf	(??_atoi+1)^0,w,c
  6145  001CD8  2213               	addwfc	(??_atoi+3)^0,f,c
  6146  001CDA  5013               	movf	(??_atoi+3)^0,w,c
  6147  001CDC  E10A               	bnz	u4910
  6148  001CDE  0E0A               	movlw	10
  6149  001CE0  5C12               	subwf	(??_atoi+2)^0,w,c
  6150  001CE2  A0D8               	btfss	status,0,c
  6151  001CE4  EF76  F00E         	goto	u4911
  6152  001CE8  EF79  F00E         	goto	u4910
  6153  001CEC                     u4911:
  6154  001CEC  0E01               	movlw	1
  6155  001CEE  EF7A  F00E         	goto	u4920
  6156  001CF2                     u4910:
  6157  001CF2  0E00               	movlw	0
  6158  001CF4                     u4920:
  6159  001CF4  6E18               	movwf	_atoi$1492^0,c
  6160  001CF6  6A19               	clrf	(_atoi$1492+1)^0,c
  6161  001CF8  5018               	movf	_atoi$1492^0,w,c
  6162  001CFA  1019               	iorwf	(_atoi$1492+1)^0,w,c
  6163  001CFC  A4D8               	btfss	status,2,c
  6164  001CFE  EF83  F00E         	goto	u4931
  6165  001D02  EF85  F00E         	goto	u4930
  6166  001D06                     u4931:
  6167  001D06  EF42  F00E         	goto	l5098
  6168  001D0A                     u4930:
  6169  001D0A  5014               	movf	atoi@neg^0,w,c
  6170  001D0C  1015               	iorwf	(atoi@neg+1)^0,w,c
  6171  001D0E  A4D8               	btfss	status,2,c
  6172  001D10  EF8C  F00E         	goto	u4941
  6173  001D14  EF8E  F00E         	goto	u4940
  6174  001D18                     u4941:
  6175  001D18  EF9C  F00E         	goto	l1513
  6176  001D1C                     u4940:
  6177  001D1C  C01B  F010         	movff	atoi@n,??_atoi
  6178  001D20  C01C  F011         	movff	atoi@n+1,??_atoi+1
  6179  001D24  1E10               	comf	??_atoi^0,f,c
  6180  001D26  1E11               	comf	(??_atoi+1)^0,f,c
  6181  001D28  4A10               	infsnz	??_atoi^0,f,c
  6182  001D2A  2A11               	incf	(??_atoi+1)^0,f,c
  6183  001D2C  C010  F00E         	movff	??_atoi,?_atoi
  6184  001D30  C011  F00F         	movff	??_atoi+1,?_atoi+1
  6185  001D34  EFA0  F00E         	goto	l1516
  6186  001D38                     l1513:
  6187  001D38  C01B  F00E         	movff	atoi@n,?_atoi
  6188  001D3C  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  6189  001D40                     l1516:
  6190  001D40  0012               	return		;funcret
  6191  001D42                     __end_of_atoi:
  6192                           	opt callstack 0
  6193                           
  6194 ;; *************** function _isspace *****************
  6195 ;; Defined at:
  6196 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  c               2    6[COMRAM] int 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  2    6[COMRAM] int 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6210 ;;      Params:         2       0       0       0       0       0       0
  6211 ;;      Locals:         1       0       0       0       0       0       0
  6212 ;;      Temps:          4       0       0       0       0       0       0
  6213 ;;      Totals:         7       0       0       0       0       0       0
  6214 ;;Total ram usage:        7 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    1
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_atoi
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text28
  6225  002D00                     __ptext28:
  6226                           	opt callstack 0
  6227  002D00                     _isspace:
  6228                           	opt callstack 25
  6229  002D00  0E01               	movlw	1
  6230  002D02  6E0D               	movwf	_isspace$1517^0,c
  6231  002D04  0E20               	movlw	32
  6232  002D06  1807               	xorwf	isspace@c^0,w,c
  6233  002D08  1008               	iorwf	(isspace@c+1)^0,w,c
  6234  002D0A  B4D8               	btfsc	status,2,c
  6235  002D0C  EF8A  F016         	goto	u4471
  6236  002D10  EF8C  F016         	goto	u4470
  6237  002D14                     u4471:
  6238  002D14  EFA5  F016         	goto	l4906
  6239  002D18                     u4470:
  6240  002D18  0EF7               	movlw	247
  6241  002D1A  6E09               	movwf	??_isspace^0,c
  6242  002D1C  0EFF               	movlw	255
  6243  002D1E  6E0A               	movwf	(??_isspace+1)^0,c
  6244  002D20  C007  F00B         	movff	isspace@c,??_isspace+2
  6245  002D24  C008  F00C         	movff	isspace@c+1,??_isspace+3
  6246  002D28  5009               	movf	??_isspace^0,w,c
  6247  002D2A  260B               	addwf	(??_isspace+2)^0,f,c
  6248  002D2C  500A               	movf	(??_isspace+1)^0,w,c
  6249  002D2E  220C               	addwfc	(??_isspace+3)^0,f,c
  6250  002D30  500C               	movf	(??_isspace+3)^0,w,c
  6251  002D32  E109               	bnz	u4480
  6252  002D34  0E05               	movlw	5
  6253  002D36  5C0B               	subwf	(??_isspace+2)^0,w,c
  6254  002D38  A0D8               	btfss	status,0,c
  6255  002D3A  EFA1  F016         	goto	u4481
  6256  002D3E  EFA3  F016         	goto	u4480
  6257  002D42                     u4481:
  6258  002D42  EFA5  F016         	goto	l4906
  6259  002D46                     u4480:
  6260  002D46  0E00               	movlw	0
  6261  002D48  6E0D               	movwf	_isspace$1517^0,c
  6262  002D4A                     l4906:
  6263  002D4A  C00D  F007         	movff	_isspace$1517,?_isspace
  6264  002D4E  6A08               	clrf	(?_isspace+1)^0,c
  6265  002D50  0012               	return		;funcret
  6266  002D52                     __end_of_isspace:
  6267                           	opt callstack 0
  6268                           
  6269 ;; *************** function _isdigit *****************
  6270 ;; Defined at:
  6271 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  c               2    6[COMRAM] int 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  2    6[COMRAM] int 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6285 ;;      Params:         2       0       0       0       0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0
  6287 ;;      Temps:          4       0       0       0       0       0       0
  6288 ;;      Totals:         6       0       0       0       0       0       0
  6289 ;;Total ram usage:        6 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    1
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_vfpfcnvrt
  6296 ;;		_atoi
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text29
  6301  002F46                     __ptext29:
  6302                           	opt callstack 0
  6303  002F46                     _isdigit:
  6304                           	opt callstack 26
  6305  002F46  0ED0               	movlw	208
  6306  002F48  6E09               	movwf	??_isdigit^0,c
  6307  002F4A  0EFF               	movlw	255
  6308  002F4C  6E0A               	movwf	(??_isdigit+1)^0,c
  6309  002F4E  C007  F00B         	movff	isdigit@c,??_isdigit+2
  6310  002F52  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  6311  002F56  5009               	movf	??_isdigit^0,w,c
  6312  002F58  260B               	addwf	(??_isdigit+2)^0,f,c
  6313  002F5A  500A               	movf	(??_isdigit+1)^0,w,c
  6314  002F5C  220C               	addwfc	(??_isdigit+3)^0,f,c
  6315  002F5E  500C               	movf	(??_isdigit+3)^0,w,c
  6316  002F60  E10A               	bnz	u4250
  6317  002F62  0E0A               	movlw	10
  6318  002F64  5C0B               	subwf	(??_isdigit+2)^0,w,c
  6319  002F66  A0D8               	btfss	status,0,c
  6320  002F68  EFB8  F017         	goto	u4251
  6321  002F6C  EFBB  F017         	goto	u4250
  6322  002F70                     u4251:
  6323  002F70  0E01               	movlw	1
  6324  002F72  EFBC  F017         	goto	u4260
  6325  002F76                     u4250:
  6326  002F76  0E00               	movlw	0
  6327  002F78                     u4260:
  6328  002F78  6E07               	movwf	?_isdigit^0,c
  6329  002F7A  6A08               	clrf	(?_isdigit+1)^0,c
  6330  002F7C  0012               	return		;funcret
  6331  002F7E                     __end_of_isdigit:
  6332                           	opt callstack 0
  6333                           
  6334 ;; *************** function ___wmul *****************
  6335 ;; Defined at:
  6336 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  multiplier      2    6[COMRAM] unsigned int 
  6339 ;;  multiplicand    2    8[COMRAM] unsigned int 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  product         2   10[COMRAM] unsigned int 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  2    6[COMRAM] unsigned int 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0, prodl, prodh
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6351 ;;      Params:         4       0       0       0       0       0       0
  6352 ;;      Locals:         2       0       0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0
  6354 ;;      Totals:         6       0       0       0       0       0       0
  6355 ;;Total ram usage:        6 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    1
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_atoi
  6362 ;;		_keypad_update
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text30
  6367  003014                     __ptext30:
  6368                           	opt callstack 0
  6369  003014                     ___wmul:
  6370                           	opt callstack 25
  6371  003014  5007               	movf	___wmul@multiplier^0,w,c
  6372  003016  0209               	mulwf	___wmul@multiplicand^0,c
  6373  003018  CFF3 F00B          	movff	prodl,___wmul@product
  6374  00301C  CFF4 F00C          	movff	prodh,___wmul@product+1
  6375  003020  5007               	movf	___wmul@multiplier^0,w,c
  6376  003022  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  6377  003024  50F3               	movf	243,w,c
  6378  003026  260C               	addwf	(___wmul@product+1)^0,f,c
  6379  003028  5008               	movf	(___wmul@multiplier+1)^0,w,c
  6380  00302A  0209               	mulwf	___wmul@multiplicand^0,c
  6381  00302C  50F3               	movf	243,w,c
  6382  00302E  260C               	addwf	(___wmul@product+1)^0,f,c
  6383  003030  C00B  F007         	movff	___wmul@product,?___wmul
  6384  003034  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  6385  003038  0012               	return		;funcret
  6386  00303A                     __end_of___wmul:
  6387                           	opt callstack 0
  6388                           
  6389 ;; *************** function _lcd_init *****************
  6390 ;; Defined at:
  6391 ;;		line 12 in file "lcd_driver.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;		None
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, cstack
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6405 ;;      Params:         0       0       0       0       0       0       0
  6406 ;;      Locals:         0       0       0       0       0       0       0
  6407 ;;      Temps:          2       0       0       0       0       0       0
  6408 ;;      Totals:         2       0       0       0       0       0       0
  6409 ;;Total ram usage:        2 bytes
  6410 ;; Hardware stack levels used:    1
  6411 ;; Hardware stack levels required when called:    2
  6412 ;; This function calls:
  6413 ;;		_lcd_cmnt
  6414 ;; This function is called by:
  6415 ;;		_main
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           	psect	text31
  6420  002B06                     __ptext31:
  6421                           	opt callstack 0
  6422  002B06                     _lcd_init:
  6423                           	opt callstack 28
  6424  002B06                     
  6425                           ;lcd_driver.c: 14:     TRISD=0X00;
  6426  002B06  0E00               	movlw	0
  6427  002B08  6E95               	movwf	149,c	;volatile
  6428                           
  6429                           ;lcd_driver.c: 15:     PORTD=0X00;
  6430  002B0A  0E00               	movlw	0
  6431  002B0C  6E83               	movwf	131,c	;volatile
  6432                           
  6433                           ;lcd_driver.c: 16:     ADCON1=0X06;
  6434  002B0E  0E06               	movlw	6
  6435  002B10  6EC1               	movwf	193,c	;volatile
  6436  002B12                     
  6437                           ;lcd_driver.c: 17:     lcd_cmnt(0x38);
  6438  002B12  0E38               	movlw	56
  6439  002B14  EC3C  F018         	call	_lcd_cmnt
  6440  002B18                     
  6441                           ;lcd_driver.c: 18:     _delay((unsigned long)((100)*(20000000/4000.0)));
  6442  002B18  0E03               	movlw	3
  6443  002B1A  6E0A               	movwf	(??_lcd_init+1)^0,c
  6444  002B1C  0E8A               	movlw	138
  6445  002B1E  6E09               	movwf	??_lcd_init^0,c
  6446  002B20  0E56               	movlw	86
  6447  002B22                     u5767:
  6448  002B22  2EE8               	decfsz	wreg,f,c
  6449  002B24  D7FE               	bra	u5767
  6450  002B26  2E09               	decfsz	??_lcd_init^0,f,c
  6451  002B28  D7FC               	bra	u5767
  6452  002B2A  2E0A               	decfsz	(??_lcd_init+1)^0,f,c
  6453  002B2C  D7FA               	bra	u5767
  6454  002B2E                     
  6455                           ;lcd_driver.c: 19:     lcd_cmnt(0x0c);
  6456  002B2E  0E0C               	movlw	12
  6457  002B30  EC3C  F018         	call	_lcd_cmnt
  6458  002B34                     
  6459                           ;lcd_driver.c: 20:     _delay((unsigned long)((100)*(20000000/4000.0)));
  6460  002B34  0E03               	movlw	3
  6461  002B36  6E0A               	movwf	(??_lcd_init+1)^0,c
  6462  002B38  0E8A               	movlw	138
  6463  002B3A  6E09               	movwf	??_lcd_init^0,c
  6464  002B3C  0E56               	movlw	86
  6465  002B3E                     u5777:
  6466  002B3E  2EE8               	decfsz	wreg,f,c
  6467  002B40  D7FE               	bra	u5777
  6468  002B42  2E09               	decfsz	??_lcd_init^0,f,c
  6469  002B44  D7FC               	bra	u5777
  6470  002B46  2E0A               	decfsz	(??_lcd_init+1)^0,f,c
  6471  002B48  D7FA               	bra	u5777
  6472  002B4A                     
  6473                           ;lcd_driver.c: 21:     lcd_cmnt(0x01);
  6474  002B4A  0E01               	movlw	1
  6475  002B4C  EC3C  F018         	call	_lcd_cmnt
  6476  002B50                     
  6477                           ;lcd_driver.c: 22:     _delay((unsigned long)((100)*(20000000/4000.0)));
  6478  002B50  0E03               	movlw	3
  6479  002B52  6E0A               	movwf	(??_lcd_init+1)^0,c
  6480  002B54  0E8A               	movlw	138
  6481  002B56  6E09               	movwf	??_lcd_init^0,c
  6482  002B58  0E56               	movlw	86
  6483  002B5A                     u5787:
  6484  002B5A  2EE8               	decfsz	wreg,f,c
  6485  002B5C  D7FE               	bra	u5787
  6486  002B5E  2E09               	decfsz	??_lcd_init^0,f,c
  6487  002B60  D7FC               	bra	u5787
  6488  002B62  2E0A               	decfsz	(??_lcd_init+1)^0,f,c
  6489  002B64  D7FA               	bra	u5787
  6490  002B66                     
  6491                           ;lcd_driver.c: 23:     lcd_cmnt(0x80);
  6492  002B66  0E80               	movlw	128
  6493  002B68  EC3C  F018         	call	_lcd_cmnt
  6494  002B6C                     
  6495                           ;lcd_driver.c: 24:     _delay((unsigned long)((100)*(20000000/4000.0)));
  6496  002B6C  0E03               	movlw	3
  6497  002B6E  6E0A               	movwf	(??_lcd_init+1)^0,c
  6498  002B70  0E8A               	movlw	138
  6499  002B72  6E09               	movwf	??_lcd_init^0,c
  6500  002B74  0E56               	movlw	86
  6501  002B76                     u5797:
  6502  002B76  2EE8               	decfsz	wreg,f,c
  6503  002B78  D7FE               	bra	u5797
  6504  002B7A  2E09               	decfsz	??_lcd_init^0,f,c
  6505  002B7C  D7FC               	bra	u5797
  6506  002B7E  2E0A               	decfsz	(??_lcd_init+1)^0,f,c
  6507  002B80  D7FA               	bra	u5797
  6508  002B82  0012               	return		;funcret
  6509  002B84                     __end_of_lcd_init:
  6510                           	opt callstack 0
  6511                           
  6512 ;; *************** function _lcd_cmnt *****************
  6513 ;; Defined at:
  6514 ;;		line 26 in file "lcd_driver.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;  cmnt            1    wreg     unsigned char 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  cmnt            1    7[COMRAM] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6528 ;;      Params:         0       0       0       0       0       0       0
  6529 ;;      Locals:         1       0       0       0       0       0       0
  6530 ;;      Temps:          1       0       0       0       0       0       0
  6531 ;;      Totals:         2       0       0       0       0       0       0
  6532 ;;Total ram usage:        2 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    1
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_main
  6539 ;;		_lcd_init
  6540 ;;		_keypad_update
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text32
  6545  003078                     __ptext32:
  6546                           	opt callstack 0
  6547  003078                     _lcd_cmnt:
  6548                           	opt callstack 28
  6549                           
  6550                           ;incstack = 0
  6551                           ;lcd_cmnt@cmnt stored from wreg
  6552  003078  6E08               	movwf	lcd_cmnt@cmnt^0,c
  6553  00307A                     
  6554                           ;lcd_driver.c: 26: void lcd_cmnt(unsigned char cmnt);lcd_driver.c: 27: {;lcd_driver.c: 2
      +                          8:     PORTD=cmnt;
  6555  00307A  C008  FF83         	movff	lcd_cmnt@cmnt,3971	;volatile
  6556  00307E                     
  6557                           ;lcd_driver.c: 29:     PORTBbits.RB1=0;
  6558  00307E  9281               	bcf	129,1,c	;volatile
  6559  003080                     
  6560                           ;lcd_driver.c: 30:     PORTBbits.RB2=1;_delay((unsigned long)((2)*(20000000/4000.0)));PO
      +                          RTBbits.RB2=0; ;
  6561  003080  8481               	bsf	129,2,c	;volatile
  6562  003082  0E0D               	movlw	13
  6563  003084  6E07               	movwf	??_lcd_cmnt^0,c
  6564  003086  0EFC               	movlw	252
  6565  003088                     u5807:
  6566  003088  2EE8               	decfsz	wreg,f,c
  6567  00308A  D7FE               	bra	u5807
  6568  00308C  2E07               	decfsz	??_lcd_cmnt^0,f,c
  6569  00308E  D7FC               	bra	u5807
  6570  003090  9481               	bcf	129,2,c	;volatile
  6571  003092  0012               	return		;funcret
  6572  003094                     __end_of_lcd_cmnt:
  6573                           	opt callstack 0
  6574                           
  6575 ;; *************** function _heat_elmnt_result_update *****************
  6576 ;; Defined at:
  6577 ;;		line 189 in file "i2c_driver.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;		None
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;  i               2    8[COMRAM] int 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6591 ;;      Params:         0       0       0       0       0       0       0
  6592 ;;      Locals:         2       0       0       0       0       0       0
  6593 ;;      Temps:          2       0       0       0       0       0       0
  6594 ;;      Totals:         4       0       0       0       0       0       0
  6595 ;;Total ram usage:        4 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    1
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_main
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text33
  6606  0026A8                     __ptext33:
  6607                           	opt callstack 0
  6608  0026A8                     _heat_elmnt_result_update:
  6609                           	opt callstack 29
  6610  0026A8                     
  6611                           ;i2c_driver.c: 191:     int i;;i2c_driver.c: 192:     for(i = 0; i < 2; i++)
  6612  0026A8  0E00               	movlw	0
  6613  0026AA  6E0A               	movwf	(heat_elmnt_result_update@i+1)^0,c
  6614  0026AC  0E00               	movlw	0
  6615  0026AE  6E09               	movwf	heat_elmnt_result_update@i^0,c
  6616  0026B0                     l5544:
  6617                           
  6618                           ;i2c_driver.c: 193:     {;i2c_driver.c: 194:         if(heat_elmnt_result[i] == 0)
  6619  0026B0  0EA6               	movlw	low _heat_elmnt_result
  6620  0026B2  2409               	addwf	heat_elmnt_result_update@i^0,w,c
  6621  0026B4  6ED9               	movwf	fsr2l,c
  6622  0026B6  0E00               	movlw	high _heat_elmnt_result
  6623  0026B8  200A               	addwfc	(heat_elmnt_result_update@i+1)^0,w,c
  6624  0026BA  6EDA               	movwf	fsr2h,c
  6625  0026BC  50DF               	movf	indf2,w,c
  6626  0026BE  A4D8               	btfss	status,2,c
  6627  0026C0  EF64  F013         	goto	u5561
  6628  0026C4  EF66  F013         	goto	u5560
  6629  0026C8                     u5561:
  6630  0026C8  EF84  F013         	goto	l5552
  6631  0026CC                     u5560:
  6632  0026CC  EF6E  F013         	goto	l5550
  6633  0026D0                     l325:
  6634                           
  6635                           ;i2c_driver.c: 199:                     PORTBbits.RB7 = 1;
  6636  0026D0  8E81               	bsf	129,7,c	;volatile
  6637                           
  6638                           ;i2c_driver.c: 200:                     break;
  6639  0026D2  EF84  F013         	goto	l5552
  6640  0026D6                     l327:
  6641                           
  6642                           ;i2c_driver.c: 202:                     PORTBbits.RB6 = 1;
  6643  0026D6  8C81               	bsf	129,6,c	;volatile
  6644                           
  6645                           ;i2c_driver.c: 203:                     break;
  6646  0026D8  EF84  F013         	goto	l5552
  6647  0026DC                     l5550:
  6648  0026DC  C009  F007         	movff	heat_elmnt_result_update@i,??_heat_elmnt_result_update
  6649  0026E0  C00A  F008         	movff	heat_elmnt_result_update@i+1,??_heat_elmnt_result_update+1
  6650                           
  6651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6652                           ; Switch size 1, requested type "simple"
  6653                           ; Number of cases is 1, Range of values is 0 to 0
  6654                           ; switch strategies available:
  6655                           ; Name         Instructions Cycles
  6656                           ; simple_byte            4     3 (average)
  6657                           ;	Chosen strategy is simple_byte
  6658  0026E4  5008               	movf	(??_heat_elmnt_result_update+1)^0,w,c
  6659  0026E6  0A00               	xorlw	0	; case 0
  6660  0026E8  B4D8               	btfsc	status,2,c
  6661  0026EA  EF79  F013         	goto	l5960
  6662  0026EE  EF84  F013         	goto	l5552
  6663  0026F2                     l5960:
  6664                           
  6665                           ; Switch size 1, requested type "simple"
  6666                           ; Number of cases is 2, Range of values is 0 to 1
  6667                           ; switch strategies available:
  6668                           ; Name         Instructions Cycles
  6669                           ; simple_byte            7     4 (average)
  6670                           ;	Chosen strategy is simple_byte
  6671  0026F2  5007               	movf	??_heat_elmnt_result_update^0,w,c
  6672  0026F4  0A00               	xorlw	0	; case 0
  6673  0026F6  B4D8               	btfsc	status,2,c
  6674  0026F8  EF68  F013         	goto	l325
  6675  0026FC  0A01               	xorlw	1	; case 1
  6676  0026FE  B4D8               	btfsc	status,2,c
  6677  002700  EF6B  F013         	goto	l327
  6678  002704  EF84  F013         	goto	l5552
  6679  002708                     l5552:
  6680                           
  6681                           ;i2c_driver.c: 208:         if(heat_elmnt_short[i] == 0)
  6682  002708  0EC7               	movlw	low _heat_elmnt_short
  6683  00270A  2409               	addwf	heat_elmnt_result_update@i^0,w,c
  6684  00270C  6ED9               	movwf	fsr2l,c
  6685  00270E  0E00               	movlw	high _heat_elmnt_short
  6686  002710  200A               	addwfc	(heat_elmnt_result_update@i+1)^0,w,c
  6687  002712  6EDA               	movwf	fsr2h,c
  6688  002714  50DF               	movf	indf2,w,c
  6689  002716  A4D8               	btfss	status,2,c
  6690  002718  EF90  F013         	goto	u5571
  6691  00271C  EF92  F013         	goto	u5570
  6692  002720                     u5571:
  6693  002720  EFB0  F013         	goto	l5560
  6694  002724                     u5570:
  6695  002724  EF9A  F013         	goto	l5558
  6696  002728                     l331:
  6697                           
  6698                           ;i2c_driver.c: 213:                     PORTBbits.RB5 = 1;
  6699  002728  8A81               	bsf	129,5,c	;volatile
  6700                           
  6701                           ;i2c_driver.c: 214:                     break;
  6702  00272A  EFB0  F013         	goto	l5560
  6703  00272E                     l333:
  6704                           
  6705                           ;i2c_driver.c: 216:                     PORTBbits.RB4 = 1;
  6706  00272E  8881               	bsf	129,4,c	;volatile
  6707                           
  6708                           ;i2c_driver.c: 217:                     break;
  6709  002730  EFB0  F013         	goto	l5560
  6710  002734                     l5558:
  6711  002734  C009  F007         	movff	heat_elmnt_result_update@i,??_heat_elmnt_result_update
  6712  002738  C00A  F008         	movff	heat_elmnt_result_update@i+1,??_heat_elmnt_result_update+1
  6713                           
  6714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6715                           ; Switch size 1, requested type "simple"
  6716                           ; Number of cases is 1, Range of values is 0 to 0
  6717                           ; switch strategies available:
  6718                           ; Name         Instructions Cycles
  6719                           ; simple_byte            4     3 (average)
  6720                           ;	Chosen strategy is simple_byte
  6721  00273C  5008               	movf	(??_heat_elmnt_result_update+1)^0,w,c
  6722  00273E  0A00               	xorlw	0	; case 0
  6723  002740  B4D8               	btfsc	status,2,c
  6724  002742  EFA5  F013         	goto	l5962
  6725  002746  EFB0  F013         	goto	l5560
  6726  00274A                     l5962:
  6727                           
  6728                           ; Switch size 1, requested type "simple"
  6729                           ; Number of cases is 2, Range of values is 0 to 1
  6730                           ; switch strategies available:
  6731                           ; Name         Instructions Cycles
  6732                           ; simple_byte            7     4 (average)
  6733                           ;	Chosen strategy is simple_byte
  6734  00274A  5007               	movf	??_heat_elmnt_result_update^0,w,c
  6735  00274C  0A00               	xorlw	0	; case 0
  6736  00274E  B4D8               	btfsc	status,2,c
  6737  002750  EF94  F013         	goto	l331
  6738  002754  0A01               	xorlw	1	; case 1
  6739  002756  B4D8               	btfsc	status,2,c
  6740  002758  EF97  F013         	goto	l333
  6741  00275C  EFB0  F013         	goto	l5560
  6742  002760                     l5560:
  6743                           
  6744                           ;i2c_driver.c: 224:     }
  6745  002760  4A09               	infsnz	heat_elmnt_result_update@i^0,f,c
  6746  002762  2A0A               	incf	(heat_elmnt_result_update@i+1)^0,f,c
  6747  002764  BE0A               	btfsc	(heat_elmnt_result_update@i+1)^0,7,c
  6748  002766  EFBE  F013         	goto	u5581
  6749  00276A  500A               	movf	(heat_elmnt_result_update@i+1)^0,w,c
  6750  00276C  E109               	bnz	u5580
  6751  00276E  0E02               	movlw	2
  6752  002770  5C09               	subwf	heat_elmnt_result_update@i^0,w,c
  6753  002772  A0D8               	btfss	status,0,c
  6754  002774  EFBE  F013         	goto	u5581
  6755  002778  EFC0  F013         	goto	u5580
  6756  00277C                     u5581:
  6757  00277C  EF58  F013         	goto	l5544
  6758  002780                     u5580:
  6759  002780  0012               	return		;funcret
  6760  002782                     __end_of_heat_elmnt_result_update:
  6761                           	opt callstack 0
  6762                           
  6763 ;; *************** function _heat_element_testing *****************
  6764 ;; Defined at:
  6765 ;;		line 90 in file "i2c_driver.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;		None
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  lcd_test       16   38[COMRAM] unsigned char [16]
  6770 ;;  testing_elap    8   54[COMRAM] unsigned long [2]
  6771 ;;  i               2   62[COMRAM] int 
  6772 ;;  current_time    2    0        int 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  1    wreg      void 
  6775 ;; Registers used:
  6776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6782 ;;      Params:         0       0       0       0       0       0       0
  6783 ;;      Locals:        26       0       0       0       0       0       0
  6784 ;;      Temps:          6       0       0       0       0       0       0
  6785 ;;      Totals:        32       0       0       0       0       0       0
  6786 ;;Total ram usage:       32 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    2
  6789 ;; This function calls:
  6790 ;;		___flge
  6791 ;;		___xxtofl
  6792 ;;		_adc_update
  6793 ;;		_heat_element_device_deselect
  6794 ;;		_heat_element_device_select
  6795 ;;		_memset
  6796 ;; This function is called by:
  6797 ;;		_main
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text34
  6802  000D84                     __ptext34:
  6803                           	opt callstack 0
  6804  000D84                     _heat_element_testing:
  6805                           	opt callstack 28
  6806  000D84                     
  6807                           ;i2c_driver.c: 92:     int i,current_time;;i2c_driver.c: 93:     int_u8 lcd_test[16]={0}
      +                          ;
  6808  000D84  EE20  F027         	lfsr	2,heat_element_testing@lcd_test
  6809  000D88  0E0F               	movlw	15
  6810  000D8A                     u5471:
  6811  000D8A  6ADE               	clrf	postinc2,c
  6812  000D8C  06E8               	decf	wreg,f,c
  6813  000D8E  E2FD               	bc	u5471
  6814                           
  6815                           ;i2c_driver.c: 94:     int_u32 testing_elapse_time[2] = {0};
  6816  000D90  EE20  F037         	lfsr	2,heat_element_testing@testing_elapse_time
  6817  000D94  0E07               	movlw	7
  6818  000D96                     u5481:
  6819  000D96  6ADE               	clrf	postinc2,c
  6820  000D98  06E8               	decf	wreg,f,c
  6821  000D9A  E2FD               	bc	u5481
  6822  000D9C                     
  6823                           ;i2c_driver.c: 95:     memset(heat_elmnt_flag,0,sizeof(heat_elmnt_flag));
  6824  000D9C  0EC5               	movlw	low _heat_elmnt_flag
  6825  000D9E  6E07               	movwf	memset@dest^0,c
  6826  000DA0  0E00               	movlw	high _heat_elmnt_flag
  6827  000DA2  6E08               	movwf	(memset@dest+1)^0,c
  6828  000DA4  0E00               	movlw	0
  6829  000DA6  6E0A               	movwf	(memset@c+1)^0,c
  6830  000DA8  0E00               	movlw	0
  6831  000DAA  6E09               	movwf	memset@c^0,c
  6832  000DAC  0E00               	movlw	0
  6833  000DAE  6E0C               	movwf	(memset@n+1)^0,c
  6834  000DB0  0E02               	movlw	2
  6835  000DB2  6E0B               	movwf	memset@n^0,c
  6836  000DB4  EC65  F00F         	call	_memset	;wreg free
  6837  000DB8                     
  6838                           ;i2c_driver.c: 96:     memset(heat_elmnt_short,0,sizeof(heat_elmnt_short));
  6839  000DB8  0EC7               	movlw	low _heat_elmnt_short
  6840  000DBA  6E07               	movwf	memset@dest^0,c
  6841  000DBC  0E00               	movlw	high _heat_elmnt_short
  6842  000DBE  6E08               	movwf	(memset@dest+1)^0,c
  6843  000DC0  0E00               	movlw	0
  6844  000DC2  6E0A               	movwf	(memset@c+1)^0,c
  6845  000DC4  0E00               	movlw	0
  6846  000DC6  6E09               	movwf	memset@c^0,c
  6847  000DC8  0E00               	movlw	0
  6848  000DCA  6E0C               	movwf	(memset@n+1)^0,c
  6849  000DCC  0E02               	movlw	2
  6850  000DCE  6E0B               	movwf	memset@n^0,c
  6851  000DD0  EC65  F00F         	call	_memset	;wreg free
  6852  000DD4                     
  6853                           ;i2c_driver.c: 97:     for(i = 0 ; i < 2; i++)
  6854  000DD4  0E00               	movlw	0
  6855  000DD6  6E40               	movwf	(heat_element_testing@i+1)^0,c
  6856  000DD8  0E00               	movlw	0
  6857  000DDA  6E3F               	movwf	heat_element_testing@i^0,c
  6858  000DDC                     l5502:
  6859                           
  6860                           ;i2c_driver.c: 98:     {;i2c_driver.c: 99:         heat_element_device_select(i);
  6861  000DDC  503F               	movf	heat_element_testing@i^0,w,c
  6862  000DDE  EC0F  F017         	call	_heat_element_device_select
  6863  000DE2                     
  6864                           ;i2c_driver.c: 100:         testing_elapse_time[i] = counter+200;
  6865  000DE2  0EC8               	movlw	200
  6866  000DE4  0100               	movlb	0	; () banked
  6867  000DE6  2598               	addwf	_counter& (0+255),w,b
  6868  000DE8  6E21               	movwf	??_heat_element_testing^0,c
  6869  000DEA  0E00               	movlw	0
  6870  000DEC  2199               	addwfc	(_counter+1)& (0+255),w,b
  6871  000DEE  6E22               	movwf	(??_heat_element_testing+1)^0,c
  6872  000DF0  0E00               	movlw	0
  6873  000DF2  219A               	addwfc	(_counter+2)& (0+255),w,b
  6874  000DF4  6E23               	movwf	(??_heat_element_testing+2)^0,c
  6875  000DF6  0E00               	movlw	0
  6876  000DF8  219B               	addwfc	(_counter+3)& (0+255),w,b
  6877  000DFA  6E24               	movwf	(??_heat_element_testing+3)^0,c
  6878  000DFC  0E37               	movlw	low heat_element_testing@testing_elapse_time
  6879  000DFE  6E25               	movwf	(??_heat_element_testing+4)^0,c
  6880  000E00  0E00               	movlw	high heat_element_testing@testing_elapse_time
  6881  000E02  6E26               	movwf	(??_heat_element_testing+5)^0,c
  6882  000E04  90D8               	bcf	status,0,c
  6883  000E06  343F               	rlcf	heat_element_testing@i^0,w,c
  6884  000E08  6ED9               	movwf	fsr2l,c
  6885  000E0A  3440               	rlcf	(heat_element_testing@i+1)^0,w,c
  6886  000E0C  6EDA               	movwf	fsr2h,c
  6887  000E0E  90D8               	bcf	status,0,c
  6888  000E10  36D9               	rlcf	fsr2l,f,c
  6889  000E12  36DA               	rlcf	fsr2h,f,c
  6890  000E14  5025               	movf	(??_heat_element_testing+4)^0,w,c
  6891  000E16  26D9               	addwf	fsr2l,f,c
  6892  000E18  5026               	movf	(??_heat_element_testing+5)^0,w,c
  6893  000E1A  22DA               	addwfc	fsr2h,f,c
  6894  000E1C  C021  FFDE         	movff	??_heat_element_testing,postinc2
  6895  000E20  C022  FFDE         	movff	??_heat_element_testing+1,postinc2
  6896  000E24  C023  FFDE         	movff	??_heat_element_testing+2,postinc2
  6897  000E28  C024  FFDE         	movff	??_heat_element_testing+3,postinc2
  6898  000E2C                     
  6899                           ; BSR set to: 0
  6900                           ;i2c_driver.c: 101:         loop_count = 0;
  6901  000E2C  0E00               	movlw	0
  6902  000E2E  6F90               	movwf	_loop_count& (0+255),b
  6903  000E30  0E00               	movlw	0
  6904  000E32  6F91               	movwf	(_loop_count+1)& (0+255),b
  6905  000E34  0E00               	movlw	0
  6906  000E36  6F92               	movwf	(_loop_count+2)& (0+255),b
  6907  000E38  0E00               	movlw	0
  6908  000E3A  6F93               	movwf	(_loop_count+3)& (0+255),b
  6909                           
  6910                           ;i2c_driver.c: 102:         while(testing_elapse_time[i] > counter)
  6911  000E3C  EF13  F008         	goto	l5528
  6912  000E40                     l5508:
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;i2c_driver.c: 103:         {;i2c_driver.c: 112:             adc_update(0);
  6916  000E40  0E00               	movlw	0
  6917  000E42  ECF5  F017         	call	_adc_update
  6918  000E46                     
  6919                           ;i2c_driver.c: 113:             if(loop_count <215)
  6920  000E46  0100               	movlb	0	; () banked
  6921  000E48  5193               	movf	(_loop_count+3)& (0+255),w,b
  6922  000E4A  1192               	iorwf	(_loop_count+2)& (0+255),w,b
  6923  000E4C  1191               	iorwf	(_loop_count+1)& (0+255),w,b
  6924  000E4E  E107               	bnz	u5491
  6925  000E50  0ED7               	movlw	215
  6926  000E52  5D90               	subwf	_loop_count& (0+255),w,b
  6927  000E54  B0D8               	btfsc	status,0,c
  6928  000E56  EF2F  F007         	goto	u5491
  6929  000E5A  EF31  F007         	goto	u5490
  6930  000E5E                     u5491:
  6931  000E5E  EF3E  F007         	goto	l5514
  6932  000E62                     u5490:
  6933  000E62                     
  6934                           ; BSR set to: 0
  6935                           ;i2c_driver.c: 114:             heating_elemnt_adc_value[loop_count]= adc_value[0];
  6936  000E62  90D8               	bcf	status,0,c
  6937  000E64  3590               	rlcf	_loop_count& (0+255),w,b
  6938  000E66  6ED9               	movwf	fsr2l,c
  6939  000E68  3591               	rlcf	(_loop_count+1)& (0+255),w,b
  6940  000E6A  6EDA               	movwf	fsr2h,c
  6941  000E6C  0E96               	movlw	low _heating_elemnt_adc_value
  6942  000E6E  26D9               	addwf	fsr2l,f,c
  6943  000E70  0E02               	movlw	high _heating_elemnt_adc_value
  6944  000E72  22DA               	addwfc	fsr2h,f,c
  6945  000E74  C100  FFDE         	movff	_adc_value,postinc2
  6946  000E78  C101  FFDD         	movff	_adc_value+1,postdec2
  6947  000E7C                     l5514:
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;i2c_driver.c: 115:             if((adc_value[0] > 368.64) && (adc_value[0] < 409.6) && 
      +                          (heat_elmnt_flag[i] == 0))
  6951  000E7C  0EEC               	movlw	236
  6952  000E7E  6E15               	movwf	___flge@ff1^0,c
  6953  000E80  0E51               	movlw	81
  6954  000E82  6E16               	movwf	(___flge@ff1+1)^0,c
  6955  000E84  0EB8               	movlw	184
  6956  000E86  6E17               	movwf	(___flge@ff1+2)^0,c
  6957  000E88  0E43               	movlw	67
  6958  000E8A  6E18               	movwf	(___flge@ff1+3)^0,c
  6959  000E8C  C100  F007         	movff	_adc_value,___xxtofl@val
  6960  000E90  C101  F008         	movff	_adc_value+1,___xxtofl@val+1
  6961  000E94  6A09               	clrf	(___xxtofl@val+2)^0,c
  6962  000E96  6A0A               	clrf	(___xxtofl@val+3)^0,c
  6963  000E98  0E00               	movlw	0
  6964  000E9A  ECFF  F00C         	call	___xxtofl
  6965  000E9E  C007  F019         	movff	?___xxtofl,___flge@ff2
  6966  000EA2  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  6967  000EA6  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  6968  000EAA  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  6969  000EAE  ECEB  F011         	call	___flge	;wreg free
  6970  000EB2  B0D8               	btfsc	status,0,c
  6971  000EB4  EF5E  F007         	goto	u5501
  6972  000EB8  EF60  F007         	goto	u5500
  6973  000EBC                     u5501:
  6974  000EBC  EFC2  F007         	goto	l5522
  6975  000EC0                     u5500:
  6976  000EC0  C100  F007         	movff	_adc_value,___xxtofl@val
  6977  000EC4  C101  F008         	movff	_adc_value+1,___xxtofl@val+1
  6978  000EC8  6A09               	clrf	(___xxtofl@val+2)^0,c
  6979  000ECA  6A0A               	clrf	(___xxtofl@val+3)^0,c
  6980  000ECC  0E00               	movlw	0
  6981  000ECE  ECFF  F00C         	call	___xxtofl
  6982  000ED2  C007  F015         	movff	?___xxtofl,___flge@ff1
  6983  000ED6  C008  F016         	movff	?___xxtofl+1,___flge@ff1+1
  6984  000EDA  C009  F017         	movff	?___xxtofl+2,___flge@ff1+2
  6985  000EDE  C00A  F018         	movff	?___xxtofl+3,___flge@ff1+3
  6986  000EE2  0ECD               	movlw	205
  6987  000EE4  6E19               	movwf	___flge@ff2^0,c
  6988  000EE6  0ECC               	movlw	204
  6989  000EE8  6E1A               	movwf	(___flge@ff2+1)^0,c
  6990  000EEA  0ECC               	movlw	204
  6991  000EEC  6E1B               	movwf	(___flge@ff2+2)^0,c
  6992  000EEE  0E43               	movlw	67
  6993  000EF0  6E1C               	movwf	(___flge@ff2+3)^0,c
  6994  000EF2  ECEB  F011         	call	___flge	;wreg free
  6995  000EF6  B0D8               	btfsc	status,0,c
  6996  000EF8  EF80  F007         	goto	u5511
  6997  000EFC  EF82  F007         	goto	u5510
  6998  000F00                     u5511:
  6999  000F00  EFC2  F007         	goto	l5522
  7000  000F04                     u5510:
  7001  000F04  0EC5               	movlw	low _heat_elmnt_flag
  7002  000F06  243F               	addwf	heat_element_testing@i^0,w,c
  7003  000F08  6ED9               	movwf	fsr2l,c
  7004  000F0A  0E00               	movlw	high _heat_elmnt_flag
  7005  000F0C  2040               	addwfc	(heat_element_testing@i+1)^0,w,c
  7006  000F0E  6EDA               	movwf	fsr2h,c
  7007  000F10  50DF               	movf	indf2,w,c
  7008  000F12  A4D8               	btfss	status,2,c
  7009  000F14  EF8E  F007         	goto	u5521
  7010  000F18  EF90  F007         	goto	u5520
  7011  000F1C                     u5521:
  7012  000F1C  EFC2  F007         	goto	l5522
  7013  000F20                     u5520:
  7014  000F20                     
  7015                           ;i2c_driver.c: 116:             {;i2c_driver.c: 117:                 heat_elmnt_result[i
      +                          ]= 1;
  7016  000F20  0EA6               	movlw	low _heat_elmnt_result
  7017  000F22  243F               	addwf	heat_element_testing@i^0,w,c
  7018  000F24  6ED9               	movwf	fsr2l,c
  7019  000F26  0E00               	movlw	high _heat_elmnt_result
  7020  000F28  2040               	addwfc	(heat_element_testing@i+1)^0,w,c
  7021  000F2A  6EDA               	movwf	fsr2h,c
  7022  000F2C  0E01               	movlw	1
  7023  000F2E  6EDF               	movwf	indf2,c
  7024                           
  7025                           ;i2c_driver.c: 118:                 heat_elmnt_short[i]= 1;
  7026  000F30  0EC7               	movlw	low _heat_elmnt_short
  7027  000F32  243F               	addwf	heat_element_testing@i^0,w,c
  7028  000F34  6ED9               	movwf	fsr2l,c
  7029  000F36  0E00               	movlw	high _heat_elmnt_short
  7030  000F38  2040               	addwfc	(heat_element_testing@i+1)^0,w,c
  7031  000F3A  6EDA               	movwf	fsr2h,c
  7032  000F3C  0E01               	movlw	1
  7033  000F3E  6EDF               	movwf	indf2,c
  7034                           
  7035                           ;i2c_driver.c: 119:                 heat_elmnt_result_time[i] = counter;
  7036  000F40  0E32               	movlw	low _heat_elmnt_result_time
  7037  000F42  6E21               	movwf	??_heat_element_testing^0,c
  7038  000F44  0E01               	movlw	high _heat_elmnt_result_time
  7039  000F46  6E22               	movwf	(??_heat_element_testing+1)^0,c
  7040  000F48  90D8               	bcf	status,0,c
  7041  000F4A  343F               	rlcf	heat_element_testing@i^0,w,c
  7042  000F4C  6ED9               	movwf	fsr2l,c
  7043  000F4E  3440               	rlcf	(heat_element_testing@i+1)^0,w,c
  7044  000F50  6EDA               	movwf	fsr2h,c
  7045  000F52  90D8               	bcf	status,0,c
  7046  000F54  36D9               	rlcf	fsr2l,f,c
  7047  000F56  36DA               	rlcf	fsr2h,f,c
  7048  000F58  5021               	movf	??_heat_element_testing^0,w,c
  7049  000F5A  26D9               	addwf	fsr2l,f,c
  7050  000F5C  5022               	movf	(??_heat_element_testing+1)^0,w,c
  7051  000F5E  22DA               	addwfc	fsr2h,f,c
  7052  000F60  C098  FFDE         	movff	_counter,postinc2
  7053  000F64  C099  FFDE         	movff	_counter+1,postinc2
  7054  000F68  C09A  FFDE         	movff	_counter+2,postinc2
  7055  000F6C  C09B  FFDE         	movff	_counter+3,postinc2
  7056                           
  7057                           ;i2c_driver.c: 120:                 heat_elmnt_flag[i] = 1;
  7058  000F70  0EC5               	movlw	low _heat_elmnt_flag
  7059  000F72  243F               	addwf	heat_element_testing@i^0,w,c
  7060  000F74  6ED9               	movwf	fsr2l,c
  7061  000F76  0E00               	movlw	high _heat_elmnt_flag
  7062  000F78  2040               	addwfc	(heat_element_testing@i+1)^0,w,c
  7063  000F7A  6EDA               	movwf	fsr2h,c
  7064  000F7C  0E01               	movlw	1
  7065  000F7E  6EDF               	movwf	indf2,c
  7066                           
  7067                           ;i2c_driver.c: 122:             }
  7068  000F80  EF0C  F008         	goto	l5526
  7069  000F84                     l5522:
  7070  000F84  C100  F007         	movff	_adc_value,___xxtofl@val
  7071  000F88  C101  F008         	movff	_adc_value+1,___xxtofl@val+1
  7072  000F8C  6A09               	clrf	(___xxtofl@val+2)^0,c
  7073  000F8E  6A0A               	clrf	(___xxtofl@val+3)^0,c
  7074  000F90  0E00               	movlw	0
  7075  000F92  ECFF  F00C         	call	___xxtofl
  7076  000F96  C007  F015         	movff	?___xxtofl,___flge@ff1
  7077  000F9A  C008  F016         	movff	?___xxtofl+1,___flge@ff1+1
  7078  000F9E  C009  F017         	movff	?___xxtofl+2,___flge@ff1+2
  7079  000FA2  C00A  F018         	movff	?___xxtofl+3,___flge@ff1+3
  7080  000FA6  0ED7               	movlw	215
  7081  000FA8  6E19               	movwf	___flge@ff2^0,c
  7082  000FAA  0E23               	movlw	35
  7083  000FAC  6E1A               	movwf	(___flge@ff2+1)^0,c
  7084  000FAE  0E38               	movlw	56
  7085  000FB0  6E1B               	movwf	(___flge@ff2+2)^0,c
  7086  000FB2  0E44               	movlw	68
  7087  000FB4  6E1C               	movwf	(___flge@ff2+3)^0,c
  7088  000FB6  ECEB  F011         	call	___flge	;wreg free
  7089  000FBA  A0D8               	btfss	status,0,c
  7090  000FBC  EFE2  F007         	goto	u5531
  7091  000FC0  EFE4  F007         	goto	u5530
  7092  000FC4                     u5531:
  7093  000FC4  EF0C  F008         	goto	l5526
  7094  000FC8                     u5530:
  7095  000FC8                     
  7096                           ;i2c_driver.c: 124:             {;i2c_driver.c: 125:                 heat_elmnt_result[i
      +                          ] = 1;
  7097  000FC8  0EA6               	movlw	low _heat_elmnt_result
  7098  000FCA  243F               	addwf	heat_element_testing@i^0,w,c
  7099  000FCC  6ED9               	movwf	fsr2l,c
  7100  000FCE  0E00               	movlw	high _heat_elmnt_result
  7101  000FD0  2040               	addwfc	(heat_element_testing@i+1)^0,w,c
  7102  000FD2  6EDA               	movwf	fsr2h,c
  7103  000FD4  0E01               	movlw	1
  7104  000FD6  6EDF               	movwf	indf2,c
  7105                           
  7106                           ;i2c_driver.c: 126:                 heat_elmnt_short[i]= 0;
  7107  000FD8  0EC7               	movlw	low _heat_elmnt_short
  7108  000FDA  243F               	addwf	heat_element_testing@i^0,w,c
  7109  000FDC  6ED9               	movwf	fsr2l,c
  7110  000FDE  0E00               	movlw	high _heat_elmnt_short
  7111  000FE0  2040               	addwfc	(heat_element_testing@i+1)^0,w,c
  7112  000FE2  6EDA               	movwf	fsr2h,c
  7113  000FE4  0E00               	movlw	0
  7114  000FE6  6EDF               	movwf	indf2,c
  7115                           
  7116                           ;i2c_driver.c: 127:                 heat_elmnt_result_time[i] = counter;
  7117  000FE8  0E32               	movlw	low _heat_elmnt_result_time
  7118  000FEA  6E21               	movwf	??_heat_element_testing^0,c
  7119  000FEC  0E01               	movlw	high _heat_elmnt_result_time
  7120  000FEE  6E22               	movwf	(??_heat_element_testing+1)^0,c
  7121  000FF0  90D8               	bcf	status,0,c
  7122  000FF2  343F               	rlcf	heat_element_testing@i^0,w,c
  7123  000FF4  6ED9               	movwf	fsr2l,c
  7124  000FF6  3440               	rlcf	(heat_element_testing@i+1)^0,w,c
  7125  000FF8  6EDA               	movwf	fsr2h,c
  7126  000FFA  90D8               	bcf	status,0,c
  7127  000FFC  36D9               	rlcf	fsr2l,f,c
  7128  000FFE  36DA               	rlcf	fsr2h,f,c
  7129  001000  5021               	movf	??_heat_element_testing^0,w,c
  7130  001002  26D9               	addwf	fsr2l,f,c
  7131  001004  5022               	movf	(??_heat_element_testing+1)^0,w,c
  7132  001006  22DA               	addwfc	fsr2h,f,c
  7133  001008  C098  FFDE         	movff	_counter,postinc2
  7134  00100C  C099  FFDE         	movff	_counter+1,postinc2
  7135  001010  C09A  FFDE         	movff	_counter+2,postinc2
  7136  001014  C09B  FFDE         	movff	_counter+3,postinc2
  7137  001018                     l5526:
  7138                           
  7139                           ;i2c_driver.c: 130:            loop_count++;;
  7140  001018  0E01               	movlw	1
  7141  00101A  0100               	movlb	0	; () banked
  7142  00101C  2790               	addwf	_loop_count& (0+255),f,b
  7143  00101E  0E00               	movlw	0
  7144  001020  2391               	addwfc	(_loop_count+1)& (0+255),f,b
  7145  001022  2392               	addwfc	(_loop_count+2)& (0+255),f,b
  7146  001024  2393               	addwfc	(_loop_count+3)& (0+255),f,b
  7147  001026                     l5528:
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;i2c_driver.c: 102:         while(testing_elapse_time[i] > counter)
  7151  001026  0E37               	movlw	low heat_element_testing@testing_elapse_time
  7152  001028  6E21               	movwf	??_heat_element_testing^0,c
  7153  00102A  0E00               	movlw	high heat_element_testing@testing_elapse_time
  7154  00102C  6E22               	movwf	(??_heat_element_testing+1)^0,c
  7155  00102E  90D8               	bcf	status,0,c
  7156  001030  343F               	rlcf	heat_element_testing@i^0,w,c
  7157  001032  6ED9               	movwf	fsr2l,c
  7158  001034  3440               	rlcf	(heat_element_testing@i+1)^0,w,c
  7159  001036  6EDA               	movwf	fsr2h,c
  7160  001038  90D8               	bcf	status,0,c
  7161  00103A  36D9               	rlcf	fsr2l,f,c
  7162  00103C  36DA               	rlcf	fsr2h,f,c
  7163  00103E  5021               	movf	??_heat_element_testing^0,w,c
  7164  001040  26D9               	addwf	fsr2l,f,c
  7165  001042  5022               	movf	(??_heat_element_testing+1)^0,w,c
  7166  001044  22DA               	addwfc	fsr2h,f,c
  7167  001046  50DE               	movf	postinc2,w,c
  7168  001048  5D98               	subwf	_counter& (0+255),w,b
  7169  00104A  50DE               	movf	postinc2,w,c
  7170  00104C  5999               	subwfb	(_counter+1)& (0+255),w,b
  7171  00104E  50DE               	movf	postinc2,w,c
  7172  001050  599A               	subwfb	(_counter+2)& (0+255),w,b
  7173  001052  50DE               	movf	postinc2,w,c
  7174  001054  599B               	subwfb	(_counter+3)& (0+255),w,b
  7175  001056  A0D8               	btfss	status,0,c
  7176  001058  EF30  F008         	goto	u5541
  7177  00105C  EF32  F008         	goto	u5540
  7178  001060                     u5541:
  7179  001060  EF20  F007         	goto	l5508
  7180  001064                     u5540:
  7181  001064                     
  7182                           ; BSR set to: 0
  7183                           ;i2c_driver.c: 132:         heat_element_device_deselect(i);
  7184  001064  503F               	movf	heat_element_testing@i^0,w,c
  7185  001066  EC2E  F017         	call	_heat_element_device_deselect
  7186  00106A                     
  7187                           ;i2c_driver.c: 133:     }
  7188  00106A  4A3F               	infsnz	heat_element_testing@i^0,f,c
  7189  00106C  2A40               	incf	(heat_element_testing@i+1)^0,f,c
  7190  00106E  BE40               	btfsc	(heat_element_testing@i+1)^0,7,c
  7191  001070  EF43  F008         	goto	u5551
  7192  001074  5040               	movf	(heat_element_testing@i+1)^0,w,c
  7193  001076  E109               	bnz	u5550
  7194  001078  0E02               	movlw	2
  7195  00107A  5C3F               	subwf	heat_element_testing@i^0,w,c
  7196  00107C  A0D8               	btfss	status,0,c
  7197  00107E  EF43  F008         	goto	u5551
  7198  001082  EF45  F008         	goto	u5550
  7199  001086                     u5551:
  7200  001086  EFEE  F006         	goto	l5502
  7201  00108A                     u5550:
  7202  00108A                     
  7203                           ;i2c_driver.c: 134:     test_status = 1;
  7204  00108A  0E01               	movlw	1
  7205  00108C  0100               	movlb	0	; () banked
  7206  00108E  6FAA               	movwf	_test_status& (0+255),b
  7207  001090                     
  7208                           ; BSR set to: 0
  7209  001090  0012               	return		;funcret
  7210  001092                     __end_of_heat_element_testing:
  7211                           	opt callstack 0
  7212                           
  7213 ;; *************** function _memset *****************
  7214 ;; Defined at:
  7215 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  dest            2    6[COMRAM] PTR void 
  7218 ;;		 -> heat_elmnt_short(2), heat_elmnt_flag(2), 
  7219 ;;  c               2    8[COMRAM] int 
  7220 ;;  n               2   10[COMRAM] unsigned int 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;  s               2   16[COMRAM] PTR unsigned char 
  7223 ;;		 -> heat_elmnt_short(2), heat_elmnt_flag(2), 
  7224 ;;  k               2   14[COMRAM] unsigned int 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  2    6[COMRAM] PTR void 
  7227 ;; Registers used:
  7228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7234 ;;      Params:         6       0       0       0       0       0       0
  7235 ;;      Locals:         4       0       0       0       0       0       0
  7236 ;;      Temps:          2       0       0       0       0       0       0
  7237 ;;      Totals:        12       0       0       0       0       0       0
  7238 ;;Total ram usage:       12 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; Hardware stack levels required when called:    1
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_heat_element_testing
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text35
  7249  001ECA                     __ptext35:
  7250                           	opt callstack 0
  7251  001ECA                     _memset:
  7252                           	opt callstack 28
  7253  001ECA  C007  F011         	movff	memset@dest,memset@s
  7254  001ECE  C008  F012         	movff	memset@dest+1,memset@s+1
  7255  001ED2  500B               	movf	memset@n^0,w,c
  7256  001ED4  100C               	iorwf	(memset@n+1)^0,w,c
  7257  001ED6  A4D8               	btfss	status,2,c
  7258  001ED8  EF70  F00F         	goto	u5181
  7259  001EDC  EF72  F00F         	goto	u5180
  7260  001EE0                     u5181:
  7261  001EE0  EF74  F00F         	goto	l5270
  7262  001EE4                     u5180:
  7263  001EE4  EF1F  F010         	goto	l1546
  7264  001EE8                     l5270:
  7265  001EE8  C011  FFD9         	movff	memset@s,fsr2l
  7266  001EEC  C012  FFDA         	movff	memset@s+1,fsr2h
  7267  001EF0  C009  FFDF         	movff	memset@c,indf2
  7268  001EF4  500B               	movf	memset@n^0,w,c
  7269  001EF6  2411               	addwf	memset@s^0,w,c
  7270  001EF8  6E0D               	movwf	??_memset^0,c
  7271  001EFA  500C               	movf	(memset@n+1)^0,w,c
  7272  001EFC  2012               	addwfc	(memset@s+1)^0,w,c
  7273  001EFE  6E0E               	movwf	(??_memset+1)^0,c
  7274  001F00  0EFF               	movlw	255
  7275  001F02  240D               	addwf	??_memset^0,w,c
  7276  001F04  6ED9               	movwf	fsr2l,c
  7277  001F06  0EFF               	movlw	255
  7278  001F08  200E               	addwfc	(??_memset+1)^0,w,c
  7279  001F0A  6EDA               	movwf	fsr2h,c
  7280  001F0C  C009  FFDF         	movff	memset@c,indf2
  7281  001F10  500C               	movf	(memset@n+1)^0,w,c
  7282  001F12  E107               	bnz	u5191
  7283  001F14  0E03               	movlw	3
  7284  001F16  5C0B               	subwf	memset@n^0,w,c
  7285  001F18  B0D8               	btfsc	status,0,c
  7286  001F1A  EF91  F00F         	goto	u5191
  7287  001F1E  EF93  F00F         	goto	u5190
  7288  001F22                     u5191:
  7289  001F22  EF95  F00F         	goto	l5276
  7290  001F26                     u5190:
  7291  001F26  EF1F  F010         	goto	l1546
  7292  001F2A                     l5276:
  7293  001F2A  EE20 F001          	lfsr	2,1
  7294  001F2E  5011               	movf	memset@s^0,w,c
  7295  001F30  26D9               	addwf	fsr2l,f,c
  7296  001F32  5012               	movf	(memset@s+1)^0,w,c
  7297  001F34  22DA               	addwfc	fsr2h,f,c
  7298  001F36  C009  FFDF         	movff	memset@c,indf2
  7299  001F3A  EE20 F002          	lfsr	2,2
  7300  001F3E  5011               	movf	memset@s^0,w,c
  7301  001F40  26D9               	addwf	fsr2l,f,c
  7302  001F42  5012               	movf	(memset@s+1)^0,w,c
  7303  001F44  22DA               	addwfc	fsr2h,f,c
  7304  001F46  C009  FFDF         	movff	memset@c,indf2
  7305  001F4A  500B               	movf	memset@n^0,w,c
  7306  001F4C  2411               	addwf	memset@s^0,w,c
  7307  001F4E  6E0D               	movwf	??_memset^0,c
  7308  001F50  500C               	movf	(memset@n+1)^0,w,c
  7309  001F52  2012               	addwfc	(memset@s+1)^0,w,c
  7310  001F54  6E0E               	movwf	(??_memset+1)^0,c
  7311  001F56  0EFE               	movlw	254
  7312  001F58  240D               	addwf	??_memset^0,w,c
  7313  001F5A  6ED9               	movwf	fsr2l,c
  7314  001F5C  0EFF               	movlw	255
  7315  001F5E  200E               	addwfc	(??_memset+1)^0,w,c
  7316  001F60  6EDA               	movwf	fsr2h,c
  7317  001F62  C009  FFDF         	movff	memset@c,indf2
  7318  001F66  500B               	movf	memset@n^0,w,c
  7319  001F68  2411               	addwf	memset@s^0,w,c
  7320  001F6A  6E0D               	movwf	??_memset^0,c
  7321  001F6C  500C               	movf	(memset@n+1)^0,w,c
  7322  001F6E  2012               	addwfc	(memset@s+1)^0,w,c
  7323  001F70  6E0E               	movwf	(??_memset+1)^0,c
  7324  001F72  0EFD               	movlw	253
  7325  001F74  240D               	addwf	??_memset^0,w,c
  7326  001F76  6ED9               	movwf	fsr2l,c
  7327  001F78  0EFF               	movlw	255
  7328  001F7A  200E               	addwfc	(??_memset+1)^0,w,c
  7329  001F7C  6EDA               	movwf	fsr2h,c
  7330  001F7E  C009  FFDF         	movff	memset@c,indf2
  7331  001F82  500C               	movf	(memset@n+1)^0,w,c
  7332  001F84  E107               	bnz	u5201
  7333  001F86  0E07               	movlw	7
  7334  001F88  5C0B               	subwf	memset@n^0,w,c
  7335  001F8A  B0D8               	btfsc	status,0,c
  7336  001F8C  EFCA  F00F         	goto	u5201
  7337  001F90  EFCC  F00F         	goto	u5200
  7338  001F94                     u5201:
  7339  001F94  EFCE  F00F         	goto	l5282
  7340  001F98                     u5200:
  7341  001F98  EF1F  F010         	goto	l1546
  7342  001F9C                     l5282:
  7343  001F9C  EE20 F003          	lfsr	2,3
  7344  001FA0  5011               	movf	memset@s^0,w,c
  7345  001FA2  26D9               	addwf	fsr2l,f,c
  7346  001FA4  5012               	movf	(memset@s+1)^0,w,c
  7347  001FA6  22DA               	addwfc	fsr2h,f,c
  7348  001FA8  C009  FFDF         	movff	memset@c,indf2
  7349  001FAC  500B               	movf	memset@n^0,w,c
  7350  001FAE  2411               	addwf	memset@s^0,w,c
  7351  001FB0  6E0D               	movwf	??_memset^0,c
  7352  001FB2  500C               	movf	(memset@n+1)^0,w,c
  7353  001FB4  2012               	addwfc	(memset@s+1)^0,w,c
  7354  001FB6  6E0E               	movwf	(??_memset+1)^0,c
  7355  001FB8  0EFC               	movlw	252
  7356  001FBA  240D               	addwf	??_memset^0,w,c
  7357  001FBC  6ED9               	movwf	fsr2l,c
  7358  001FBE  0EFF               	movlw	255
  7359  001FC0  200E               	addwfc	(??_memset+1)^0,w,c
  7360  001FC2  6EDA               	movwf	fsr2h,c
  7361  001FC4  C009  FFDF         	movff	memset@c,indf2
  7362  001FC8  500C               	movf	(memset@n+1)^0,w,c
  7363  001FCA  E107               	bnz	u5211
  7364  001FCC  0E09               	movlw	9
  7365  001FCE  5C0B               	subwf	memset@n^0,w,c
  7366  001FD0  B0D8               	btfsc	status,0,c
  7367  001FD2  EFED  F00F         	goto	u5211
  7368  001FD6  EFEF  F00F         	goto	u5210
  7369  001FDA                     u5211:
  7370  001FDA  EFF1  F00F         	goto	l5288
  7371  001FDE                     u5210:
  7372  001FDE  EF1F  F010         	goto	l1546
  7373  001FE2                     l5288:
  7374  001FE2  C011  F00D         	movff	memset@s,??_memset
  7375  001FE6  C012  F00E         	movff	memset@s+1,??_memset+1
  7376  001FEA  1E0D               	comf	??_memset^0,f,c
  7377  001FEC  1E0E               	comf	(??_memset+1)^0,f,c
  7378  001FEE  4A0D               	infsnz	??_memset^0,f,c
  7379  001FF0  2A0E               	incf	(??_memset+1)^0,f,c
  7380  001FF2  0E03               	movlw	3
  7381  001FF4  140D               	andwf	??_memset^0,w,c
  7382  001FF6  6E0F               	movwf	memset@k^0,c
  7383  001FF8  6A10               	clrf	(memset@k+1)^0,c
  7384  001FFA  500F               	movf	memset@k^0,w,c
  7385  001FFC  2611               	addwf	memset@s^0,f,c
  7386  001FFE  5010               	movf	(memset@k+1)^0,w,c
  7387  002000  2212               	addwfc	(memset@s+1)^0,f,c
  7388  002002  500F               	movf	memset@k^0,w,c
  7389  002004  5E0B               	subwf	memset@n^0,f,c
  7390  002006  5010               	movf	(memset@k+1)^0,w,c
  7391  002008  5A0C               	subwfb	(memset@n+1)^0,f,c
  7392  00200A  0EFC               	movlw	252
  7393  00200C  160B               	andwf	memset@n^0,f,c
  7394  00200E  0EFF               	movlw	255
  7395  002010  160C               	andwf	(memset@n+1)^0,f,c
  7396  002012  EF16  F010         	goto	l5296
  7397  002016                     l5290:
  7398  002016  C011  FFD9         	movff	memset@s,fsr2l
  7399  00201A  C012  FFDA         	movff	memset@s+1,fsr2h
  7400  00201E  C009  FFDF         	movff	memset@c,indf2
  7401  002022  060B               	decf	memset@n^0,f,c
  7402  002024  A0D8               	btfss	status,0,c
  7403  002026  060C               	decf	(memset@n+1)^0,f,c
  7404  002028  4A11               	infsnz	memset@s^0,f,c
  7405  00202A  2A12               	incf	(memset@s+1)^0,f,c
  7406  00202C                     l5296:
  7407  00202C  500B               	movf	memset@n^0,w,c
  7408  00202E  100C               	iorwf	(memset@n+1)^0,w,c
  7409  002030  A4D8               	btfss	status,2,c
  7410  002032  EF1D  F010         	goto	u5221
  7411  002036  EF1F  F010         	goto	u5220
  7412  00203A                     u5221:
  7413  00203A  EF0B  F010         	goto	l5290
  7414  00203E                     u5220:
  7415  00203E                     l1546:
  7416  00203E  0012               	return		;funcret
  7417  002040                     __end_of_memset:
  7418                           	opt callstack 0
  7419                           
  7420 ;; *************** function _heat_element_device_select *****************
  7421 ;; Defined at:
  7422 ;;		line 144 in file "i2c_driver.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;  relay_number    1    wreg     unsigned char 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;  relay_number    1    8[COMRAM] unsigned char 
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  1    wreg      void 
  7429 ;; Registers used:
  7430 ;;		wreg, status,2, status,0
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7436 ;;      Params:         0       0       0       0       0       0       0
  7437 ;;      Locals:         1       0       0       0       0       0       0
  7438 ;;      Temps:          2       0       0       0       0       0       0
  7439 ;;      Totals:         3       0       0       0       0       0       0
  7440 ;;Total ram usage:        3 bytes
  7441 ;; Hardware stack levels used:    1
  7442 ;; Hardware stack levels required when called:    1
  7443 ;; This function calls:
  7444 ;;		Nothing
  7445 ;; This function is called by:
  7446 ;;		_heat_element_testing
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text36
  7451  002E1E                     __ptext36:
  7452                           	opt callstack 0
  7453  002E1E                     _heat_element_device_select:
  7454                           	opt callstack 28
  7455                           
  7456                           ;incstack = 0
  7457                           ;heat_element_device_select@relay_number stored from wreg
  7458  002E1E  6E09               	movwf	heat_element_device_select@relay_number^0,c
  7459  002E20                     
  7460                           ;i2c_driver.c: 144: void heat_element_device_select(int_u8 relay_number);i2c_driver.c: 1
      +                          45: {;i2c_driver.c: 146:     switch(relay_number)
  7461  002E20  EF18  F017         	goto	l5302
  7462  002E24                     l306:
  7463                           
  7464                           ;i2c_driver.c: 149:             PORTCbits.RC0 = 0;
  7465  002E24  9082               	bcf	130,0,c	;volatile
  7466                           
  7467                           ;i2c_driver.c: 150:             break;
  7468  002E26  EF2D  F017         	goto	l310
  7469  002E2A                     l308:
  7470                           
  7471                           ;i2c_driver.c: 152:             PORTCbits.RC1 = 0;
  7472  002E2A  9282               	bcf	130,1,c	;volatile
  7473                           
  7474                           ;i2c_driver.c: 153:             break;
  7475  002E2C  EF2D  F017         	goto	l310
  7476  002E30                     l5302:
  7477  002E30  5009               	movf	heat_element_device_select@relay_number^0,w,c
  7478  002E32  6E07               	movwf	??_heat_element_device_select^0,c
  7479  002E34  6A08               	clrf	(??_heat_element_device_select+1)^0,c
  7480                           
  7481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7482                           ; Switch size 1, requested type "simple"
  7483                           ; Number of cases is 1, Range of values is 0 to 0
  7484                           ; switch strategies available:
  7485                           ; Name         Instructions Cycles
  7486                           ; simple_byte            4     3 (average)
  7487                           ;	Chosen strategy is simple_byte
  7488  002E36  5008               	movf	(??_heat_element_device_select+1)^0,w,c
  7489  002E38  0A00               	xorlw	0	; case 0
  7490  002E3A  B4D8               	btfsc	status,2,c
  7491  002E3C  EF22  F017         	goto	l5964
  7492  002E40  EF2D  F017         	goto	l310
  7493  002E44                     l5964:
  7494                           
  7495                           ; Switch size 1, requested type "simple"
  7496                           ; Number of cases is 2, Range of values is 0 to 1
  7497                           ; switch strategies available:
  7498                           ; Name         Instructions Cycles
  7499                           ; simple_byte            7     4 (average)
  7500                           ;	Chosen strategy is simple_byte
  7501  002E44  5007               	movf	??_heat_element_device_select^0,w,c
  7502  002E46  0A00               	xorlw	0	; case 0
  7503  002E48  B4D8               	btfsc	status,2,c
  7504  002E4A  EF12  F017         	goto	l306
  7505  002E4E  0A01               	xorlw	1	; case 1
  7506  002E50  B4D8               	btfsc	status,2,c
  7507  002E52  EF15  F017         	goto	l308
  7508  002E56  EF2D  F017         	goto	l310
  7509  002E5A                     l310:
  7510  002E5A  0012               	return		;funcret
  7511  002E5C                     __end_of_heat_element_device_select:
  7512                           	opt callstack 0
  7513                           
  7514 ;; *************** function _heat_element_device_deselect *****************
  7515 ;; Defined at:
  7516 ;;		line 167 in file "i2c_driver.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;  relay_number    1    wreg     unsigned char 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;  relay_number    1    8[COMRAM] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  1    wreg      void 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7530 ;;      Params:         0       0       0       0       0       0       0
  7531 ;;      Locals:         1       0       0       0       0       0       0
  7532 ;;      Temps:          2       0       0       0       0       0       0
  7533 ;;      Totals:         3       0       0       0       0       0       0
  7534 ;;Total ram usage:        3 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    1
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		_heat_element_testing
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text37
  7545  002E5C                     __ptext37:
  7546                           	opt callstack 0
  7547  002E5C                     _heat_element_device_deselect:
  7548                           	opt callstack 28
  7549                           
  7550                           ;incstack = 0
  7551                           ;heat_element_device_deselect@relay_number stored from wreg
  7552  002E5C  6E09               	movwf	heat_element_device_deselect@relay_number^0,c
  7553  002E5E                     
  7554                           ;i2c_driver.c: 167: void heat_element_device_deselect(int_u8 relay_number);i2c_driver.c:
      +                           168: {;i2c_driver.c: 169:     switch(relay_number)
  7555  002E5E  EF37  F017         	goto	l5312
  7556  002E62                     l314:
  7557                           
  7558                           ;i2c_driver.c: 172:             PORTCbits.RC0 = 1;
  7559  002E62  8082               	bsf	130,0,c	;volatile
  7560                           
  7561                           ;i2c_driver.c: 173:             break;
  7562  002E64  EF4C  F017         	goto	l318
  7563  002E68                     l316:
  7564                           
  7565                           ;i2c_driver.c: 175:             PORTCbits.RC1 = 1;
  7566  002E68  8282               	bsf	130,1,c	;volatile
  7567                           
  7568                           ;i2c_driver.c: 176:             break;
  7569  002E6A  EF4C  F017         	goto	l318
  7570  002E6E                     l5312:
  7571  002E6E  5009               	movf	heat_element_device_deselect@relay_number^0,w,c
  7572  002E70  6E07               	movwf	??_heat_element_device_deselect^0,c
  7573  002E72  6A08               	clrf	(??_heat_element_device_deselect+1)^0,c
  7574                           
  7575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7576                           ; Switch size 1, requested type "simple"
  7577                           ; Number of cases is 1, Range of values is 0 to 0
  7578                           ; switch strategies available:
  7579                           ; Name         Instructions Cycles
  7580                           ; simple_byte            4     3 (average)
  7581                           ;	Chosen strategy is simple_byte
  7582  002E74  5008               	movf	(??_heat_element_device_deselect+1)^0,w,c
  7583  002E76  0A00               	xorlw	0	; case 0
  7584  002E78  B4D8               	btfsc	status,2,c
  7585  002E7A  EF41  F017         	goto	l5966
  7586  002E7E  EF4C  F017         	goto	l318
  7587  002E82                     l5966:
  7588                           
  7589                           ; Switch size 1, requested type "simple"
  7590                           ; Number of cases is 2, Range of values is 0 to 1
  7591                           ; switch strategies available:
  7592                           ; Name         Instructions Cycles
  7593                           ; simple_byte            7     4 (average)
  7594                           ;	Chosen strategy is simple_byte
  7595  002E82  5007               	movf	??_heat_element_device_deselect^0,w,c
  7596  002E84  0A00               	xorlw	0	; case 0
  7597  002E86  B4D8               	btfsc	status,2,c
  7598  002E88  EF31  F017         	goto	l314
  7599  002E8C  0A01               	xorlw	1	; case 1
  7600  002E8E  B4D8               	btfsc	status,2,c
  7601  002E90  EF34  F017         	goto	l316
  7602  002E94  EF4C  F017         	goto	l318
  7603  002E98                     l318:
  7604  002E98  0012               	return		;funcret
  7605  002E9A                     __end_of_heat_element_device_deselect:
  7606                           	opt callstack 0
  7607                           
  7608 ;; *************** function _adc_update *****************
  7609 ;; Defined at:
  7610 ;;		line 34 in file "adc_driver.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  adc_channel     1    wreg     unsigned char 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;  adc_channel     1    7[COMRAM] unsigned char 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      void 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7624 ;;      Params:         0       0       0       0       0       0       0
  7625 ;;      Locals:         1       0       0       0       0       0       0
  7626 ;;      Temps:          1       0       0       0       0       0       0
  7627 ;;      Totals:         2       0       0       0       0       0       0
  7628 ;;Total ram usage:        2 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:    1
  7631 ;; This function calls:
  7632 ;;		Nothing
  7633 ;; This function is called by:
  7634 ;;		_main
  7635 ;;		_heat_element_testing
  7636 ;;		_i2c_adc_update
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text38
  7641  002FEA                     __ptext38:
  7642                           	opt callstack 0
  7643  002FEA                     _adc_update:
  7644                           	opt callstack 28
  7645                           
  7646                           ;incstack = 0
  7647                           ;adc_update@adc_channel stored from wreg
  7648  002FEA  6E08               	movwf	adc_update@adc_channel^0,c
  7649  002FEC                     
  7650                           ;adc_driver.c: 34: void adc_update(int_u8 adc_channel);adc_driver.c: 35: {;adc_driver.c:
      +                           36:     channel_index = adc_channel;
  7651  002FEC  C008  F0B4         	movff	adc_update@adc_channel,_channel_index
  7652  002FF0                     l32:
  7653  002FF0  B2C2               	btfsc	194,1,c	;volatile
  7654  002FF2  EFFD  F017         	goto	u5171
  7655  002FF6  EFFF  F017         	goto	u5170
  7656  002FFA                     u5171:
  7657  002FFA  EFF8  F017         	goto	l32
  7658  002FFE                     u5170:
  7659  002FFE                     
  7660                           ;adc_driver.c: 38:     ADCON0bits.CHS = adc_channel;
  7661  002FFE  C008  F007         	movff	adc_update@adc_channel,??_adc_update
  7662  003002  4607               	rlncf	??_adc_update^0,f,c
  7663  003004  4607               	rlncf	??_adc_update^0,f,c
  7664  003006  50C2               	movf	194,w,c	;volatile
  7665  003008  1807               	xorwf	??_adc_update^0,w,c
  7666  00300A  0BC3               	andlw	-61
  7667  00300C  1807               	xorwf	??_adc_update^0,w,c
  7668  00300E  6EC2               	movwf	194,c	;volatile
  7669  003010                     
  7670                           ;adc_driver.c: 39:     ADCON0bits.GO = 1;
  7671  003010  82C2               	bsf	194,1,c	;volatile
  7672  003012  0012               	return		;funcret
  7673  003014                     __end_of_adc_update:
  7674                           	opt callstack 0
  7675                           
  7676 ;; *************** function ___xxtofl *****************
  7677 ;; Defined at:
  7678 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  sign            1    wreg     unsigned char 
  7681 ;;  val             4    6[COMRAM] long 
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;  sign            1   14[COMRAM] unsigned char 
  7684 ;;  arg             4   16[COMRAM] unsigned long 
  7685 ;;  exp             1   15[COMRAM] unsigned char 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  4    6[COMRAM] unsigned char 
  7688 ;; Registers used:
  7689 ;;		wreg, status,2, status,0
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7695 ;;      Params:         4       0       0       0       0       0       0
  7696 ;;      Locals:         6       0       0       0       0       0       0
  7697 ;;      Temps:          4       0       0       0       0       0       0
  7698 ;;      Totals:        14       0       0       0       0       0       0
  7699 ;;Total ram usage:       14 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; Hardware stack levels required when called:    1
  7702 ;; This function calls:
  7703 ;;		Nothing
  7704 ;; This function is called by:
  7705 ;;		_heat_element_testing
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           	psect	text39
  7710  0019FE                     __ptext39:
  7711                           	opt callstack 0
  7712  0019FE                     ___xxtofl:
  7713                           	opt callstack 28
  7714                           
  7715                           ;incstack = 0
  7716                           ;___xxtofl@sign stored from wreg
  7717  0019FE  6E0F               	movwf	___xxtofl@sign^0,c
  7718  001A00  500F               	movf	___xxtofl@sign^0,w,c
  7719  001A02  B4D8               	btfsc	status,2,c
  7720  001A04  EF06  F00D         	goto	u5341
  7721  001A08  EF08  F00D         	goto	u5340
  7722  001A0C                     u5341:
  7723  001A0C  EF2A  F00D         	goto	l1462
  7724  001A10                     u5340:
  7725  001A10  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  7726  001A12  EF0F  F00D         	goto	u5350
  7727  001A16  EF0D  F00D         	goto	u5351
  7728  001A1A                     u5351:
  7729  001A1A  EF2A  F00D         	goto	l1462
  7730  001A1E                     u5350:
  7731  001A1E  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  7732  001A22  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  7733  001A26  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  7734  001A2A  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  7735  001A2E  1E0B               	comf	??___xxtofl^0,f,c
  7736  001A30  1E0C               	comf	(??___xxtofl+1)^0,f,c
  7737  001A32  1E0D               	comf	(??___xxtofl+2)^0,f,c
  7738  001A34  1E0E               	comf	(??___xxtofl+3)^0,f,c
  7739  001A36  2A0B               	incf	??___xxtofl^0,f,c
  7740  001A38  0E00               	movlw	0
  7741  001A3A  220C               	addwfc	(??___xxtofl+1)^0,f,c
  7742  001A3C  220D               	addwfc	(??___xxtofl+2)^0,f,c
  7743  001A3E  220E               	addwfc	(??___xxtofl+3)^0,f,c
  7744  001A40  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  7745  001A44  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  7746  001A48  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  7747  001A4C  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  7748  001A50  EF32  F00D         	goto	l5396
  7749  001A54                     l1462:
  7750  001A54  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  7751  001A58  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7752  001A5C  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7753  001A60  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7754  001A64                     l5396:
  7755  001A64  5007               	movf	___xxtofl@val^0,w,c
  7756  001A66  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  7757  001A68  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  7758  001A6A  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  7759  001A6C  A4D8               	btfss	status,2,c
  7760  001A6E  EF3B  F00D         	goto	u5361
  7761  001A72  EF3D  F00D         	goto	u5360
  7762  001A76                     u5361:
  7763  001A76  EF47  F00D         	goto	l5402
  7764  001A7A                     u5360:
  7765  001A7A  0E00               	movlw	0
  7766  001A7C  6E07               	movwf	?___xxtofl^0,c
  7767  001A7E  0E00               	movlw	0
  7768  001A80  6E08               	movwf	(?___xxtofl+1)^0,c
  7769  001A82  0E00               	movlw	0
  7770  001A84  6E09               	movwf	(?___xxtofl+2)^0,c
  7771  001A86  0E00               	movlw	0
  7772  001A88  6E0A               	movwf	(?___xxtofl+3)^0,c
  7773  001A8A  EFD8  F00D         	goto	l1465
  7774  001A8E                     l5402:
  7775  001A8E  0E96               	movlw	150
  7776  001A90  6E10               	movwf	___xxtofl@exp^0,c
  7777  001A92  EF51  F00D         	goto	l5406
  7778  001A96                     l5404:
  7779  001A96  2A10               	incf	___xxtofl@exp^0,f,c
  7780  001A98  90D8               	bcf	status,0,c
  7781  001A9A  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  7782  001A9C  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  7783  001A9E  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  7784  001AA0  3211               	rrcf	___xxtofl@arg^0,f,c
  7785  001AA2                     l5406:
  7786  001AA2  0E00               	movlw	0
  7787  001AA4  1411               	andwf	___xxtofl@arg^0,w,c
  7788  001AA6  6E0B               	movwf	??___xxtofl^0,c
  7789  001AA8  0E00               	movlw	0
  7790  001AAA  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  7791  001AAC  6E0C               	movwf	(??___xxtofl+1)^0,c
  7792  001AAE  0E00               	movlw	0
  7793  001AB0  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  7794  001AB2  6E0D               	movwf	(??___xxtofl+2)^0,c
  7795  001AB4  0EFE               	movlw	254
  7796  001AB6  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  7797  001AB8  6E0E               	movwf	(??___xxtofl+3)^0,c
  7798  001ABA  500B               	movf	??___xxtofl^0,w,c
  7799  001ABC  100C               	iorwf	(??___xxtofl+1)^0,w,c
  7800  001ABE  100D               	iorwf	(??___xxtofl+2)^0,w,c
  7801  001AC0  100E               	iorwf	(??___xxtofl+3)^0,w,c
  7802  001AC2  A4D8               	btfss	status,2,c
  7803  001AC4  EF66  F00D         	goto	u5371
  7804  001AC8  EF68  F00D         	goto	u5370
  7805  001ACC                     u5371:
  7806  001ACC  EF4B  F00D         	goto	l5404
  7807  001AD0                     u5370:
  7808  001AD0  EF76  F00D         	goto	l1469
  7809  001AD4                     l5408:
  7810  001AD4  2A10               	incf	___xxtofl@exp^0,f,c
  7811  001AD6  0E01               	movlw	1
  7812  001AD8  2611               	addwf	___xxtofl@arg^0,f,c
  7813  001ADA  0E00               	movlw	0
  7814  001ADC  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  7815  001ADE  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  7816  001AE0  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  7817  001AE2  90D8               	bcf	status,0,c
  7818  001AE4  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  7819  001AE6  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  7820  001AE8  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  7821  001AEA  3211               	rrcf	___xxtofl@arg^0,f,c
  7822  001AEC                     l1469:
  7823  001AEC  0E00               	movlw	0
  7824  001AEE  1411               	andwf	___xxtofl@arg^0,w,c
  7825  001AF0  6E0B               	movwf	??___xxtofl^0,c
  7826  001AF2  0E00               	movlw	0
  7827  001AF4  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  7828  001AF6  6E0C               	movwf	(??___xxtofl+1)^0,c
  7829  001AF8  0E00               	movlw	0
  7830  001AFA  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  7831  001AFC  6E0D               	movwf	(??___xxtofl+2)^0,c
  7832  001AFE  0EFF               	movlw	255
  7833  001B00  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  7834  001B02  6E0E               	movwf	(??___xxtofl+3)^0,c
  7835  001B04  500B               	movf	??___xxtofl^0,w,c
  7836  001B06  100C               	iorwf	(??___xxtofl+1)^0,w,c
  7837  001B08  100D               	iorwf	(??___xxtofl+2)^0,w,c
  7838  001B0A  100E               	iorwf	(??___xxtofl+3)^0,w,c
  7839  001B0C  A4D8               	btfss	status,2,c
  7840  001B0E  EF8B  F00D         	goto	u5381
  7841  001B12  EF8D  F00D         	goto	u5380
  7842  001B16                     u5381:
  7843  001B16  EF6A  F00D         	goto	l5408
  7844  001B1A                     u5380:
  7845  001B1A  EF95  F00D         	goto	l5416
  7846  001B1E                     l5414:
  7847  001B1E  0610               	decf	___xxtofl@exp^0,f,c
  7848  001B20  90D8               	bcf	status,0,c
  7849  001B22  3611               	rlcf	___xxtofl@arg^0,f,c
  7850  001B24  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  7851  001B26  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  7852  001B28  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  7853  001B2A                     l5416:
  7854  001B2A  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  7855  001B2C  EF9A  F00D         	goto	u5391
  7856  001B30  EF9C  F00D         	goto	u5390
  7857  001B34                     u5391:
  7858  001B34  EFA4  F00D         	goto	l1476
  7859  001B38                     u5390:
  7860  001B38  0E02               	movlw	2
  7861  001B3A  6010               	cpfslt	___xxtofl@exp^0,c
  7862  001B3C  EFA2  F00D         	goto	u5401
  7863  001B40  EFA4  F00D         	goto	u5400
  7864  001B44                     u5401:
  7865  001B44  EF8F  F00D         	goto	l5414
  7866  001B48                     u5400:
  7867  001B48                     l1476:
  7868  001B48  B010               	btfsc	___xxtofl@exp^0,0,c
  7869  001B4A  EFA9  F00D         	goto	u5411
  7870  001B4E  EFAB  F00D         	goto	u5410
  7871  001B52                     u5411:
  7872  001B52  EFAC  F00D         	goto	l5422
  7873  001B56                     u5410:
  7874  001B56  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  7875  001B58                     l5422:
  7876  001B58  90D8               	bcf	status,0,c
  7877  001B5A  3210               	rrcf	___xxtofl@exp^0,f,c
  7878  001B5C  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  7879  001B60  6A0C               	clrf	(??___xxtofl+1)^0,c
  7880  001B62  6A0D               	clrf	(??___xxtofl+2)^0,c
  7881  001B64  6A0E               	clrf	(??___xxtofl+3)^0,c
  7882  001B66  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  7883  001B6A  6A0D               	clrf	(??___xxtofl+2)^0,c
  7884  001B6C  6A0C               	clrf	(??___xxtofl+1)^0,c
  7885  001B6E  6A0B               	clrf	??___xxtofl^0,c
  7886  001B70  500B               	movf	??___xxtofl^0,w,c
  7887  001B72  1211               	iorwf	___xxtofl@arg^0,f,c
  7888  001B74  500C               	movf	(??___xxtofl+1)^0,w,c
  7889  001B76  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  7890  001B78  500D               	movf	(??___xxtofl+2)^0,w,c
  7891  001B7A  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  7892  001B7C  500E               	movf	(??___xxtofl+3)^0,w,c
  7893  001B7E  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  7894  001B80  500F               	movf	___xxtofl@sign^0,w,c
  7895  001B82  B4D8               	btfsc	status,2,c
  7896  001B84  EFC6  F00D         	goto	u5421
  7897  001B88  EFC8  F00D         	goto	u5420
  7898  001B8C                     u5421:
  7899  001B8C  EFD0  F00D         	goto	l5432
  7900  001B90                     u5420:
  7901  001B90  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  7902  001B92  EFCF  F00D         	goto	u5430
  7903  001B96  EFCD  F00D         	goto	u5431
  7904  001B9A                     u5431:
  7905  001B9A  EFD0  F00D         	goto	l5432
  7906  001B9E                     u5430:
  7907  001B9E  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  7908  001BA0                     l5432:
  7909  001BA0  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  7910  001BA4  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  7911  001BA8  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  7912  001BAC  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  7913  001BB0                     l1465:
  7914  001BB0  0012               	return		;funcret
  7915  001BB2                     __end_of___xxtofl:
  7916                           	opt callstack 0
  7917                           
  7918 ;; *************** function ___flge *****************
  7919 ;; Defined at:
  7920 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  ff1             4   20[COMRAM] unsigned char 
  7923 ;;  ff2             4   24[COMRAM] unsigned char 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;		None
  7926 ;; Return value:  Size  Location     Type
  7927 ;;		None               void
  7928 ;; Registers used:
  7929 ;;		wreg, status,2, status,0
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7935 ;;      Params:         8       0       0       0       0       0       0
  7936 ;;      Locals:         0       0       0       0       0       0       0
  7937 ;;      Temps:          4       0       0       0       0       0       0
  7938 ;;      Totals:        12       0       0       0       0       0       0
  7939 ;;Total ram usage:       12 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; Hardware stack levels required when called:    1
  7942 ;; This function calls:
  7943 ;;		Nothing
  7944 ;; This function is called by:
  7945 ;;		_heat_element_testing
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           	psect	text40
  7950  0023D6                     __ptext40:
  7951                           	opt callstack 0
  7952  0023D6                     ___flge:
  7953                           	opt callstack 28
  7954  0023D6  0E00               	movlw	0
  7955  0023D8  1415               	andwf	___flge@ff1^0,w,c
  7956  0023DA  6E1D               	movwf	??___flge^0,c
  7957  0023DC  0E00               	movlw	0
  7958  0023DE  1416               	andwf	(___flge@ff1+1)^0,w,c
  7959  0023E0  6E1E               	movwf	(??___flge+1)^0,c
  7960  0023E2  0E80               	movlw	128
  7961  0023E4  1417               	andwf	(___flge@ff1+2)^0,w,c
  7962  0023E6  6E1F               	movwf	(??___flge+2)^0,c
  7963  0023E8  0E7F               	movlw	127
  7964  0023EA  1418               	andwf	(___flge@ff1+3)^0,w,c
  7965  0023EC  6E20               	movwf	(??___flge+3)^0,c
  7966  0023EE  501D               	movf	??___flge^0,w,c
  7967  0023F0  101E               	iorwf	(??___flge+1)^0,w,c
  7968  0023F2  101F               	iorwf	(??___flge+2)^0,w,c
  7969  0023F4  1020               	iorwf	(??___flge+3)^0,w,c
  7970  0023F6  A4D8               	btfss	status,2,c
  7971  0023F8  EF00  F012         	goto	u5291
  7972  0023FC  EF02  F012         	goto	u5290
  7973  002400                     u5291:
  7974  002400  EF0A  F012         	goto	l5372
  7975  002404                     u5290:
  7976  002404  0E00               	movlw	0
  7977  002406  6E15               	movwf	___flge@ff1^0,c
  7978  002408  0E00               	movlw	0
  7979  00240A  6E16               	movwf	(___flge@ff1+1)^0,c
  7980  00240C  0E00               	movlw	0
  7981  00240E  6E17               	movwf	(___flge@ff1+2)^0,c
  7982  002410  0E00               	movlw	0
  7983  002412  6E18               	movwf	(___flge@ff1+3)^0,c
  7984  002414                     l5372:
  7985  002414  0E00               	movlw	0
  7986  002416  1419               	andwf	___flge@ff2^0,w,c
  7987  002418  6E1D               	movwf	??___flge^0,c
  7988  00241A  0E00               	movlw	0
  7989  00241C  141A               	andwf	(___flge@ff2+1)^0,w,c
  7990  00241E  6E1E               	movwf	(??___flge+1)^0,c
  7991  002420  0E80               	movlw	128
  7992  002422  141B               	andwf	(___flge@ff2+2)^0,w,c
  7993  002424  6E1F               	movwf	(??___flge+2)^0,c
  7994  002426  0E7F               	movlw	127
  7995  002428  141C               	andwf	(___flge@ff2+3)^0,w,c
  7996  00242A  6E20               	movwf	(??___flge+3)^0,c
  7997  00242C  501D               	movf	??___flge^0,w,c
  7998  00242E  101E               	iorwf	(??___flge+1)^0,w,c
  7999  002430  101F               	iorwf	(??___flge+2)^0,w,c
  8000  002432  1020               	iorwf	(??___flge+3)^0,w,c
  8001  002434  A4D8               	btfss	status,2,c
  8002  002436  EF1F  F012         	goto	u5301
  8003  00243A  EF21  F012         	goto	u5300
  8004  00243E                     u5301:
  8005  00243E  EF29  F012         	goto	l5376
  8006  002442                     u5300:
  8007  002442  0E00               	movlw	0
  8008  002444  6E19               	movwf	___flge@ff2^0,c
  8009  002446  0E00               	movlw	0
  8010  002448  6E1A               	movwf	(___flge@ff2+1)^0,c
  8011  00244A  0E00               	movlw	0
  8012  00244C  6E1B               	movwf	(___flge@ff2+2)^0,c
  8013  00244E  0E00               	movlw	0
  8014  002450  6E1C               	movwf	(___flge@ff2+3)^0,c
  8015  002452                     l5376:
  8016  002452  AE18               	btfss	(___flge@ff1+3)^0,7,c
  8017  002454  EF2E  F012         	goto	u5311
  8018  002458  EF30  F012         	goto	u5310
  8019  00245C                     u5311:
  8020  00245C  EF39  F012         	goto	l5380
  8021  002460                     u5310:
  8022  002460  6C15               	negf	___flge@ff1^0,c
  8023  002462  1E16               	comf	(___flge@ff1+1)^0,f,c
  8024  002464  B0D8               	btfsc	status,0,c
  8025  002466  2A16               	incf	(___flge@ff1+1)^0,f,c
  8026  002468  1E17               	comf	(___flge@ff1+2)^0,f,c
  8027  00246A  B0D8               	btfsc	status,0,c
  8028  00246C  2A17               	incf	(___flge@ff1+2)^0,f,c
  8029  00246E  0E80               	movlw	128
  8030  002470  5618               	subfwb	(___flge@ff1+3)^0,f,c
  8031  002472                     l5380:
  8032  002472  AE1C               	btfss	(___flge@ff2+3)^0,7,c
  8033  002474  EF3E  F012         	goto	u5321
  8034  002478  EF40  F012         	goto	u5320
  8035  00247C                     u5321:
  8036  00247C  EF49  F012         	goto	l1072
  8037  002480                     u5320:
  8038  002480  6C19               	negf	___flge@ff2^0,c
  8039  002482  1E1A               	comf	(___flge@ff2+1)^0,f,c
  8040  002484  B0D8               	btfsc	status,0,c
  8041  002486  2A1A               	incf	(___flge@ff2+1)^0,f,c
  8042  002488  1E1B               	comf	(___flge@ff2+2)^0,f,c
  8043  00248A  B0D8               	btfsc	status,0,c
  8044  00248C  2A1B               	incf	(___flge@ff2+2)^0,f,c
  8045  00248E  0E80               	movlw	128
  8046  002490  561C               	subfwb	(___flge@ff2+3)^0,f,c
  8047  002492                     l1072:
  8048  002492  0E00               	movlw	0
  8049  002494  1A15               	xorwf	___flge@ff1^0,f,c
  8050  002496  0E00               	movlw	0
  8051  002498  1A16               	xorwf	(___flge@ff1+1)^0,f,c
  8052  00249A  0E00               	movlw	0
  8053  00249C  1A17               	xorwf	(___flge@ff1+2)^0,f,c
  8054  00249E  0E80               	movlw	128
  8055  0024A0  1A18               	xorwf	(___flge@ff1+3)^0,f,c
  8056  0024A2  0E00               	movlw	0
  8057  0024A4  1A19               	xorwf	___flge@ff2^0,f,c
  8058  0024A6  0E00               	movlw	0
  8059  0024A8  1A1A               	xorwf	(___flge@ff2+1)^0,f,c
  8060  0024AA  0E00               	movlw	0
  8061  0024AC  1A1B               	xorwf	(___flge@ff2+2)^0,f,c
  8062  0024AE  0E80               	movlw	128
  8063  0024B0  1A1C               	xorwf	(___flge@ff2+3)^0,f,c
  8064  0024B2  5019               	movf	___flge@ff2^0,w,c
  8065  0024B4  5C15               	subwf	___flge@ff1^0,w,c
  8066  0024B6  501A               	movf	(___flge@ff2+1)^0,w,c
  8067  0024B8  5816               	subwfb	(___flge@ff1+1)^0,w,c
  8068  0024BA  501B               	movf	(___flge@ff2+2)^0,w,c
  8069  0024BC  5817               	subwfb	(___flge@ff1+2)^0,w,c
  8070  0024BE  501C               	movf	(___flge@ff2+3)^0,w,c
  8071  0024C0  5818               	subwfb	(___flge@ff1+3)^0,w,c
  8072  0024C2  B0D8               	btfsc	status,0,c
  8073  0024C4  EF66  F012         	goto	u5331
  8074  0024C8  EF68  F012         	goto	u5330
  8075  0024CC                     u5331:
  8076  0024CC  EF6B  F012         	goto	l5386
  8077  0024D0                     u5330:
  8078  0024D0  90D8               	bcf	status,0,c
  8079  0024D2  EF6C  F012         	goto	l1077
  8080  0024D6                     l5386:
  8081  0024D6  80D8               	bsf	status,0,c
  8082  0024D8                     l1077:
  8083  0024D8  0012               	return		;funcret
  8084  0024DA                     __end_of___flge:
  8085                           	opt callstack 0
  8086                           
  8087 ;; *************** function _adc_init *****************
  8088 ;; Defined at:
  8089 ;;		line 17 in file "adc_driver.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;		None
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1    wreg      void 
  8096 ;; Registers used:
  8097 ;;		wreg, status,2
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8103 ;;      Params:         0       0       0       0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0
  8106 ;;      Totals:         0       0       0       0       0       0       0
  8107 ;;Total ram usage:        0 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    1
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_main
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text41
  8118  00303A                     __ptext41:
  8119                           	opt callstack 0
  8120  00303A                     _adc_init:
  8121                           	opt callstack 29
  8122  00303A                     
  8123                           ;adc_driver.c: 19:    ADCON1bits.PCFG = 0x0D;
  8124  00303A  50C1               	movf	193,w,c	;volatile
  8125  00303C  0BF0               	andlw	-16
  8126  00303E  090D               	iorlw	13
  8127  003040  6EC1               	movwf	193,c	;volatile
  8128  003042                     
  8129                           ;adc_driver.c: 20:    ADCON2bits.ADFM = 1;
  8130  003042  8EC0               	bsf	192,7,c	;volatile
  8131  003044                     
  8132                           ;adc_driver.c: 21:    ADIF = 0;
  8133  003044  9C9E               	bcf	3998,6,c	;volatile
  8134  003046                     
  8135                           ;adc_driver.c: 22:    ADIE = 1;
  8136  003046  8C9D               	bsf	3997,6,c	;volatile
  8137  003048                     
  8138                           ;adc_driver.c: 23:    ADCON0bits.ADON = 1;
  8139  003048  80C2               	bsf	194,0,c	;volatile
  8140                           
  8141                           ;adc_driver.c: 24:    ADCON2bits.ACQT = 2;
  8142  00304A  50C0               	movf	192,w,c	;volatile
  8143  00304C  0BC7               	andlw	-57
  8144  00304E  0910               	iorlw	16
  8145  003050  6EC0               	movwf	192,c	;volatile
  8146                           
  8147                           ;adc_driver.c: 25:    ADCON2bits.ADCS = 2;
  8148  003052  50C0               	movf	192,w,c	;volatile
  8149  003054  0BF8               	andlw	-8
  8150  003056  0902               	iorlw	2
  8151  003058  6EC0               	movwf	192,c	;volatile
  8152  00305A  0012               	return		;funcret
  8153  00305C                     __end_of_adc_init:
  8154                           	opt callstack 0
  8155                           
  8156 ;; *************** function _interrupt_isr *****************
  8157 ;; Defined at:
  8158 ;;		line 417 in file "i2c_driver.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8172 ;;      Params:         0       0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0
  8174 ;;      Temps:          6       0       0       0       0       0       0
  8175 ;;      Totals:         6       0       0       0       0       0       0
  8176 ;;Total ram usage:        6 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; This function calls:
  8179 ;;		Nothing
  8180 ;; This function is called by:
  8181 ;;		Interrupt level 2
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           	psect	intcode
  8186  000008                     __pintcode:
  8187                           	opt callstack 0
  8188  000008                     _interrupt_isr:
  8189                           	opt callstack 22
  8190                           
  8191                           ;incstack = 0
  8192  000008  8279               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8193  00000A  EDD2  F010         	call	int_func,f	;refresh shadow registers
  8194                           
  8195                           	psect	intcode_body
  8196  0021A4                     __pintcode_body:
  8197                           	opt callstack 22
  8198  0021A4                     int_func:
  8199                           	opt callstack 22
  8200  0021A4  0006               	pop		; remove dummy address from shadow register refresh
  8201  0021A6  CFD9 F003          	movff	fsr2l,??_interrupt_isr+2
  8202  0021AA  CFDA F004          	movff	fsr2h,??_interrupt_isr+3
  8203  0021AE  CFF3 F005          	movff	prodl,??_interrupt_isr+4
  8204  0021B2  CFF4 F006          	movff	prodh,??_interrupt_isr+5
  8205  0021B6                     
  8206                           ;i2c_driver.c: 420:     if(SSPIF)
  8207  0021B6  A69E               	btfss	3998,3,c	;volatile
  8208  0021B8  EFE0  F010         	goto	i2u373_41
  8209  0021BC  EFE2  F010         	goto	i2u373_40
  8210  0021C0                     i2u373_41:
  8211  0021C0  EFE6  F010         	goto	i2l4256
  8212  0021C4                     i2u373_40:
  8213  0021C4                     
  8214                           ;i2c_driver.c: 421:     {;i2c_driver.c: 422:        SSPIF = 0;
  8215  0021C4  969E               	bcf	3998,3,c	;volatile
  8216  0021C6                     
  8217                           ;i2c_driver.c: 423:        i2c_pkt.ack=1;
  8218  0021C6  0E01               	movlw	1
  8219  0021C8  0100               	movlb	0	; () banked
  8220  0021CA  6FB8               	movwf	(_i2c_pkt+2)& (0+255),b
  8221  0021CC                     i2l4256:
  8222                           
  8223                           ;i2c_driver.c: 425:     if(RCIF)
  8224  0021CC  AA9E               	btfss	3998,5,c	;volatile
  8225  0021CE  EFEB  F010         	goto	i2u374_41
  8226  0021D2  EFED  F010         	goto	i2u374_40
  8227  0021D6                     i2u374_41:
  8228  0021D6  EFFC  F010         	goto	i2l4266
  8229  0021DA                     i2u374_40:
  8230  0021DA                     
  8231                           ;i2c_driver.c: 426:     {;i2c_driver.c: 427:        RCIF = 0;
  8232  0021DA  9A9E               	bcf	3998,5,c	;volatile
  8233  0021DC                     
  8234                           ;i2c_driver.c: 428:        rx_msg_buf[rx_index].rxmsg=RCREG;
  8235  0021DC  5077               	movf	_rx_index^0,w,c
  8236  0021DE  0D02               	mullw	2
  8237  0021E0  0E00               	movlw	low _rx_msg_buf
  8238  0021E2  24F3               	addwf	243,w,c
  8239  0021E4  6ED9               	movwf	fsr2l,c
  8240  0021E6  0E02               	movlw	high _rx_msg_buf
  8241  0021E8  20F4               	addwfc	prodh,w,c
  8242  0021EA  6EDA               	movwf	fsr2h,c
  8243  0021EC  CFAE FFDF          	movff	4014,indf2	;volatile
  8244  0021F0                     
  8245                           ;i2c_driver.c: 429:        received = 1;
  8246  0021F0  0E01               	movlw	1
  8247  0021F2  0100               	movlb	0	; () banked
  8248  0021F4  6FB2               	movwf	_received& (0+255),b
  8249  0021F6                     
  8250                           ; BSR set to: 0
  8251                           ;i2c_driver.c: 430:        rx_index++;
  8252  0021F6  2A77               	incf	_rx_index^0,f,c
  8253  0021F8                     i2l4266:
  8254                           
  8255                           ;i2c_driver.c: 432:     if(TXIF&TXIE)
  8256  0021F8  0E01               	movlw	1
  8257  0021FA  A89E               	btfss	3998,4,c	;volatile
  8258  0021FC  0E00               	movlw	0
  8259  0021FE  A89D               	btfss	3997,4,c	;volatile
  8260  002200  0E00               	movlw	0
  8261  002202  A0E8               	btfss	wreg,0,c
  8262  002204  EF06  F011         	goto	i2u375_41
  8263  002208  EF08  F011         	goto	i2u375_40
  8264  00220C                     i2u375_41:
  8265  00220C  EF0C  F011         	goto	i2l409
  8266  002210                     i2u375_40:
  8267  002210                     
  8268                           ;i2c_driver.c: 433:     {;i2c_driver.c: 434:         TXIF=0;
  8269  002210  989E               	bcf	3998,4,c	;volatile
  8270                           
  8271                           ;i2c_driver.c: 435:         TXIE=0;
  8272  002212  989D               	bcf	3997,4,c	;volatile
  8273                           
  8274                           ;i2c_driver.c: 436:         TXREG=transmision_msg;
  8275  002214  C078  FFAD         	movff	_transmision_msg,4013	;volatile
  8276  002218                     i2l409:
  8277                           
  8278                           ;i2c_driver.c: 438:     if(RBIF)
  8279  002218  A0F2               	btfss	4082,0,c	;volatile
  8280  00221A  EF11  F011         	goto	i2u376_41
  8281  00221E  EF13  F011         	goto	i2u376_40
  8282  002222                     i2u376_41:
  8283  002222  EF2D  F011         	goto	i2l4278
  8284  002226                     i2u376_40:
  8285  002226                     
  8286                           ;i2c_driver.c: 439:     {;i2c_driver.c: 440:        flag = 1;
  8287  002226  0E01               	movlw	1
  8288  002228  0100               	movlb	0	; () banked
  8289  00222A  6FAD               	movwf	_flag& (0+255),b
  8290  00222C                     
  8291                           ; BSR set to: 0
  8292                           ;i2c_driver.c: 441:        if((0XF0&~PORTB)>>4)
  8293  00222C  5081               	movf	129,w,c	;volatile
  8294  00222E  0AFF               	xorlw	255
  8295  002230  6E01               	movwf	??_interrupt_isr^0,c
  8296  002232  3A01               	swapf	??_interrupt_isr^0,f,c
  8297  002234  0E0F               	movlw	15
  8298  002236  1601               	andwf	??_interrupt_isr^0,f,c
  8299  002238  0E0F               	movlw	15
  8300  00223A  1601               	andwf	??_interrupt_isr^0,f,c
  8301  00223C  B4D8               	btfsc	status,2,c
  8302  00223E  EF23  F011         	goto	i2u377_41
  8303  002242  EF25  F011         	goto	i2u377_40
  8304  002246                     i2u377_41:
  8305  002246  EF2C  F011         	goto	i2l4276
  8306  00224A                     i2u377_40:
  8307  00224A                     
  8308                           ; BSR set to: 0
  8309                           ;i2c_driver.c: 442:        key_nav = ((0xF0&~PORTB)>>4);
  8310  00224A  5081               	movf	129,w,c	;volatile
  8311  00224C  0AFF               	xorlw	255
  8312  00224E  6E01               	movwf	??_interrupt_isr^0,c
  8313  002250  3801               	swapf	??_interrupt_isr^0,w,c
  8314  002252  0B0F               	andlw	15
  8315  002254  0B0F               	andlw	15
  8316  002256  6FAC               	movwf	_key_nav& (0+255),b
  8317  002258                     i2l4276:
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;i2c_driver.c: 443:        RBIF = 0;
  8321  002258  90F2               	bcf	4082,0,c	;volatile
  8322  00225A                     i2l4278:
  8323                           
  8324                           ;i2c_driver.c: 445:     if(TMR1IF)
  8325  00225A  A09E               	btfss	3998,0,c	;volatile
  8326  00225C  EF32  F011         	goto	i2u378_41
  8327  002260  EF34  F011         	goto	i2u378_40
  8328  002264                     i2u378_41:
  8329  002264  EF40  F011         	goto	i2l4288
  8330  002268                     i2u378_40:
  8331  002268                     
  8332                           ;i2c_driver.c: 446:     {;i2c_driver.c: 447:         TMR1IF=0;
  8333  002268  909E               	bcf	3998,0,c	;volatile
  8334  00226A                     
  8335                           ;i2c_driver.c: 448:         counter++;
  8336  00226A  0E01               	movlw	1
  8337  00226C  0100               	movlb	0	; () banked
  8338  00226E  2798               	addwf	_counter& (0+255),f,b
  8339  002270  0E00               	movlw	0
  8340  002272  2399               	addwfc	(_counter+1)& (0+255),f,b
  8341  002274  239A               	addwfc	(_counter+2)& (0+255),f,b
  8342  002276  239B               	addwfc	(_counter+3)& (0+255),f,b
  8343  002278                     
  8344                           ; BSR set to: 0
  8345                           ;i2c_driver.c: 449:         TMR1H = (timer_value & 0xff00)>>8;
  8346  002278  C09D  FFCF         	movff	_timer_value+1,4047	;volatile
  8347  00227C                     
  8348                           ; BSR set to: 0
  8349                           ;i2c_driver.c: 450:         TMR1L = timer_value & 0x00ff;
  8350  00227C  C09C  FFCE         	movff	_timer_value,4046	;volatile
  8351  002280                     i2l4288:
  8352                           
  8353                           ;i2c_driver.c: 452:     if(ADIF)
  8354  002280  AC9E               	btfss	3998,6,c	;volatile
  8355  002282  EF45  F011         	goto	i2u379_41
  8356  002286  EF47  F011         	goto	i2u379_40
  8357  00228A                     i2u379_41:
  8358  00228A  EF5F  F011         	goto	i2l414
  8359  00228E                     i2u379_40:
  8360  00228E                     
  8361                           ;i2c_driver.c: 453:     {;i2c_driver.c: 454:         ADIF = 0;
  8362  00228E  9C9E               	bcf	3998,6,c	;volatile
  8363  002290                     
  8364                           ;i2c_driver.c: 455:         adc_value[channel_index] = (ADRESH )<<8 | ADRESL;
  8365  002290  50C3               	movf	195,w,c	;volatile
  8366  002292  CFC4 F001          	movff	4036,??_interrupt_isr	;volatile
  8367  002296  6A02               	clrf	(??_interrupt_isr+1)^0,c
  8368  002298  C001  F002         	movff	??_interrupt_isr,??_interrupt_isr+1
  8369  00229C  6A01               	clrf	??_interrupt_isr^0,c
  8370  00229E  1201               	iorwf	??_interrupt_isr^0,f,c
  8371  0022A0  0E00               	movlw	0
  8372  0022A2  1202               	iorwf	(??_interrupt_isr+1)^0,f,c
  8373  0022A4  0100               	movlb	0	; () banked
  8374  0022A6  51B4               	movf	_channel_index& (0+255),w,b
  8375  0022A8  0D02               	mullw	2
  8376  0022AA  0E00               	movlw	low _adc_value
  8377  0022AC  24F3               	addwf	243,w,c
  8378  0022AE  6ED9               	movwf	fsr2l,c
  8379  0022B0  0E01               	movlw	high _adc_value
  8380  0022B2  20F4               	addwfc	prodh,w,c
  8381  0022B4  6EDA               	movwf	fsr2h,c
  8382  0022B6  C001  FFDE         	movff	??_interrupt_isr,postinc2
  8383  0022BA  C002  FFDD         	movff	??_interrupt_isr+1,postdec2
  8384  0022BE                     i2l414:
  8385  0022BE  C006  FFF4         	movff	??_interrupt_isr+5,prodh
  8386  0022C2  C005  FFF3         	movff	??_interrupt_isr+4,prodl
  8387  0022C6  C004  FFDA         	movff	??_interrupt_isr+3,fsr2h
  8388  0022CA  C003  FFD9         	movff	??_interrupt_isr+2,fsr2l
  8389  0022CE  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8390  0022D0  0011               	retfie		f
  8391  0022D2                     __end_of_interrupt_isr:
  8392                           	opt callstack 0
  8393                           
  8394                           	psect	rparam
  8395  0000                     
  8396                           	psect	temp
  8397  000079                     btemp:
  8398                           	opt callstack 0
  8399  000079                     	ds	1
  8400  0000                     int$flags	set	btemp
  8401  0000                     wtemp8	set	btemp+1
  8402  0000                     ttemp5	set	btemp+1
  8403  0000                     ttemp6	set	btemp+4
  8404  0000                     ttemp7	set	btemp+8
  8405                           tosu	equ	0xFFF
  8406                           tosh	equ	0xFFE
  8407                           tosl	equ	0xFFD
  8408                           stkptr	equ	0xFFC
  8409                           pclatu	equ	0xFFB
  8410                           pclath	equ	0xFFA
  8411                           pcl	equ	0xFF9
  8412                           tblptru	equ	0xFF8
  8413                           tblptrh	equ	0xFF7
  8414                           tblptrl	equ	0xFF6
  8415                           tablat	equ	0xFF5
  8416                           prodh	equ	0xFF4
  8417                           prodl	equ	0xFF3
  8418                           indf0	equ	0xFEF
  8419                           postinc0	equ	0xFEE
  8420                           postdec0	equ	0xFED
  8421                           preinc0	equ	0xFEC
  8422                           plusw0	equ	0xFEB
  8423                           fsr0h	equ	0xFEA
  8424                           fsr0l	equ	0xFE9
  8425                           wreg	equ	0xFE8
  8426                           indf1	equ	0xFE7
  8427                           postinc1	equ	0xFE6
  8428                           postdec1	equ	0xFE5
  8429                           preinc1	equ	0xFE4
  8430                           plusw1	equ	0xFE3
  8431                           fsr1h	equ	0xFE2
  8432                           fsr1l	equ	0xFE1
  8433                           bsr	equ	0xFE0
  8434                           indf2	equ	0xFDF
  8435                           postinc2	equ	0xFDE
  8436                           postdec2	equ	0xFDD
  8437                           preinc2	equ	0xFDC
  8438                           plusw2	equ	0xFDB
  8439                           fsr2h	equ	0xFDA
  8440                           fsr2l	equ	0xFD9
  8441                           status	equ	0xFD8


Data Sizes:
    Strings     214
    Constant    0
    Data        55
    BSS         824
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    113     120
    BANK0           128     36     111
    BANK1           256     21     240
    BANK2           256      0     150
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    timer	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[3]), STR_25(CODE[3]), 
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[3]), STR_25(CODE[3]), 
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[13]), STR_15(CODE[13]), 
		 -> STR_14(CODE[15]), STR_13(CODE[15]), STR_12(CODE[11]), STR_11(CODE[12]), 
		 -> STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[23]), STR_3(CODE[24]), 
		 -> STR_2(CODE[9]), STR_1(CODE[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[13]), STR_15(CODE[13]), 
		 -> STR_14(CODE[15]), STR_13(CODE[15]), STR_12(CODE[11]), STR_11(CODE[12]), 
		 -> STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[23]), STR_3(CODE[24]), 
		 -> STR_2(CODE[9]), STR_1(CODE[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[13]), STR_15(CODE[13]), 
		 -> STR_14(CODE[15]), STR_13(CODE[15]), STR_12(CODE[11]), STR_11(CODE[12]), 
		 -> STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[23]), STR_3(CODE[24]), 
		 -> STR_2(CODE[9]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> reply(BANK1[16]), lcd_msg(BANK1[16]), lcd_msg1(BANK1[16]), main@lcd_test(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> reply(BANK1[16]), lcd_msg(BANK1[16]), lcd_msg1(BANK1[16]), main@lcd_test(BANK1[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1537_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> reply(BANK1[16]), lcd_msg(BANK1[16]), lcd_msg1(BANK1[16]), main@lcd_test(BANK1[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> reply(BANK1[16]), lcd_msg(BANK1[16]), lcd_msg1(BANK1[16]), main@lcd_test(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    memset@dest	PTR void  size(2) Largest target is 2
		 -> heat_elmnt_short(BANK0[2]), heat_elmnt_flag(BANK0[2]), 

    memset@s	PTR unsigned char  size(2) Largest target is 2
		 -> heat_elmnt_short(BANK0[2]), heat_elmnt_flag(BANK0[2]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[13]), STR_15(CODE[13]), 
		 -> STR_14(CODE[15]), STR_13(CODE[15]), STR_12(CODE[11]), STR_11(CODE[12]), 
		 -> STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[23]), STR_3(CODE[24]), 
		 -> STR_2(CODE[9]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[13]), STR_15(CODE[13]), 
		 -> STR_14(CODE[15]), STR_13(CODE[15]), STR_12(CODE[11]), STR_11(CODE[12]), 
		 -> STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[23]), STR_3(CODE[24]), 
		 -> STR_2(CODE[9]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[13]), STR_15(CODE[13]), 
		 -> STR_14(CODE[15]), STR_13(CODE[15]), STR_12(CODE[11]), STR_11(CODE[12]), 
		 -> STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[23]), STR_3(CODE[24]), 
		 -> STR_2(CODE[9]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    uart_lcd_update@data	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_msg(BANK1[16]), lcd_msg1(BANK1[16]), main@lcd_test(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 2
		 -> heat_elmnt_short(BANK0[2]), heat_elmnt_flag(BANK0[2]), 

    lcd_ptr	PTR unsigned char [6] size(2) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), hour(BANK0[2]), 
		 -> min(BANK0[2]), sec(BANK0[2]), 

    timer_ptr	PTR unsigned char [7] size(2) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), day(BANK0[1]), 
		 -> hour(BANK0[2]), min(BANK0[2]), sec(BANK0[2]), 


Critical Paths under _main in COMRAM

    _uart_lcd_update->_lcd_data
    _timer_init->___lldiv
    ___lldiv->___lmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _lcd_init->_lcd_cmnt
    _heat_element_testing->___flge
    ___flge->___xxtofl

Critical Paths under _interrupt_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _interrupt_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   37130
                                             34 BANK0      2     2      0
                                              0 BANK1     21    21      0
                           _adc_init
                         _adc_update
               _heat_element_testing
           _heat_elmnt_result_update
                           _lcd_cmnt
                           _lcd_init
                            _sprintf
                         _timer_init
                    _uart_lcd_update
 ---------------------------------------------------------------------------------
 (1) _uart_lcd_update                                      8     5      3    1601
                                              8 COMRAM     8     5      3
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             2     2      0      31
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _timer_init                                           4     0      4    1243
                                             31 COMRAM     4     0      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     456
                                              6 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     601
                                             18 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    10     18   29911
                                              6 BANK0     28    10     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   26329
                                            111 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           56    50      6   25772
                                             72 COMRAM    39    33      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    6257
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             12 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5549
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              6 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              6 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6    1675
                                              6 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6403
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2565
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1462
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      31
                                              8 COMRAM     2     2      0
                           _lcd_cmnt
 ---------------------------------------------------------------------------------
 (2) _lcd_cmnt                                             2     2      0      31
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _heat_elmnt_result_update                             4     4      0     192
                                              6 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _heat_element_testing                                34    34      0    3750
                                             32 COMRAM    32    32      0
                             ___flge
                           ___xxtofl
                         _adc_update
       _heat_element_device_deselect
         _heat_element_device_select
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1557
                                              6 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _heat_element_device_select                           3     3      0      31
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _heat_element_device_deselect                         3     3      0      31
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _adc_update                                           2     2      0      62
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              6 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     806
                                             20 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _interrupt_isr                                        6     6      0       0
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _adc_update
   _heat_element_testing
     ___flge
       ___xxtofl (ARG)
     ___xxtofl
     _adc_update
     _heat_element_device_deselect
     _heat_element_device_select
     _memset
   _heat_elmnt_result_update
   _lcd_cmnt
   _lcd_init
     _lcd_cmnt
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower
   _timer_init
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _uart_lcd_update
     _lcd_data

 _interrupt_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     1AC      17       27.9%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      96       9       58.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     15      F0       7       93.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     24      6F       5       86.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     71      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26D      15        0.0%
DATA                 0      0     419       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 08 19:13:02 2020

                            _update_count 00AB                              lcd_data@data 0008  
                   __end_of_interrupt_isr 22D2                                        l32 2FF0  
                                      l35 3012                                        l29 305A  
                     ___wmul@multiplicand 0009                               __CFG_BORV$3 000000  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_OSC$HS 000000                                       l310 2E5A  
                                     l302 1090                                       l400 2346  
                                     l401 23C4                                       l314 2E62  
                                     l306 2E24                                       l402 23D4  
                                     l331 2728                                       l316 2E68  
                                     l308 2E2A                                       l333 272E  
                                     l325 26D0                                       l318 2E98  
                                     l335 2780                                       l327 26D6  
                                     l503 2D98                                       l704 1130  
                                     l706 1138                                       l491 2B82  
                                     l731 1682                                       l803 2C46  
                                     l724 136E                                       l804 2C4E  
                                     l494 3092                                       l807 3038  
                                     l744 13A6                                       l921 1EC8  
                                     l729 167A                                       l753 1444  
                                     l841 2A80                                       l497 3076  
                                     l746 13AE                                       l834 2A70  
                                     l818 2BDC                                       l739 1842  
                                     l819 2BEC                                       l693 2960  
                                     l934 21A2                                       l767 15E0  
                                     l696 29A2                                       l769 1642  
                                     l698 29DC                                       l786 0D82  
                                     _GIE 007F97                              __CFG_CPB$OFF 000000  
                                     _PEN 007E2A                              __CFG_CPD$OFF 000000  
                                     _SEN 007E28                                       _RX9 007D5E  
                                     _TX9 007D66                                       _abs 2DDE  
                                     _day 00C9                                       _inc 0076  
                                     _pad 291C                                       _min 00C1  
                                     _sec 00BF                                       prod 000FF3  
                                     wreg 000FE8                              lcd_cmnt@cmnt 0008  
               heat_elmnt_result_update@i 0009                              __CFG_LVP$OFF 000000  
                            __CFG_WDT$OFF 000000                                      ?_abs 0019  
                                    l1072 2492                                      l1252 25C8  
                                    l1077 24D8                                      l1245 25A8  
                                    l1262 2850                                      l1255 2830  
                                    l1513 1D38                                      l1602 2CA4  
                                    l1516 1D40                                      l1525 2F7C  
                                    l1533 2D50                                      l1613 2F0C  
                                    l1462 1A54                                      l1519 2ED4  
                                    l1607 2CAC                                      l5000 17F2  
                                    l1465 1BB0                                      l1546 203E  
                                    l1482 2E14                                      l5002 180C  
                                    l5010 137E                                      l1539 2F44  
                                    l1476 1B48                                      l1564 291A  
                                    l1572 2DDC                                      l5004 181A  
                                    l5020 13EC                                      l5012 1380  
                                    l1469 1AEC                                      l1485 2E1C  
                                    l5110 1D1C                                      l5102 1CBA  
                                    l1582 3094                                      l5030 1428  
                                    l5022 13F4                                      l5014 139A  
                                    l1592 26A6                                      l5032 1438  
                                    l5024 13FE                                      l5016 13C4  
                                    l5008 1370                                      l5200 0B32  
                                    l5106 1CF8                                      l5130 2658  
                                    l5122 2600                                      l5050 1500  
                                    l5042 14C4                                      l5026 1404  
                                    l5018 13CC                                      l5202 0B56  
                                    l1579 2CFE                                      l5108 1D0A  
                                    l1588 2FE8                                      l5132 2682  
                                    l5124 260E                                      l5116 25CA  
                                    l5060 15B8                                      l5052 1506  
                                    l5044 14D6                                      l5036 1478  
                                    l5028 140C                                      l5220 0C94  
                                    l5204 0B6C                                      l5212 0BF2  
                                    l5140 070A                                      l5302 2E30  
                                    l5126 262A                                      l5118 25F4  
                                    l5070 161A                                      l5062 15D2  
                                    l5038 148A                                      l5046 14EA  
                                    l5054 1564                                      l5230 0D12  
                                    l5214 0C28                                      l5206 0B7A  
                                    l5150 0788                                      l5142 071C  
                                    l5312 2E6E                                      l5080 1BCE  
                                    l5128 2646                                      l5064 15EE  
                                    l5056 1580                                      l5048 14FA  
                                    l5232 0D26                                      l5216 0C5E  
                                    l5208 0BB6                                      l5160 080A  
                                    l5152 0796                                      l5144 0720  
                                    l5136 06D8                                      l5320 3062  
                                    l5410 1AD6                                      l5402 1A8E  
                                    l5250 2FEC                                      l5090 1C2A  
                                    l5082 1BEA                                      l5074 1BB2  
                                    l5066 15F4                                      l5058 159E  
                                    l5218 0C84                                      l5226 0CE0  
                                    l5154 07B6                                      l5162 081C  
                                    l5146 0744                                      l5138 06FC  
                                    l5242 0D4C                                      l5330 2BF6  
                                    l5322 3064                                      l5420 1B56  
                                    l5412 1AE2                                      l5404 1A96  
                                    l5252 2FFE                                      l5308 2E5E  
                                    l5260 3080                                      l5092 1C40  
                                    l5084 1C20                                      l5076 1BC6  
                                    l4700 28D4                                      l5068 1604  
                                    l5244 0D70                                      l5228 0D04  
                                    l5236 0D32                                      l5172 08E4  
                                    l5164 0840                                      l5156 07C4  
                                    l5148 077A                                      l5332 2C04  
                                    l5340 2BA2                                      l5324 3066  
                                    l5430 1B9E                                      l5422 1B58  
                                    l5414 1B1E                                      l5406 1AA2  
                                    l5254 3010                                      l5270 1EE8  
                                    l5510 0E46                                      l5502 0DDC  
                                    l5262 3082                                      l5094 1C48  
                                    l5086 1C24                                      l5078 1BCA  
                                    l4710 2DBC                                      l5238 0D40  
                                    l5190 0A7C                                      l5182 09D6  
                                    l5174 091A                                      l5166 0864  
                                    l5334 2C2A                                      l5350 2A04  
                                    l5342 2BB2                                      l5326 3074  
                                    l5318 305E                                      ?_pad 0017  
                                    l5440 3044                                      l5432 1BA0  
                                    l5424 1B5C                                      l5416 1B2A  
                                    l5408 1AD4                                      l5272 1EF4  
                                    l5520 0F20                                      l5512 0E62  
                                    l5504 0DE2                                      l5264 3090  
                                    l5256 307A                                      l5096 1C50  
                                    l4800 1DDC                                      l4704 2D9A  
                                    l4712 2FB4                                      l5192 0AB2  
                                    l5184 09FA                                      l5176 0950  
                                    l5168 08AC                                      l5328 2BEE  
                                    l5360 2A4E                                      l5352 2A0C  
                                    l5344 2BBC                                      l5336 2B84  
                                    l5600 186E                                      l5442 3046  
                                    l5370 2404                                      l5426 1B80  
                                    l5418 1B38                                      l5290 2016  
                                    l5282 1F9C                                      l5266 1ECA  
                                    l5530 1064                                      l5522 0F84  
                                    l5514 0E7C                                      l5506 0E2C  
                                    l5258 307E                                      l5450 2B18  
                                    l5098 1C84                                      l4810 1E5E  
                                    l4802 1DF0                                      l4706 2DA6  
                                    l4714 2FC0                                      l4730 293E  
                                    l4722 2ED6                                      l5186 0A44  
                                    l5362 2A5E                                      l5354 2A18  
                                    l5346 29DE                                      l5338 2B94  
                                    l5610 1884                                      l5602 1872  
                                    l5444 3048                                      l5436 303A  
                                    l5380 2472                                      l5372 2414  
                                    l5428 1B90                                      l5292 2022  
                                    l5284 1FC8                                      l5276 1F2A  
                                    l5532 106A                                      l5524 0FC8  
                                    l5516 0EC0                                      l5508 0E40  
                                    l5460 2B66                                      l5452 2B2E  
                                    l4900 2D04                                      l4820 1EA8  
                                    l4812 1E60                                      l4804 1DFE  
                                    l4708 2DB8                                      l4716 2FC4  
                                    l4740 2984                                      l4732 294C  
                                    l5364 2A60                                      l5356 2A26  
                                    l5348 29EE                                      l5620 18B6  
                                    l5612 1888                                      l5604 1876  
                                    l5438 3042                                      l5382 2480  
                                    l5374 2442                                      l5390 1A00  
                                    l5294 2028                                      l5278 1F82  
                                    l5534 106E                                      l5526 1018  
                                    l5518 0F04                                      l5550 26DC  
                                    l5462 2B6C                                      l5454 2B34  
                                    l5446 2B06                                      l4902 2D18  
                                    l4814 1E72                                      l4806 1E10  
                                    l4830 2072                                      l4750 2DF8  
                                    l4718 2FDC                                      l4742 29B0  
                                    l4734 2958                                      l4726 291C  
                                    l4910 1092                                      l5198 0B0E  
                                    l5366 2A6A                                      l5358 2A30  
                                    l5470 2334                                      l5630 192A  
                                    l5622 18BA                                      l5614 189C  
                                    l5606 187C                                      l5384 24D0  
                                    l5376 2452                                      l5368 23D6  
                                    l5392 1A10                                      l5296 202C  
                                    l5288 1FE2                                      l5536 108A  
                                    l5528 1026                                      l5560 2760  
                                    l5552 2708                                      l5544 26B0  
                                    l5456 2B4A                                      l5448 2B12  
                                    l4904 2D46                                      l4808 1E3E  
                                    l4816 1E78                                      l4840 20CA  
                                    l4832 2076                                      l4824 2040  
                                    l4744 29C4                                      l4736 296C  
                                    l4728 292A                                      l4920 110A  
                                    l4912 10B2                                      l4752 2F0E  
                                    l4760 2C50                                      l5472 234A  
                                    l5464 22D2                                      l5640 194C  
                                    l5632 193A                                      l5624 18E6  
                                    l5616 18A0                                      l5608 1880  
                                    l5386 24D6                                      l5378 2460  
                                    l5394 1A1E                                      l5298 2E20  
                                    l5490 0D84                                      l5562 2764  
                                    l5538 26A8                                      l5458 2B50  
                                    l4770 2F46                                      l4906 2D4A  
                                    l4818 1E88                                      l4850 214C  
                                    l4842 20DE                                      l4834 2084  
                                    l4826 2044                                      l4690 2852  
                                    l4738 2980                                      l4930 1166  
                                    l4922 1124                                      l4914 10DA  
                                    l5474 23AC                                      l5466 22EC  
                                    l5482 2D52                                      l5650 199A  
                                    l5642 1952                                      l5634 1946  
                                    l5626 18EC                                      l5618 18A6  
                                    l5396 1A64                                      l5492 0D9C  
                                    l4780 1D42                                      l4844 20EC  
                                    l4852 2152                                      l4836 20A4  
                                    l4828 2052                                      l4748 2DDE  
                                    l4692 2864                                      l4940 1206  
                                    l4932 116E                                      l4924 1140  
                                    l4916 10FA                                      l4860 24DA  
                                    l4756 2E9A                                      l4764 2C86  
                                    l5580 2CEC                                      l5572 2CAE  
                                    l5476 23C0                                      l5468 2320  
                                    l5484 2D5E                                      l5652 19B8  
                                    l5644 197E                                      l5628 191A  
                                    l5398 1A7A                                      l5494 0DB8  
                                    l5558 2734                                      l4774 3014  
                                    l4790 1D86                                      l4782 1D46  
                                    l4854 2162                                      l4846 211A  
                                    l4838 20C2                                      l4694 2876  
                                    l4950 12C2                                      l4942 120C  
                                    l4934 1178                                      l4926 1152  
                                    l4918 1108                                      l4870 252E  
                                    l4862 24E6                                      l4766 2C98  
                                    l5574 2CC0                                      l5478 23C8  
                                    l5486 2D70                                      l5654 19C8  
                                    l5646 198E                                      l5590 185A  
                                    _ADIE 007CEE                                      l5496 0DD4  
                                    l4776 3030                                      l4792 1DA6  
                                    l4784 1D54                                      l4856 2182  
                                    l4848 213A                                      l4696 2880  
                                    l4960 1310                                      l4952 12DC  
                                    l4936 117E                                      l4944 1270  
                                    l4928 1160                                      l4880 25A2  
                                    l4872 2540                                      l4864 2504  
                                    l5576 2CC8                                      l5488 2D74  
                                    l5656 19E2                                      l5648 1994  
                                    l5592 185E                                      l5584 1844  
                                    _ADIF 007CF6                                      l4794 1DAA  
                                    l4786 1D74                                      l4698 289E  
                                    l4962 1322                                      l4946 128A  
                                    l4954 12EA                                      l4938 1200  
                                    l4874 256E                                      l4866 250C  
                                    l4890 27CA                                      l4882 2782  
                                    l5578 2CD0                                      l5658 19E6  
                                    l5594 1862                                      l5586 1856  
                                    l4796 1DB6                                      l4788 1D78  
                                    l4964 132E                                      l4956 12FC  
                                    l4948 12A8                                      l4876 258E  
                                    l4868 2520                                      l4892 27F8  
                                    l4884 27A0                                      l4980 16AA  
                                    l4972 1644                                      l5596 1866  
                                    l5588 1856                                      l4798 1DD4  
                                    l4966 1336                                      l4958 130A  
                                    l4878 2590                                      l4894 2818  
                                    l4886 27A8                                      l4990 173E  
                                    l4982 16B2                                      l4974 1652  
                                    l5598 186A                                      l5960 26F2  
                                    l4968 1346                                      l4896 282A  
                                    l4888 27BC                                      l4992 1744  
                                    l4984 16BC                                      l4976 1654  
                                    l5962 274A                                      l4898 2D00  
                                    l4986 16C2                                      l4994 17A8  
                                    l4978 166E                                      l5964 2E44  
                                    l4996 17BA                                      l4988 1738  
                                    l5966 2E82                                      l5958 1C6E  
                                    l4998 17D8                                      STR_1 06B8  
                                    STR_2 06C2                                      STR_3 0601  
                                    STR_4 0619                                      STR_5 06A1  
                                    STR_7 0641                                      STR_8 0630  
                                    STR_9 0695                                      _CREN 007D5C  
                                    u4100 2FDC                                      u4101 2FD8  
                                    u4110 2F06                                      u4111 2F00  
                                    u4200 2ECE                                      u4120 2F08  
                                    u5000 06FC                                      u4201 2EC8  
                                    u5001 06F8                                      u4050 2864  
                                    u4130 292A                                      u4210 2ED0  
                                    u5010 0744                                      u4051 2860  
                                    u4131 2926                                      u5011 0740  
                                    u4300 1DD4                                      u4060 2876  
                                    u4140 294C                                      u4220 2C80  
                                    u5100 09FA                                      u5020 0788  
                                    u4301 1DD0                                      u4061 2872  
                                    u4141 2948                                      u4221 2C7A  
                                    u5101 09F6                                      u5021 0784  
                                    _IPR1 000F9F                                      u4310 1DFE  
                                    u4070 289E                                      u4150 29A2  
                                    u4230 2C82                                      u5110 0AB2  
                                    u5030 0804                                      u4311 1DFA  
                                    u4071 289A                                      u4151 299E  
                                    u5111 0AAE                                      u5031 07FE  
                                    _PIE1 000F9D                                      u5200 1F98  
                                    u4320 1E3E                                      u4080 28D4  
                                    u4160 29B0                                      u4240 2C98  
                                    u5120 0B32                                      u5040 0806  
                                    u5201 1F94                                      u4321 1E3A  
                                    u4081 28D0                                      u4161 29AC  
                                    u4401 24E0                                      u4241 2C94  
                                    u5121 0B2E                                      u5210 1FDE  
                                    u4250 2F76                                      u4330 1E88  
                                    u4170 2DF8                                      u4090 2DDC  
                                    u4410 2504                                      u5130 0B56  
                                    u5050 081C                                      u5211 1FDA  
                                    u4251 2F70                                      u4331 1E84  
                                    u4171 2DF4                                      u4091 2DD8  
                                    u4411 2500                                      u5131 0B52  
                                    u5051 0818                                      u5300 2442  
                                    u5220 203E                                      u4260 2F78  
                                    u4340 2052                                      u4500 10C4  
                                    u4420 252E                                      u4180 2F3E  
                                    u5140 0C28                                      u5060 0840  
                                    u5301 243E                                      u5221 203A  
                                    u4341 204E                                      u4421 252A  
                                    u4181 2F38                                      u5141 0C24  
                                    u5061 083C                                      u5310 2460  
                                    u4270 1D54                                      u4350 2084  
                                    u4510 10DA                                      u4430 256E  
                                    u4190 2F40                                      u5150 0C5E  
                                    u5070 0864                                      u5230 2C46  
                                    u5311 245C                                      u4271 1D50  
                                    u4351 2080                                      u4511 10D6  
                                    u4431 256A                                      u5151 0C5A  
                                    u5071 0860                                      u5231 2C42  
                                    u5320 2480                                      u5400 1B48  
                                    u4280 1D86                                      u4360 20C2  
                                    u4600 12EA                                      u4520 1108  
                                    u4440 27A0                                      u5160 0D04  
                                    u5080 091A                                      u5240 2BA2  
                                    u5321 247C                                      u5401 1B44  
                                    u4281 1D82                                      u4361 20BE  
                                    u4601 12E6                                      u4521 1104  
                                    u4441 279C                                      u5161 0D00  
                                    u5081 0916                                      u5241 2B9E  
                                    u5330 24D0                                      u5410 1B56  
                                    u5170 2FFE                                      u4370 20EC  
                                    u4610 12FC                                      u4530 1124  
                                    u4450 27CA                                      u5090 0950  
                                    u5250 2BDC                                      u5331 24CC  
                                    u5411 1B52                                      u5171 2FFA  
                                    u4291 1DB0                                      u4371 20E8  
                                    u4611 12F8                                      u4531 1120  
                                    u4451 27C6                                      u5091 094C  
                                    u5251 2BD8                                      _PEIE 007F96  
                                    u5420 1B90                                      u5340 1A10  
                                    u5180 1EE4                                      u5500 0EC0  
                                    u4380 211A                                      u4620 130A  
                                    u4540 1152                                      u4460 27F8  
                                    u4700 181A                                      u5260 2A04  
                                    u5421 1B8C                                      u5341 1A0C  
                                    u5181 1EE0                                      u5501 0EBC  
                                    u4381 2116                                      u4621 1306  
                                    u4541 114E                                      u4461 27F4  
                                    u4701 1816                                      u5261 2A00  
                                    u5430 1B9E                                      u5350 1A1E  
                                    u5190 1F26                                      u5510 0F04  
                                    u4470 2D18                                      u4390 2162  
                                    u4630 1322                                      u4550 1160  
                                    u4710 137E                                      u5270 2A26  
                                    u5431 1B9A                                      u5351 1A1A  
                                    u5191 1F22                                      u5511 0F00  
                                    u4471 2D14                                      u4391 215E  
                                    u4631 131E                                      u4551 115C  
                                    u4711 137A                                      u5271 2A22  
                                    _RBIE 007F93                                      u5360 1A7A  
                                    u5520 0F20                                      u4480 2D46  
                                    u4560 128A                                      u4640 1652  
                                    u4800 14D6                                      u4720 139A  
                                    u5280 2A4E                                      u5440 22EC  
                                    u5600 191A                                      _RBIF 007F90  
                                    u5361 1A76                                      u5521 0F1C  
                                    u4481 2D42                                      u4561 1286  
                                    u4641 164E                                      u4801 14D2  
                                    u4721 1396                                      u5281 2A4A  
                                    u5441 22E8                                      u5601 1916  
                                    u5290 2404                                      u5370 1AD0  
                                    u5530 0FC8                                      u4570 12A8  
                                    u4490 10C2                                      u4650 166E  
                                    u4810 153E                                      u4730 13C4  
                                    u5450 23C0                                      u5610 192A  
                                    u5291 2400                                      u5371 1ACC  
                                    u5531 0FC4                                      u4571 12A4  
                                    u4491 10BC                                      u4651 166A  
                                    u4731 13C0                                      u5451 23BC  
                                    u5611 1926                                      _RCIE 007CED  
                                    u5380 1B1A                                      u5540 1064  
                                    u4900 1C3C                                      u4580 12C2  
                                    u4660 17BA                                      u4820 1580  
                                    u4740 1428                                      u5460 2D98  
                                    u5620 193A                                      _RCEN 007E2B  
                                    _RCIF 007CF5                                      u5381 1B16  
                                    u5541 1060                                      u4901 1C38  
                                    u4581 12BE                                      u4661 17B6  
                                    u4821 157C                                      u4741 1424  
                                    u5461 2D94                                      u5621 1936  
                                    u5390 1B38                                      u5550 108A  
                                    u4910 1CF2                                      u4590 12DC  
                                    u4670 17D8                                      u4830 159E  
                                    u4750 1472                                      u5630 19F6  
                                    u5391 1B34                                      u5551 1086  
                                    u5471 0D8A                                      u4911 1CEC  
                                    u4591 12D8                                      u4671 17D4  
                                    u4831 159A                                      u4815 152C  
                                    u4751 146C                                      u5631 19F2  
                                    u5560 26CC                                      u4920 1CF4  
                                    u4680 17F2                                      u4840 15B8  
                                    u4760 1474                                      u5481 0D96  
                                    u5561 26C8                                      u4681 17EE  
                                    u4841 15B4                                      u5490 0E62  
                                    u5570 2724                                      u4930 1D0A  
                                    u4690 180C                                      u4850 15D2  
                                    u4770 148A                                      u5491 0E5E  
                                    u5571 2720                                      u4931 1D06  
                                    u4691 1808                                      u4851 15CE  
                                    u4771 1486                                      u5580 2780  
                                    u4940 1D1C                                      u4860 15E0  
                                    u4780 14BE                                      u5581 277C  
                                    u4941 1D18                                      u4861 15DC  
                                    u4781 14B8                                      u4950 25F4  
                                    u4870 15EE                                      u4790 14C0  
                                    u5807 3088                                      u4951 25F0  
                                    u4871 15EA                                      u5591 184E  
                                    u4880 1BEA                                      u4960 262A  
                                    u4881 1BE6                                      u4961 2626  
                                    u4890 1C20                                      u4970 2646  
                                    u4891 1C1C                                      u4971 2642  
                                    u5747 19D4                                      u4980 2658  
                                    u4981 2654                                      u5757 306C  
                                    u4990 2682                                      u5767 2B22  
                                    u4991 267E                                      u5777 2B3E  
                                    u5787 2B5A                                      u5797 2B76  
                                    _SPEN 007D5F                                      _TRMT 007D61  
                                    _TXIE 007CEC                                      _TXIF 007CF4  
                                    _TXEN 007D65                                      _SYNC 007D64  
                                    abs@a 0019                                      _date 00BD  
                                    _dbuf 0155                                      _flag 00AD  
                                    _atoi 1BB2                                      _main 1844  
                                    _dtoa 1092                                      _hour 00C3  
                                    _prec 0072                                      _nout 00A0  
                                    _year 00B9                                      pad@i 001E  
                                    pad@p 001B                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 0020  
                                    fsr2l 000FD9                                      btemp 0079  
                                    _utoa 1644                                      _xtoa 1370  
                       ??_uart_lcd_update 000C                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000E  
                           __CFG_IESO$OFF 000000                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                                     ??_abs 001B  
                                   ??_pad 001D       __size_of_heat_element_device_select 003E  
                            main@lcd_test 01DB                           __end_of___aodiv 1ECA  
                                   ?_atoi 000E                                     _ADDEN 007D5B  
                                   ?_main 0001                                     ?_dtoa 0022  
                         __end_of___aomod 21A4                                     _ACKEN 007E2C  
                                   _ACKDT 007E2D                                     STR_12 06AD  
                                   STR_21 069E                                     STR_13 0652  
                                   STR_30 06D1                                     STR_23 06CE  
                                   STR_15 0661                                     STR_16 066E  
                                   STR_25 06CE                                     STR_33 06D4  
                                   STR_17 067B                                     STR_18 0688  
                                   STR_35 06D4                                     STR_28 06D1  
                                   STR_37 06CB                                     STR_39 06CB  
                         __end_of___lldiv 2A82                                     ?_utoa 0022  
                         __end_of___lodiv 25CA                                     ?_xtoa 0022  
                                   _T1CON 000FCD                           __end_of___lomod 2852  
                                   i2l414 22BE                                     i2l409 2218  
                                   _RCREG 000FAE                              vfpfcnvrt@fmt 004B  
                            vfpfcnvrt@llu 0068                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _SPBRG 000FAF  
                                   _PORTB 000F81                                     _PORTC 000F82  
                                   _PORTD 000F83                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _SSPIE 007CEB  
                                   _TRISE 000F96                                     _SSPIF 007CF3  
                                   _TXREG 000FAD                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                       ___lmul@multiplicand 000B  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                                   _flags 0074                                     _count 00B1  
                                   _fputc 2852                           __end_of_isalpha 2ED6  
                                   _fputs 2D9A                           __end_of_isdigit 2F7E  
                                   _month 00BB                                     _reply 0195  
                                   _timer 00A4                                     atoi@n 001B  
                                   pad@fp 0017                                     atoi@s 000E  
                                   _width 00A2                                     _putch 3094  
                                   main@i 01EF                                     dtoa@d 0024  
                                   dtoa@i 0044                                     dtoa@n 003C  
                                   dtoa@p 0036                                     dtoa@s 003A  
                                   dtoa@w 0038                           __end_of_islower 2F0E  
                         __end_of_isspace 2D52                           __end_of_isupper 2F46  
                                   tablat 000FF5                                     plusw1 000FE3  
                                   plusw2 000FDB                                     ttemp5 007A  
                                   ttemp6 007D                                     ttemp7 0081  
                                   utoa@d 0024                                     utoa@i 0040  
                                   utoa@n 0038                                     utoa@p 0034  
                                   utoa@w 0036                                     status 000FD8  
                                   wtemp8 007A                           __end_of_sprintf 2D00  
                                   xtoa@c 0047                                     xtoa@d 0024  
                                   xtoa@i 0045                                     xtoa@n 003D  
                                   xtoa@p 0039                                     xtoa@w 003B  
                                   xtoa@x 002C                           __end_of_strncmp 26A8  
                         __end_of_toupper 2CAE                          ___lodiv@dividend 0007  
                         timer_init@delay 0020                              _toupper$1606 0013  
                         __initialization 2A82                      _heat_element_testing 0D84  
                            __end_of_atoi 1D42                              __end_of_main 19FE  
                            __end_of_dtoa 1370                              __end_of_utoa 1844  
                            __end_of_xtoa 1644                             _stepper_count 0094  
                                  ??_atoi 0010                                    ??_main 00EC  
                                  ??_dtoa 002C                                    ??_utoa 002C  
                                  ??_xtoa 002D                             __activetblptr 000002  
       __size_of_heat_elmnt_result_update 00DA                 ?_heat_elmnt_result_update 0001  
                        ___lodiv@quotient 0017                                    _ADCON1 000FC1  
                                  ?_fputc 0007                     adc_update@adc_channel 0008  
                                  ?_fputs 0010                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    ?_putch 0001  
                        __end_of_adc_init 305C                                    i2l4250 21B6  
                                  i2l4260 21DC                                    i2l4252 21C4  
                                  i2l4270 2226                                    i2l4262 21F0  
                                  i2l4254 21C6                                    i2l4280 2268  
                                  i2l4272 222C                                    i2l4264 21F6  
                                  i2l4256 21CC                                    i2l4290 228E  
                                  i2l4282 226A                                    i2l4274 224A  
                                  i2l4258 21DA                                    i2l4266 21F8  
                         _heat_elmnt_flag 00C5                                    i2l4292 2290  
                                  i2l4284 2278                                    i2l4276 2258  
                                  i2l4268 2210                                    i2l4286 227C  
                                  i2l4278 225A                                    i2l4288 2280  
                                  _INTCON 000FF2                                    _TMR1IF 007CF0  
                                  _SSPADD 000FC8                                    _TRISC3 007CA3  
                                  _TRISC4 007CA4                                    _TRISC6 007CA6  
                                  _TRISC7 007CA7                                    _SSPBUF 000FC9  
                        _led_serial_blink 00B5                          __end_of___xxtofl 1BB2  
                          __CFG_XINST$OFF 000000                     ?_heat_element_testing 0001  
                        __end_of_lcd_data 3078                          __end_of_lcd_cmnt 3094  
                            vfprintf@cfmt 0070                          __end_of_lcd_init 2B84  
                                  ___flge 23D6                                    ___lmul 2B84  
                               ??___aodiv 0017                                 ??___aomod 0017  
                                  ___wmul 3014                            __CFG_STVREN$ON 000000  
                               ??___lldiv 001B                                 ??___lodiv 0017  
                               ??___lomod 0017                                    _bt_msg 0264  
                                  _memset 1ECA                                    clear_0 2ABC  
                                  clear_1 2ACE                                    clear_2 2ADA  
                                  clear_3 2AE6                                    clear_4 2AF2  
                                  _preset 0080                                    pad@buf 0019  
                                  _toggle 00B0                                    dtoa@fp 0022  
                                  _strlen 2FB4                                    fputc@c 0007  
                                  fputs@c 0014                                    fputs@i 0015  
                                  fputs@s 0010                                 ??_isalpha 0009  
                               ??_isdigit 0009        __end_of_heat_element_device_select 2E5C  
              _heat_element_device_select 2E1E                                 ??_islower 0009  
                            __mediumconst 0000                                 ??_isspace 0009  
                                  tblptrh 000FF7                                 ??_isupper 0009  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                                  putch@c 0001                          __end_of_vfprintf 2C50  
                                  utoa@fp 0022                                 ??_sprintf 0072  
                                  xtoa@fp 0022                                 ??_strncmp 000D  
                               ??_toupper 000F                                ___flge@ff1 0015  
                              ___flge@ff2 0019                              ___xxtofl@arg 0011  
                            ___xxtofl@exp 0010                              ___xxtofl@val 0007  
                              __accesstop 0080                   __end_of__initialization 2AF8  
                         __CFG_PBADEN$OFF 000000                             ___rparam_used 000001  
                          __pcstackCOMRAM 0001                              __pidataBANK0 3096  
                            __pidataBANK1 2F7E                             __end_of_fputc 291C  
                           __end_of_fputs 2DDE                             __end_of_putch 3096  
                              _adc_update 2FEA                           _uart_lcd_update 2D52  
                                 ??_fputc 000B                                   ??_fputs 0014  
                                 ??_putch 0007                                __pbssBANK0 0080  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                  ??_heat_element_testing 0021                        __CFG_CCP2MX$PORTBE 000000  
                                 ?___flge 0015                                   ?___lmul 0007  
                                 ?___wmul 0007                                   ?_memset 0007  
                          ___lmul@product 000F                                 ?_adc_init 0001  
 heat_element_testing@testing_elapse_time 0037                                   ?_strlen 0007  
                               ?___xxtofl 0007                          _heat_elmnt_short 00C7  
                      __size_of_vfpfcnvrt 06AC                          uart_lcd_update@i 000F  
                                 _SSPCON1 000FC6                                 ?_lcd_data 0001  
                               ?_lcd_cmnt 0001                                 ?_lcd_init 0001  
                                 _SSPSTAT 000FC7                          ___lomod@dividend 0007  
                  __size_of_interrupt_isr 22CA                    _heat_elmnt_result_time 0132  
                         _transmision_msg 0078                                   _i2c_pkt 00B6  
                                 __Hparam 0000                                   __Lparam 0000  
                         __size_of___flge 0104                                   ___aodiv 1D42  
                                 ___aomod 2040                           __size_of___lmul 006A  
                                 ___lldiv 29DE                           __size_of___wmul 0026  
                                 ___lodiv 24DA                                   ___lomod 2782  
                               ?_vfprintf 00CA                              __psmallconst 0600  
                             ?_adc_update 0001                                   __pcinit 2A82  
                              _local_time 013A                           __size_of_memset 0176  
                                 __ramtop 0600                                ??_adc_init 0007  
                 __end_of_uart_lcd_update 2D9A                                   __ptext0 1844  
                                 __ptext1 2D52                                   __ptext2 305C  
                                 __ptext3 22D2                                   __ptext4 2B84  
                                 __ptext5 29DE                                   __ptext6 2CAE  
                                 __ptext7 2BEE                                   __ptext8 06D8  
                                 __ptext9 1370                                   _lcd_msg 0185  
                                 _lcd_ptr 01C3                           __size_of_strlen 0036  
                                 _counter 0098                              __size_of_abs 0040  
                                 _key_nav 00AC                              __size_of_pad 00C2  
                                 _isalpha 2E9A                                   _isdigit 2F46  
                              ??___xxtofl 000B                 heat_element_testing@F3211 011A  
               heat_element_testing@F3213 012A                                   _islower 2ED6  
                                 _isspace 2D00                                   _isupper 2F0E  
  heat_element_device_select@relay_number 0009                                   atoi@neg 0014  
                              ??_lcd_data 0007                                   _sprintf 2CAE  
                              ??_lcd_cmnt 0007                                ??_lcd_init 0009  
                                 _strncmp 25CA                            __pintcode_body 21A4  
                                 _toupper 2C50              ??_heat_element_device_select 0007  
                    end_of_initialization 2AF8                                   fputc@fp 0009  
                              _loop_count 0090                                   memset@c 0009  
                                 memset@k 000F                                   memset@n 000B  
                                 memset@s 0011                             __Lmediumconst 0000  
                                 int_func 21A4                                   fputs@fp 0012  
                         ___lldiv@divisor 0017                           ___lldiv@counter 001F  
                      uart_lcd_update@len 000B                         __end_of_vfpfcnvrt 0D84  
                        _motor_dir_status 00AF                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                              ??_vfprintf 0070                                   strlen@a 0009  
                                 strlen@s 0007                             _interrupt_isr 0008  
                              _timer_flag 00A8                                _timer_init 22D2  
                               _PORTBbits 000F81                                 _PORTCbits 000F82  
             ?_heat_element_device_select 0001                             ___xxtofl@sign 000F  
                              _rx_msg_buf 0200                                _start_time 0145  
          ??_heat_element_device_deselect 0007                       __size_of_adc_update 002A  
                            _i2c_mas_time 0149                                 _TXSTAbits 000FAC  
                        main@current_time 01EB                            __end_of___flge 24DA  
                          ?_interrupt_isr 0001                            __end_of___lmul 2BEE  
                             vfpfcnvrt@ap 004D                               vfpfcnvrt@fp 0049  
                             vfpfcnvrt@ll 005F                            __end_of___wmul 303A  
                _heat_elmnt_result_update 26A8                          ?_uart_lcd_update 0009  
                          __end_of_memset 2040                            __end_of_strlen 2FEA  
                           _channel_index 00B4                       start_initialization 2A82  
                         ___lodiv@divisor 000F                           ___lodiv@counter 001F  
                             __end_of_abs 2E1E                               __end_of_pad 29DE  
                         _run_preset_flag 00AE                               vfprintf@fmt 00CC  
                                ??___flge 001D                                  ??___lmul 000F  
                                ??___wmul 000B                               __pdataBANK0 00EE  
                             __pdataBANK1 01A5                          __CFG_LPT1OSC$OFF 000000  
                                ??_memset 000D                                memset@dest 0007  
                             ?_timer_init 0020                                  ??_strlen 0009  
                             __pbssBIGRAM 0296                         __size_of_adc_init 0022  
                             __pbssCOMRAM 0072                             __pcstackBANK0 00CA  
                           __pcstackBANK1 01DB                          ___aodiv@dividend 0007  
                       __size_of___xxtofl 01B4                                 _adc_value 0100  
                       __size_of_lcd_data 001C                         __size_of_lcd_cmnt 001C  
                       __size_of_lcd_init 007E                                 _atoi$1490 0016  
                               _atoi$1491 001A                                 _atoi$1492 0018  
           __size_of_heat_element_testing 030E                                 __pintcode 0008  
                         ??_interrupt_isr 0001                                  ?___aodiv 0007  
                                ?___aomod 0007                          ___aodiv@quotient 0019  
                                ?___lldiv 0013                                  ?___lodiv 0007  
                                ?___lomod 0007                     heat_element_testing@i 003F  
                            ??_adc_update 0007                         __size_of_vfprintf 0062  
                         ___lomod@divisor 000F                               __smallconst 0600  
                         ___lomod@counter 0017                                  ?_isalpha 0007  
                                ?_isdigit 0007                                  ?_islower 0007  
                                ?_isspace 0007                                  ?_isupper 0007  
                _heating_elemnt_adc_value 0296                               _desired_pos 014D  
                                ?_sprintf 00D0                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                                  ?_strncmp 0007  
                                ?_toupper 000D                            __size_of_putch 0002  
                          ___wmul@product 000B                                  _LATBbits 000F8A  
                      __end_of_adc_update 3014                         _counter_mod_value 0151  
                     __size_of_timer_init 0104                         _heat_elmnt_result 00A6  
                                i2u373_40 21C4                                  i2u373_41 21C0  
                                i2u374_40 21DA                                  i2u374_41 21D6  
                                i2u375_40 2210                                  i2u375_41 220C  
                                i2u376_40 2226                                  i2u376_41 2222  
                                i2u377_40 224A                                  i2u377_41 2246  
                                i2u378_40 2268                                  i2u378_41 2264  
                                i2u379_40 228E                                  i2u379_41 228A  
                        __CFG_WDTPS$32768 000000                                 main@F3204 01A5  
                               _time_flag 00B3                                 _timer_ptr 01B5  
                               _vfpfcnvrt 06D8                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                                _ADCON2bits 000FC0  
                       ___wmul@multiplier 0007                              _isspace$1517 000D  
                              vfpfcnvrt@c 0067                         ___lmul@multiplier 0007  
                               copy_data0 2A96                ??_heat_elmnt_result_update 0007  
                                __Hrparam 0000                                vfprintf@ap 00CE  
                                __Lrparam 0000                                vfprintf@fp 00CA  
                      __CFG_BOREN$SBORDIS 000000                          __size_of___aodiv 0188  
                        __size_of___aomod 0164                          __size_of___lldiv 00A4  
                        __size_of___lodiv 00F0                          __size_of___lomod 00D0  
                              ?_vfpfcnvrt 0049                           ___aodiv@divisor 000F  
                                _adc_init 303A                           ___aodiv@counter 0017  
                              sprintf@fmt 00D2                                  ___xxtofl 19FE  
                        __size_of_isalpha 003C                          __size_of_isdigit 0038  
                                _dtoa$975 0034                          __size_of_islower 0038  
                        __size_of_isspace 0052                                  __ptext10 2C50  
                                __ptext11 2ED6                                  __ptext20 2FB4  
                                __ptext12 2F0E                                  __ptext21 2D9A  
                                __ptext13 2E9A                                  __ptext30 3014  
                                __ptext22 2852                                  __ptext14 1644  
                                __ptext31 2B06                                  __ptext23 3094  
                                __ptext15 2782                                  __ptext40 23D6  
                                __ptext32 3078                                  __ptext24 2DDE  
                                __ptext16 24DA                                  __ptext41 303A  
                                __ptext33 26A8                                  __ptext25 2040  
                                __ptext17 25CA                                  __ptext34 0D84  
                                __ptext26 1D42                                  __ptext18 1092  
                                __ptext35 1ECA                                  __ptext27 1BB2  
                                __ptext19 291C                                  __ptext36 2E1E  
                                __ptext28 2D00                                  __ptext37 2E5C  
                                __ptext29 2F46                                  __ptext38 2FEA  
                                __ptext39 19FE                          __size_of_isupper 0038  
                                _end_time 0141                                  _lcd_data 305C  
                                _lcd_cmnt 3078                                  _lcd_msg1 0175  
                                _lcd_init 2B06                          __size_of_sprintf 0052  
                        __size_of_strncmp 00DE                          __size_of_toupper 005E  
                           __size_of_atoi 0190                             __size_of_main 01BA  
                           __size_of_dtoa 02DE                             __size_of_utoa 0200  
                           __size_of_xtoa 02D4                                  _received 00B2  
                                int$flags 0079                                  _xtoa$993 0035  
                                _xtoa$994 0037                                  _rx_index 0077  
                                _vfprintf 2BEE                              ??_timer_init 0024  
heat_element_device_deselect@relay_number 0009                             _timer_min_max 01CF  
    __end_of_heat_element_device_deselect 2E9A     __size_of_heat_element_device_deselect 003E  
            _heat_element_device_deselect 2E5C                          ___aomod@dividend 0007  
                          _vfpfcnvrt$1008 005D                                  isalpha@c 0007  
                                isdigit@c 0007                  __size_of_uart_lcd_update 0048  
                                intlevel2 0000                                 sprintf@ap 00E4  
                                islower@c 0007                                  isspace@c 0007  
                        ___lldiv@dividend 0013                        __end_of_timer_init 23D6  
                                isupper@c 0007                                 strncmp@_l 0007  
                               strncmp@_r 0009                       uart_lcd_update@data 0009  
                         ___aomod@divisor 000F                               ??_vfpfcnvrt 004F  
                         ___aomod@counter 0017                                  sprintf@f 00E6  
                                sprintf@s 00D0             ?_heat_element_device_deselect 0001  
                        ___lldiv@quotient 001B              __end_of_heat_element_testing 1092  
                                strncmp@l 000E                                  strncmp@n 000B  
                                strncmp@r 0010                                  toupper@c 000D  
            heat_element_testing@lcd_test 0027                               _timer_value 009C  
                         _adc_update_flag 00EE                              ___aodiv@sign 0018  
                             _test_status 00AA          __end_of_heat_elmnt_result_update 2782  
                            ___aomod@sign 0018  
