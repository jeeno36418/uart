

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Feb 13 02:45:42 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     	;# 
    43  0001                     	;# 
    44  0002                     	;# 
    45  0003                     	;# 
    46  0004                     	;# 
    47  0005                     	;# 
    48  0006                     	;# 
    49  0007                     	;# 
    50  0008                     	;# 
    51  0009                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001D                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0087                     	;# 
    81  0088                     	;# 
    82  0089                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0094                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  009F                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  010F                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0014                     	;# 
   124  0015                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001B                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  0086                     	;# 
   140  0087                     	;# 
   141  0088                     	;# 
   142  0089                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162                           
   163                           	psect	idataBANK1
   164  075E                     __pidataBANK1:	
   165                           
   166                           ;initializer for _timer_min_max
   167  075E  3400               	retlw	0
   168  075F  343B               	retlw	59
   169  0760  3400               	retlw	0
   170  0761  343B               	retlw	59
   171  0762  3400               	retlw	0
   172  0763  3417               	retlw	23
   173  0764  3401               	retlw	1
   174  0765  3407               	retlw	7
   175  0766  3401               	retlw	1
   176  0767  341F               	retlw	31
   177  0768  3401               	retlw	1
   178  0769  340C               	retlw	12
   179  076A  3400               	retlw	0
   180  076B  3463               	retlw	99
   181                           
   182                           ;initializer for _timer_ptr
   183  076C  3465               	retlw	_sec& (0+255)
   184  076D  3461               	retlw	_min& (0+255)
   185  076E  345F               	retlw	_hour& (0+255)
   186  076F  3475               	retlw	_day& (0+255)
   187  0770  345D               	retlw	_date& (0+255)
   188  0771  3463               	retlw	_month& (0+255)
   189  0772  3467               	retlw	_year& (0+255)
   190                           
   191                           	psect	strings
   192  0545                     __pstrings:	
   193  0545                     stringtab:	
   194  0545                     __stringtab:	
   195  0545                     stringcode:	
   196                           ;	String table - string pointers are 1 byte each
   197                           
   198  0545                     stringdir:	
   199  0545  3005               	movlw	high stringdir
   200  0546  008A               	movwf	10
   201  0547  0804               	movf	4,w
   202  0548  0A84               	incf	4,f
   203  0549  0782               	addwf	2,f
   204  054A                     __stringbase:	
   205  054A  3400               	retlw	0
   206  054B                     __end_of__stringtab:	
   207  054B                     _dpowers:	
   208  054B  3401               	retlw	1
   209  054C  3400               	retlw	0
   210  054D  340A               	retlw	10
   211  054E  3400               	retlw	0
   212  054F  3464               	retlw	100
   213  0550  3400               	retlw	0
   214  0551  34E8               	retlw	232
   215  0552  3403               	retlw	3
   216  0553  3410               	retlw	16
   217  0554  3427               	retlw	39
   218  0555                     __end_of_dpowers:	
   219  0555                     __stringdata:	
   220  0555                     STR_1:	
   221  0555  3454               	retlw	84	;'T'
   222  0556  3469               	retlw	105	;'i'
   223  0557  346D               	retlw	109	;'m'
   224  0558  3465               	retlw	101	;'e'
   225  0559  343A               	retlw	58	;':'
   226  055A  3420               	retlw	32	;' '
   227  055B  3425               	retlw	37	;'%'
   228  055C  3464               	retlw	100	;'d'
   229  055D  3425               	retlw	37	;'%'
   230  055E  3464               	retlw	100	;'d'
   231  055F  342D               	retlw	45	;'-'
   232  0560  3425               	retlw	37	;'%'
   233  0561  3464               	retlw	100	;'d'
   234  0562  3425               	retlw	37	;'%'
   235  0563  3464               	retlw	100	;'d'
   236  0564  342D               	retlw	45	;'-'
   237  0565  3425               	retlw	37	;'%'
   238  0566  3464               	retlw	100	;'d'
   239  0567  3425               	retlw	37	;'%'
   240  0568  3464               	retlw	100	;'d'
   241  0569  3420               	retlw	32	;' '
   242  056A  3420               	retlw	32	;' '
   243  056B  3400               	retlw	0
   244  056C                     STR_2:	
   245  056C  3444               	retlw	68	;'D'
   246  056D  3461               	retlw	97	;'a'
   247  056E  3474               	retlw	116	;'t'
   248  056F  3465               	retlw	101	;'e'
   249  0570  343A               	retlw	58	;':'
   250  0571  3420               	retlw	32	;' '
   251  0572  3425               	retlw	37	;'%'
   252  0573  3464               	retlw	100	;'d'
   253  0574  3425               	retlw	37	;'%'
   254  0575  3464               	retlw	100	;'d'
   255  0576  342D               	retlw	45	;'-'
   256  0577  3425               	retlw	37	;'%'
   257  0578  3464               	retlw	100	;'d'
   258  0579  3425               	retlw	37	;'%'
   259  057A  3464               	retlw	100	;'d'
   260  057B  342D               	retlw	45	;'-'
   261  057C  3425               	retlw	37	;'%'
   262  057D  3464               	retlw	100	;'d'
   263  057E  3425               	retlw	37	;'%'
   264  057F  3464               	retlw	100	;'d'
   265  0580  3420               	retlw	32	;' '
   266  0581  3420               	retlw	32	;' '
   267  0582  3400               	retlw	0
   268  0583                     __end_of__stringdata:	
   269                           
   270                           ; #config settings
   271  0000                     
   272                           	psect	nvBANK0
   273  0069                     __pnvBANK0:	
   274  0069                     _i2c_pkt:	
   275  0069                     	ds	3
   276  000B                     _INTCON	set	11
   277  0005                     _PORTA	set	5
   278  0008                     _PORTD	set	8
   279  0013                     _SSPBUF	set	19
   280  0014                     _SSPCON	set	20
   281  0006                     _PORTB	set	6
   282  005F                     _GIE	set	95
   283  005E                     _PEIE	set	94
   284  0034                     _RB4	set	52
   285  005B                     _RBIE	set	91
   286  0058                     _RBIF	set	88
   287  0048                     _RE0	set	72
   288  0049                     _RE1	set	73
   289  00A5                     _SSPEN	set	165
   290  0063                     _SSPIF	set	99
   291  009F                     _ADCON1	set	159
   292  0081                     _OPTION_REG	set	129
   293  0093                     _SSPADD	set	147
   294  0094                     _SSPSTAT	set	148
   295  0085                     _TRISA	set	133
   296  0086                     _TRISB	set	134
   297  0088                     _TRISD	set	136
   298  0089                     _TRISE	set	137
   299  048D                     _ACKDT	set	1165
   300  048C                     _ACKEN	set	1164
   301  046B                     _BCLIE	set	1131
   302  048A                     _PEN	set	1162
   303  048B                     _RCEN	set	1163
   304  0489                     _RSEN	set	1161
   305  0488                     _SEN	set	1160
   306  0463                     _SSPIE	set	1123
   307  043B                     _TRISC3	set	1083
   308  043C                     _TRISC4	set	1084
   309                           
   310                           	psect	cinit
   311  0015                     start_initialization:	
   312  0015                     __initialization:	
   313                           
   314                           ; Clear objects allocated to COMMON
   315  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   316  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   317  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   318  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   319  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   320  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   321                           
   322                           ; Clear objects allocated to BANK0
   323  001B  1383               	bcf	3,7	;select IRP bank0
   324  001C  3056               	movlw	low __pbssBANK0
   325  001D  0084               	movwf	4
   326  001E  3069               	movlw	low (__pbssBANK0+19)
   327  001F  120A  118A  27E1  120A  118A  	fcall	clear_ram0
   328                           
   329                           ; Clear objects allocated to BANK1
   330  0024  30A0               	movlw	low __pbssBANK1
   331  0025  0084               	movwf	4
   332  0026  30C7               	movlw	low (__pbssBANK1+39)
   333  0027  120A  118A  27E1  120A  118A  	fcall	clear_ram0
   334                           
   335                           ; Initialize objects allocated to BANK1
   336  002C  30DC               	movlw	low (__pdataBANK1+21)
   337  002D  00FD               	movwf	btemp+-1
   338  002E  3007               	movlw	high __pidataBANK1
   339  002F  00FE               	movwf	btemp
   340  0030  305E               	movlw	low __pidataBANK1
   341  0031  00FF               	movwf	btemp+1
   342  0032  30C7               	movlw	low __pdataBANK1
   343  0033  0084               	movwf	4
   344  0034  120A  118A  27C3   	fcall	init_ram0
   345  0037                     end_of_initialization:	
   346                           ;End of C runtime variable initialization code
   347                           
   348  0037                     __end_of__initialization:	
   349  0037  0183               	clrf	3
   350  0038  120A  118A  283B   	ljmp	_main	;jump to C main() function
   351                           
   352                           	psect	bssCOMMON
   353  0070                     __pbssCOMMON:	
   354  0070                     _day_dec:	
   355  0070                     	ds	1
   356  0071                     _hour_dec:	
   357  0071                     	ds	1
   358  0072                     _lcd_ptr:	
   359  0072                     	ds	1
   360  0073                     _min_dec:	
   361  0073                     	ds	1
   362  0074                     _sec_dec:	
   363  0074                     	ds	1
   364  0075                     _day:	
   365  0075                     	ds	1
   366                           
   367                           	psect	bssBANK0
   368  0056                     __pbssBANK0:	
   369  0056                     _date_dec:	
   370  0056                     	ds	1
   371  0057                     _flag:	
   372  0057                     	ds	1
   373  0058                     _inc:	
   374  0058                     	ds	1
   375  0059                     _key_nav:	
   376  0059                     	ds	1
   377  005A                     _month_dec:	
   378  005A                     	ds	1
   379  005B                     _timer:	
   380  005B                     	ds	1
   381  005C                     _year_dec:	
   382  005C                     	ds	1
   383  005D                     _date:	
   384  005D                     	ds	2
   385  005F                     _hour:	
   386  005F                     	ds	2
   387  0061                     _min:	
   388  0061                     	ds	2
   389  0063                     _month:	
   390  0063                     	ds	2
   391  0065                     _sec:	
   392  0065                     	ds	2
   393  0067                     _year:	
   394  0067                     	ds	2
   395                           
   396                           	psect	bssBANK1
   397  00A0                     __pbssBANK1:	
   398  00A0                     _lcd_msg:	
   399  00A0                     	ds	16
   400  00B0                     _lcd_msg1:	
   401  00B0                     	ds	16
   402  00C0                     _local_time:	
   403  00C0                     	ds	7
   404                           
   405                           	psect	dataBANK1
   406  00C7                     __pdataBANK1:	
   407  00C7                     _timer_min_max:	
   408  00C7                     	ds	14
   409  00D5                     _timer_ptr:	
   410  00D5                     	ds	7
   411                           
   412                           	psect	clrtext
   413  07E1                     clear_ram0:	
   414                           ;	Called with FSR containing the base address, and
   415                           ;	W with the last address+1
   416                           
   417  07E1  0064               	clrwdt	;clear the watchdog before getting into this loop
   418  07E2                     clrloop0:	
   419  07E2  0180               	clrf	0	;clear RAM location pointed to by FSR
   420  07E3  0A84               	incf	4,f	;increment pointer
   421  07E4  0604               	xorwf	4,w	;XOR with final address
   422  07E5  1903               	btfsc	3,2	;have we reached the end yet?
   423  07E6  3400               	retlw	0	;all done for this memory range, return
   424  07E7  0604               	xorwf	4,w	;XOR again to restore value
   425  07E8  2FE2               	goto	clrloop0	;do the next byte
   426                           
   427                           	psect	inittext
   428  07BF                     init_fetch0:	
   429                           ;	Called with low address in FSR and high address in W
   430                           
   431  07BF  087E               	movf	126,w
   432  07C0  008A               	movwf	10
   433  07C1  087F               	movf	127,w
   434  07C2  0082               	movwf	2
   435  07C3                     init_ram0:	
   436                           ;Called with:
   437                           ;	high address of idata address in btemp 
   438                           ;	low address of idata address in btemp+1 
   439                           ;	low address of data in FSR
   440                           ;	high address + 1 of data in btemp-1
   441                           
   442  07C3  27BF  120A  118A   	fcall	init_fetch0
   443  07C6  0080               	movwf	0
   444  07C7  0A84               	incf	4,f
   445  07C8  0804               	movf	4,w
   446  07C9  067D               	xorwf	125,w
   447  07CA  1903               	btfsc	3,2
   448  07CB  3400               	retlw	0
   449  07CC  0AFF               	incf	127,f
   450  07CD  1903               	btfsc	3,2
   451  07CE  0AFE               	incf	126,f
   452  07CF  2FC3               	goto	init_ram0
   453                           
   454                           	psect	cstackCOMMON
   455  0076                     __pcstackCOMMON:	
   456  0076                     ?_lcd_init:	
   457  0076                     ?_i2c_master_init:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0076                     ?_lcd_cmnt:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0076                     ?_main:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0076                     ?_interrupt_isr:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0076                     ??_interrupt_isr:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  0076                     ?_lcd_data:	
   473                           ; 0 bytes @ 0x0
   474                           
   475  0076                     ?_master_tx:	
   476                           ; 0 bytes @ 0x0
   477                           
   478  0076                     ?_master_tx_write:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0076                     ?_char2int:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0076                     ?_hex2integer:	
   485                           ; 1 bytes @ 0x0
   486                           
   487                           
   488                           ; 1 bytes @ 0x0
   489  0076                     	ds	6
   490                           
   491                           	psect	cstackBANK0
   492  0020                     __pcstackBANK0:	
   493  0020                     ??_i2c_master_init:	
   494  0020                     ??_master_tx:	
   495                           ; 0 bytes @ 0x0
   496                           
   497  0020                     ?_hex2char:	
   498                           ; 0 bytes @ 0x0
   499                           
   500  0020                     ?_delay:	
   501                           ; 0 bytes @ 0x0
   502                           
   503  0020                     ??_char2int:	
   504                           ; 0 bytes @ 0x0
   505                           
   506  0020                     ?_master_rx:	
   507                           ; 0 bytes @ 0x0
   508                           
   509  0020                     ?___bmul:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0020                     ?___awdiv:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0020                     ?___awmod:	
   516                           ; 2 bytes @ 0x0
   517                           
   518  0020                     ?___lwdiv:	
   519                           ; 2 bytes @ 0x0
   520                           
   521  0020                     master_rx@rx_time:	
   522                           ; 2 bytes @ 0x0
   523                           
   524  0020                     hex2char@out:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0020                     ___bmul@multiplicand:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0020                     delay@x:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0020                     ___awdiv@divisor:	
   534                           ; 2 bytes @ 0x0
   535                           
   536  0020                     ___awmod@divisor:	
   537                           ; 2 bytes @ 0x0
   538                           
   539  0020                     ___lwdiv@divisor:	
   540                           ; 2 bytes @ 0x0
   541                           
   542                           
   543                           ; 2 bytes @ 0x0
   544  0020                     	ds	1
   545  0021                     ??_master_rx:	
   546  0021                     ??_hex2char:	
   547                           ; 0 bytes @ 0x1
   548                           
   549  0021                     ??___bmul:	
   550                           ; 0 bytes @ 0x1
   551                           
   552  0021                     master_tx@i2c_pkt:	
   553                           ; 0 bytes @ 0x1
   554                           
   555                           
   556                           ; 1 bytes @ 0x1
   557  0021                     	ds	1
   558  0022                     ??_delay:	
   559  0022                     master_rx@i2c_pkt:	
   560                           ; 0 bytes @ 0x2
   561                           
   562  0022                     char2int@in:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  0022                     ___bmul@product:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  0022                     ___awdiv@dividend:	
   569                           ; 1 bytes @ 0x2
   570                           
   571  0022                     ___awmod@dividend:	
   572                           ; 2 bytes @ 0x2
   573                           
   574  0022                     ___lwdiv@dividend:	
   575                           ; 2 bytes @ 0x2
   576                           
   577                           
   578                           ; 2 bytes @ 0x2
   579  0022                     	ds	1
   580  0023                     ??_master_tx_write:	
   581  0023                     hex2char@in:	
   582                           ; 0 bytes @ 0x3
   583                           
   584  0023                     ___bmul@multiplier:	
   585                           ; 1 bytes @ 0x3
   586                           
   587  0023                     delay@i:	
   588                           ; 1 bytes @ 0x3
   589                           
   590                           
   591                           ; 2 bytes @ 0x3
   592  0023                     	ds	1
   593  0024                     ?_space_stuff:	
   594  0024                     ??___awdiv:	
   595                           ; 0 bytes @ 0x4
   596                           
   597  0024                     ??___awmod:	
   598                           ; 0 bytes @ 0x4
   599                           
   600  0024                     ??___lwdiv:	
   601                           ; 0 bytes @ 0x4
   602                           
   603  0024                     space_stuff@index:	
   604                           ; 0 bytes @ 0x4
   605                           
   606  0024                     master_tx_write@i:	
   607                           ; 1 bytes @ 0x4
   608                           
   609                           
   610                           ; 2 bytes @ 0x4
   611  0024                     	ds	1
   612  0025                     ??_space_stuff:	
   613  0025                     ___awdiv@counter:	
   614                           ; 0 bytes @ 0x5
   615                           
   616  0025                     ___awmod@counter:	
   617                           ; 1 bytes @ 0x5
   618                           
   619  0025                     ___lwdiv@counter:	
   620                           ; 1 bytes @ 0x5
   621                           
   622  0025                     delay@j:	
   623                           ; 1 bytes @ 0x5
   624                           
   625                           
   626                           ; 2 bytes @ 0x5
   627  0025                     	ds	1
   628  0026                     space_stuff@in:	
   629  0026                     master_tx_write@i2c_pkt:	
   630                           ; 1 bytes @ 0x6
   631                           
   632  0026                     ___awdiv@sign:	
   633                           ; 1 bytes @ 0x6
   634                           
   635  0026                     ___awmod@sign:	
   636                           ; 1 bytes @ 0x6
   637                           
   638  0026                     ___lwdiv@quotient:	
   639                           ; 1 bytes @ 0x6
   640                           
   641                           
   642                           ; 2 bytes @ 0x6
   643  0026                     	ds	1
   644  0027                     ??_lcd_cmnt:	
   645  0027                     ??_hex2integer:	
   646                           ; 0 bytes @ 0x7
   647                           
   648  0027                     ??_lcd_data:	
   649                           ; 0 bytes @ 0x7
   650                           
   651  0027                     lcd_cmnt@cmnt:	
   652                           ; 0 bytes @ 0x7
   653                           
   654  0027                     lcd_data@data:	
   655                           ; 1 bytes @ 0x7
   656                           
   657  0027                     ___awdiv@quotient:	
   658                           ; 1 bytes @ 0x7
   659                           
   660                           
   661                           ; 2 bytes @ 0x7
   662  0027                     	ds	1
   663  0028                     ??_lcd_init:	
   664  0028                     ?_uart_lcd_update:	
   665                           ; 0 bytes @ 0x8
   666                           
   667  0028                     ?___lwmod:	
   668                           ; 0 bytes @ 0x8
   669                           
   670  0028                     uart_lcd_update@len:	
   671                           ; 2 bytes @ 0x8
   672                           
   673  0028                     ___lwmod@divisor:	
   674                           ; 1 bytes @ 0x8
   675                           
   676                           
   677                           ; 2 bytes @ 0x8
   678  0028                     	ds	1
   679  0029                     ??_uart_lcd_update:	
   680  0029                     ?_int2hex:	
   681                           ; 0 bytes @ 0x9
   682                           
   683  0029                     int2hex@out:	
   684                           ; 0 bytes @ 0x9
   685                           
   686                           
   687                           ; 1 bytes @ 0x9
   688  0029                     	ds	1
   689  002A                     ??_int2hex:	
   690  002A                     uart_lcd_update@i:	
   691                           ; 0 bytes @ 0xA
   692                           
   693  002A                     ___lwmod@dividend:	
   694                           ; 2 bytes @ 0xA
   695                           
   696                           
   697                           ; 2 bytes @ 0xA
   698  002A                     	ds	2
   699  002C                     ??___lwmod:	
   700  002C                     hex2integer@in:	
   701                           ; 0 bytes @ 0xC
   702                           
   703  002C                     uart_lcd_update@data:	
   704                           ; 1 bytes @ 0xC
   705                           
   706                           
   707                           ; 1 bytes @ 0xC
   708  002C                     	ds	1
   709  002D                     int2hex@in:	
   710  002D                     ___lwmod@counter:	
   711                           ; 1 bytes @ 0xD
   712                           
   713                           
   714                           ; 1 bytes @ 0xD
   715  002D                     	ds	1
   716  002E                     ?_dec_year:	
   717  002E                     ?_inc_year:	
   718                           ; 0 bytes @ 0xE
   719                           
   720  002E                     ?_sprintf:	
   721                           ; 0 bytes @ 0xE
   722                           
   723  002E                     inc_year@index:	
   724                           ; 2 bytes @ 0xE
   725                           
   726  002E                     dec_year@index:	
   727                           ; 1 bytes @ 0xE
   728                           
   729  002E                     sprintf@f:	
   730                           ; 1 bytes @ 0xE
   731                           
   732                           
   733                           ; 1 bytes @ 0xE
   734  002E                     	ds	1
   735  002F                     ??_dec_year:	
   736  002F                     ??_inc_year:	
   737                           ; 0 bytes @ 0xF
   738                           
   739                           
   740                           ; 0 bytes @ 0xF
   741  002F                     	ds	1
   742  0030                     dec_year@data_ptr:	
   743                           
   744                           ; 1 bytes @ 0x10
   745  0030                     	ds	1
   746  0031                     inc_year@data_ptr:	
   747  0031                     dec_year@temp:	
   748                           ; 1 bytes @ 0x11
   749                           
   750                           
   751                           ; 1 bytes @ 0x11
   752  0031                     	ds	1
   753  0032                     inc_year@temp:	
   754                           
   755                           ; 1 bytes @ 0x12
   756  0032                     	ds	9
   757  003B                     ??_sprintf:	
   758                           
   759                           ; 0 bytes @ 0x1B
   760  003B                     	ds	3
   761  003E                     sprintf@ap:	
   762                           
   763                           ; 1 bytes @ 0x1E
   764  003E                     	ds	1
   765  003F                     sprintf@flag:	
   766                           
   767                           ; 1 bytes @ 0x1F
   768  003F                     	ds	1
   769  0040                     sprintf@prec:	
   770                           
   771                           ; 1 bytes @ 0x20
   772  0040                     	ds	1
   773  0041                     sprintf@_val:	
   774                           
   775                           ; 4 bytes @ 0x21
   776  0041                     	ds	4
   777  0045                     sprintf@sp:	
   778                           
   779                           ; 1 bytes @ 0x25
   780  0045                     	ds	1
   781  0046                     sprintf@c:	
   782                           
   783                           ; 1 bytes @ 0x26
   784  0046                     	ds	1
   785  0047                     ??_main:	
   786                           
   787                           ; 0 bytes @ 0x27
   788  0047                     	ds	13
   789  0054                     main@status:	
   790                           
   791                           ; 1 bytes @ 0x34
   792  0054                     	ds	1
   793  0055                     main@i:	
   794                           
   795                           ; 1 bytes @ 0x35
   796  0055                     	ds	1
   797                           
   798                           	psect	maintext
   799  003B                     __pmaintext:	
   800 ;;
   801 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
   802 ;;
   803 ;; *************** function _main *****************
   804 ;; Defined at:
   805 ;;		line 25 in file "i2c_driver.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  i               1   53[BANK0 ] unsigned char 
   810 ;;  status          1   52[BANK0 ] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;		None               void
   813 ;; Registers used:
   814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 17F/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         0       2       0       0       0
   822 ;;      Temps:          0      13       0       0       0
   823 ;;      Totals:         0      15       0       0       0
   824 ;;Total ram usage:       15 bytes
   825 ;; Hardware stack levels required when called:    4
   826 ;; This function calls:
   827 ;;		___bmul
   828 ;;		_dec_year
   829 ;;		_delay
   830 ;;		_hex2char
   831 ;;		_i2c_master_init
   832 ;;		_inc_year
   833 ;;		_lcd_cmnt
   834 ;;		_lcd_init
   835 ;;		_master_rx
   836 ;;		_master_tx
   837 ;;		_master_tx_write
   838 ;;		_space_stuff
   839 ;;		_sprintf
   840 ;;		_uart_lcd_update
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function _main
   848  003B                     _main:	
   849                           
   850                           ;i2c_driver.c: 29: TRISD=0X00;
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   854  003B  1683               	bsf	3,5	;RP0=1, select bank1
   855  003C  1303               	bcf	3,6	;RP1=0, select bank1
   856  003D  0188               	clrf	8	;volatile
   857                           
   858                           ;i2c_driver.c: 30: TRISE=0X00;
   859  003E  0189               	clrf	9	;volatile
   860                           
   861                           ;i2c_driver.c: 31: TRISB=0XFF;
   862  003F  30FF               	movlw	255
   863  0040  0086               	movwf	6	;volatile
   864                           
   865                           ;i2c_driver.c: 32: TRISA=0X00;
   866  0041  0185               	clrf	5	;volatile
   867                           
   868                           ;i2c_driver.c: 33: PORTD=0X00;
   869  0042  1283               	bcf	3,5	;RP0=0, select bank0
   870  0043  1303               	bcf	3,6	;RP1=0, select bank0
   871  0044  0188               	clrf	8	;volatile
   872                           
   873                           ;i2c_driver.c: 34: RBIE=1;
   874  0045  158B               	bsf	11,3	;volatile
   875                           
   876                           ;i2c_driver.c: 35: OPTION_REG=0XB0;
   877  0046  30B0               	movlw	176
   878  0047  1683               	bsf	3,5	;RP0=1, select bank1
   879  0048  1303               	bcf	3,6	;RP1=0, select bank1
   880  0049  0081               	movwf	1	;volatile
   881                           
   882                           ;i2c_driver.c: 39: i2c_pkt.address=0x68;
   883  004A  3068               	movlw	104
   884  004B  1283               	bcf	3,5	;RP0=0, select bank0
   885  004C  1303               	bcf	3,6	;RP1=0, select bank0
   886  004D  00C7               	movwf	??_main
   887  004E  0847               	movf	??_main,w
   888  004F  00E9               	movwf	_i2c_pkt
   889                           
   890                           ;i2c_driver.c: 40: i2c_pkt.data=0x00;
   891  0050  01EA               	clrf	_i2c_pkt+1
   892                           
   893                           ;i2c_driver.c: 41: i2c_pkt.ack =0;
   894  0051  01EB               	clrf	_i2c_pkt+2
   895                           
   896                           ;i2c_driver.c: 43: lcd_init();
   897  0052  120A  118A  270D  120A  118A  	fcall	_lcd_init
   898                           
   899                           ;i2c_driver.c: 44: i2c_master_init();
   900  0057  120A  118A  27D0  120A  118A  	fcall	_i2c_master_init
   901  005C                     l2401:	
   902                           ;i2c_driver.c: 46: while(1)
   903                           
   904                           
   905                           ;i2c_driver.c: 47: {
   906                           ;i2c_driver.c: 48: int_u8 i,status;
   907                           ;i2c_driver.c: 53: master_tx(&i2c_pkt);
   908  005C  3069               	movlw	_i2c_pkt& (0+255)
   909  005D  120A  118A  24C4  120A  118A  	fcall	_master_tx
   910                           
   911                           ;i2c_driver.c: 54: for(i=0,timer=(int_u8 *)&local_time;i<7;i++,timer++)
   912  0062  1283               	bcf	3,5	;RP0=0, select bank0
   913  0063  1303               	bcf	3,6	;RP1=0, select bank0
   914  0064  01D5               	clrf	main@i
   915  0065  30C0               	movlw	_local_time& (0+255)
   916  0066  00C7               	movwf	??_main
   917  0067  0847               	movf	??_main,w
   918  0068  00DB               	movwf	_timer
   919  0069  3007               	movlw	7
   920  006A  0255               	subwf	main@i,w
   921  006B  1803               	btfsc	3,0
   922  006C  2885               	goto	l2419
   923  006D                     l2411:	
   924                           
   925                           ;i2c_driver.c: 55: master_rx(&i2c_pkt,timer);
   926  006D  085B               	movf	_timer,w
   927  006E  00C7               	movwf	??_main
   928  006F  0847               	movf	??_main,w
   929  0070  00A0               	movwf	master_rx@rx_time
   930  0071  3069               	movlw	_i2c_pkt& (0+255)
   931  0072  120A  118A  2420  120A  118A  	fcall	_master_rx
   932  0077  3001               	movlw	1
   933  0078  1283               	bcf	3,5	;RP0=0, select bank0
   934  0079  1303               	bcf	3,6	;RP1=0, select bank0
   935  007A  00C7               	movwf	??_main
   936  007B  0847               	movf	??_main,w
   937  007C  07D5               	addwf	main@i,f
   938  007D  3001               	movlw	1
   939  007E  00C7               	movwf	??_main
   940  007F  0847               	movf	??_main,w
   941  0080  07DB               	addwf	_timer,f
   942  0081  3007               	movlw	7
   943  0082  0255               	subwf	main@i,w
   944  0083  1C03               	skipc
   945  0084  286D               	goto	l2411
   946  0085                     l2419:	
   947                           
   948                           ;i2c_driver.c: 58: hex2char(local_time.HH,hour);
   949  0085  305F               	movlw	_hour& (0+255)
   950  0086  00C7               	movwf	??_main
   951  0087  0847               	movf	??_main,w
   952  0088  00A0               	movwf	hex2char@out
   953  0089  1683               	bsf	3,5	;RP0=1, select bank1
   954  008A  1303               	bcf	3,6	;RP1=0, select bank1
   955  008B  0842               	movf	(_local_time^(0+128)+2),w
   956  008C  120A  118A  272E  120A  118A  	fcall	_hex2char
   957                           
   958                           ;i2c_driver.c: 59: hex2char(local_time.MM,min);
   959  0091  3061               	movlw	_min& (0+255)
   960  0092  1283               	bcf	3,5	;RP0=0, select bank0
   961  0093  1303               	bcf	3,6	;RP1=0, select bank0
   962  0094  00C7               	movwf	??_main
   963  0095  0847               	movf	??_main,w
   964  0096  00A0               	movwf	hex2char@out
   965  0097  1683               	bsf	3,5	;RP0=1, select bank1
   966  0098  1303               	bcf	3,6	;RP1=0, select bank1
   967  0099  0841               	movf	(_local_time^(0+128)+1),w
   968  009A  120A  118A  272E  120A  118A  	fcall	_hex2char
   969                           
   970                           ;i2c_driver.c: 60: hex2char(local_time.SS,sec);
   971  009F  3065               	movlw	_sec& (0+255)
   972  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   973  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   974  00A2  00C7               	movwf	??_main
   975  00A3  0847               	movf	??_main,w
   976  00A4  00A0               	movwf	hex2char@out
   977  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   978  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   979  00A7  0840               	movf	_local_time^(0+128),w
   980  00A8  120A  118A  272E  120A  118A  	fcall	_hex2char
   981                           
   982                           ;i2c_driver.c: 61: day=local_time.day;
   983  00AD  1683               	bsf	3,5	;RP0=1, select bank1
   984  00AE  1303               	bcf	3,6	;RP1=0, select bank1
   985  00AF  0843               	movf	(_local_time^(0+128)+3),w
   986  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   987  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   988  00B2  00C7               	movwf	??_main
   989  00B3  0847               	movf	??_main,w
   990  00B4  00F5               	movwf	_day
   991                           
   992                           ;i2c_driver.c: 62: sprintf(lcd_msg,"Time: %d%d-%d%d-%d%d  ",hour[1],hour[0],min[1],min[0
      +                          ],sec[1],sec[0]);
   993  00B5  300B               	movlw	(STR_1-__stringbase)& (0+255)
   994  00B6  00C7               	movwf	??_main
   995  00B7  0847               	movf	??_main,w
   996  00B8  00AE               	movwf	sprintf@f
   997  00B9  0860               	movf	_hour+1,w
   998  00BA  00C8               	movwf	??_main+1
   999  00BB  01C9               	clrf	??_main+2
  1000  00BC  0848               	movf	??_main+1,w
  1001  00BD  00AF               	movwf	?_sprintf+1
  1002  00BE  0849               	movf	??_main+2,w
  1003  00BF  00B0               	movwf	?_sprintf+2
  1004  00C0  085F               	movf	_hour,w
  1005  00C1  00CA               	movwf	??_main+3
  1006  00C2  01CB               	clrf	??_main+4
  1007  00C3  084A               	movf	??_main+3,w
  1008  00C4  00B1               	movwf	?_sprintf+3
  1009  00C5  084B               	movf	??_main+4,w
  1010  00C6  00B2               	movwf	?_sprintf+4
  1011  00C7  0862               	movf	_min+1,w
  1012  00C8  00CC               	movwf	??_main+5
  1013  00C9  01CD               	clrf	??_main+6
  1014  00CA  084C               	movf	??_main+5,w
  1015  00CB  00B3               	movwf	?_sprintf+5
  1016  00CC  084D               	movf	??_main+6,w
  1017  00CD  00B4               	movwf	?_sprintf+6
  1018  00CE  0861               	movf	_min,w
  1019  00CF  00CE               	movwf	??_main+7
  1020  00D0  01CF               	clrf	??_main+8
  1021  00D1  084E               	movf	??_main+7,w
  1022  00D2  00B5               	movwf	?_sprintf+7
  1023  00D3  084F               	movf	??_main+8,w
  1024  00D4  00B6               	movwf	?_sprintf+8
  1025  00D5  0866               	movf	_sec+1,w
  1026  00D6  00D0               	movwf	??_main+9
  1027  00D7  01D1               	clrf	??_main+10
  1028  00D8  0850               	movf	??_main+9,w
  1029  00D9  00B7               	movwf	?_sprintf+9
  1030  00DA  0851               	movf	??_main+10,w
  1031  00DB  00B8               	movwf	?_sprintf+10
  1032  00DC  0865               	movf	_sec,w
  1033  00DD  00D2               	movwf	??_main+11
  1034  00DE  01D3               	clrf	??_main+12
  1035  00DF  0852               	movf	??_main+11,w
  1036  00E0  00B9               	movwf	?_sprintf+11
  1037  00E1  0853               	movf	??_main+12,w
  1038  00E2  00BA               	movwf	?_sprintf+12
  1039  00E3  30A0               	movlw	_lcd_msg& (0+255)
  1040  00E4  120A  118A  2263  120A  118A  	fcall	_sprintf
  1041                           
  1042                           ;i2c_driver.c: 63: lcd_cmnt(0x80);
  1043  00E9  3080               	movlw	128
  1044  00EA  120A  118A  27AD  120A  118A  	fcall	_lcd_cmnt
  1045                           
  1046                           ;i2c_driver.c: 64: uart_lcd_update(lcd_msg,sizeof(lcd_msg));
  1047  00EF  3010               	movlw	16
  1048  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1049  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1050  00F2  00C7               	movwf	??_main
  1051  00F3  0847               	movf	??_main,w
  1052  00F4  00A8               	movwf	uart_lcd_update@len
  1053  00F5  30A0               	movlw	_lcd_msg& (0+255)
  1054  00F6  120A  118A  26E6  120A  118A  	fcall	_uart_lcd_update
  1055                           
  1056                           ;i2c_driver.c: 65: hex2char(local_time.date,date);
  1057  00FB  305D               	movlw	_date& (0+255)
  1058  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1059  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1060  00FE  00C7               	movwf	??_main
  1061  00FF  0847               	movf	??_main,w
  1062  0100  00A0               	movwf	hex2char@out
  1063  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1064  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1065  0103  0844               	movf	(_local_time^(0+128)+4),w
  1066  0104  120A  118A  272E  120A  118A  	fcall	_hex2char
  1067                           
  1068                           ;i2c_driver.c: 66: hex2char(local_time.month,month);
  1069  0109  3063               	movlw	_month& (0+255)
  1070  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1071  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1072  010C  00C7               	movwf	??_main
  1073  010D  0847               	movf	??_main,w
  1074  010E  00A0               	movwf	hex2char@out
  1075  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1076  0110  1303               	bcf	3,6	;RP1=0, select bank1
  1077  0111  0845               	movf	(_local_time^(0+128)+5),w
  1078  0112  120A  118A  272E  120A  118A  	fcall	_hex2char
  1079                           
  1080                           ;i2c_driver.c: 67: hex2char(local_time.year,year);
  1081  0117  3067               	movlw	_year& (0+255)
  1082  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1084  011A  00C7               	movwf	??_main
  1085  011B  0847               	movf	??_main,w
  1086  011C  00A0               	movwf	hex2char@out
  1087  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1088  011E  1303               	bcf	3,6	;RP1=0, select bank1
  1089  011F  0846               	movf	(_local_time^(0+128)+6),w
  1090  0120  120A  118A  272E  120A  118A  	fcall	_hex2char
  1091                           
  1092                           ;i2c_driver.c: 68: sprintf(lcd_msg1,"Date: %d%d-%d%d-%d%d  ",date[1],date[0],month[1],mo
      +                          nth[0],year[1],year[0]);
  1093  0125  3022               	movlw	(STR_2-__stringbase)& (0+255)
  1094  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0128  00C7               	movwf	??_main
  1097  0129  0847               	movf	??_main,w
  1098  012A  00AE               	movwf	sprintf@f
  1099  012B  085E               	movf	_date+1,w
  1100  012C  00C8               	movwf	??_main+1
  1101  012D  01C9               	clrf	??_main+2
  1102  012E  0848               	movf	??_main+1,w
  1103  012F  00AF               	movwf	?_sprintf+1
  1104  0130  0849               	movf	??_main+2,w
  1105  0131  00B0               	movwf	?_sprintf+2
  1106  0132  085D               	movf	_date,w
  1107  0133  00CA               	movwf	??_main+3
  1108  0134  01CB               	clrf	??_main+4
  1109  0135  084A               	movf	??_main+3,w
  1110  0136  00B1               	movwf	?_sprintf+3
  1111  0137  084B               	movf	??_main+4,w
  1112  0138  00B2               	movwf	?_sprintf+4
  1113  0139  0864               	movf	_month+1,w
  1114  013A  00CC               	movwf	??_main+5
  1115  013B  01CD               	clrf	??_main+6
  1116  013C  084C               	movf	??_main+5,w
  1117  013D  00B3               	movwf	?_sprintf+5
  1118  013E  084D               	movf	??_main+6,w
  1119  013F  00B4               	movwf	?_sprintf+6
  1120  0140  0863               	movf	_month,w
  1121  0141  00CE               	movwf	??_main+7
  1122  0142  01CF               	clrf	??_main+8
  1123  0143  084E               	movf	??_main+7,w
  1124  0144  00B5               	movwf	?_sprintf+7
  1125  0145  084F               	movf	??_main+8,w
  1126  0146  00B6               	movwf	?_sprintf+8
  1127  0147  0868               	movf	_year+1,w
  1128  0148  00D0               	movwf	??_main+9
  1129  0149  01D1               	clrf	??_main+10
  1130  014A  0850               	movf	??_main+9,w
  1131  014B  00B7               	movwf	?_sprintf+9
  1132  014C  0851               	movf	??_main+10,w
  1133  014D  00B8               	movwf	?_sprintf+10
  1134  014E  0867               	movf	_year,w
  1135  014F  00D2               	movwf	??_main+11
  1136  0150  01D3               	clrf	??_main+12
  1137  0151  0852               	movf	??_main+11,w
  1138  0152  00B9               	movwf	?_sprintf+11
  1139  0153  0853               	movf	??_main+12,w
  1140  0154  00BA               	movwf	?_sprintf+12
  1141  0155  30B0               	movlw	_lcd_msg1& (0+255)
  1142  0156  120A  118A  2263  120A  118A  	fcall	_sprintf
  1143                           
  1144                           ;i2c_driver.c: 69: lcd_cmnt(0xC0);
  1145  015B  30C0               	movlw	192
  1146  015C  120A  118A  27AD  120A  118A  	fcall	_lcd_cmnt
  1147                           
  1148                           ;i2c_driver.c: 70: uart_lcd_update(lcd_msg1,sizeof(lcd_msg1));
  1149  0161  3010               	movlw	16
  1150  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0164  00C7               	movwf	??_main
  1153  0165  0847               	movf	??_main,w
  1154  0166  00A8               	movwf	uart_lcd_update@len
  1155  0167  30B0               	movlw	_lcd_msg1& (0+255)
  1156  0168  120A  118A  26E6  120A  118A  	fcall	_uart_lcd_update
  1157                           
  1158                           ;i2c_driver.c: 71: delay(100);
  1159  016D  3064               	movlw	100
  1160  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1161  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0170  00A0               	movwf	delay@x
  1163  0171  3000               	movlw	0
  1164  0172  00A1               	movwf	delay@x+1
  1165  0173  120A  118A  262D  120A  118A  	fcall	_delay
  1166                           
  1167                           ;i2c_driver.c: 74: while(flag)
  1168  0178  29B2               	goto	l2483
  1169  0179                     l2463:	
  1170                           ;i2c_driver.c: 97: {
  1171                           ;i2c_driver.c: 100: case DOWN:
  1172                           
  1173                           ;i2c_driver.c: 96: switch(key_nav)
  1174                           
  1175                           
  1176                           ;i2c_driver.c: 101: dec_year(timer_ptr[7-inc],7-inc);
  1177  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1178  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1179  017B  0358               	decf	_inc,w
  1180  017C  3AFF               	xorlw	255
  1181  017D  3E07               	addlw	7
  1182  017E  00C7               	movwf	??_main
  1183  017F  0847               	movf	??_main,w
  1184  0180  00AE               	movwf	dec_year@index
  1185  0181  0358               	decf	_inc,w
  1186  0182  3AFF               	xorlw	255
  1187  0183  3E07               	addlw	7
  1188  0184  3ED5               	addlw	_timer_ptr& (0+255)
  1189  0185  0084               	movwf	4
  1190  0186  1383               	bcf	3,7	;select IRP bank1
  1191  0187  0800               	movf	0,w
  1192  0188  120A  118A  26BA  120A  118A  	fcall	_dec_year
  1193  018D  29A0               	goto	l2469
  1194  018E                     l2467:	
  1195                           ;i2c_driver.c: 105: case UP:
  1196                           
  1197                           ;i2c_driver.c: 103: break;
  1198                           
  1199                           ;i2c_driver.c: 102: key_nav=0;
  1200                           
  1201                           
  1202                           ;i2c_driver.c: 106: inc_year(timer_ptr[7-inc],7-inc);
  1203  018E  0358               	decf	_inc,w
  1204  018F  3AFF               	xorlw	255
  1205  0190  3E07               	addlw	7
  1206  0191  00C7               	movwf	??_main
  1207  0192  0847               	movf	??_main,w
  1208  0193  00AE               	movwf	inc_year@index
  1209  0194  0358               	decf	_inc,w
  1210  0195  3AFF               	xorlw	255
  1211  0196  3E07               	addlw	7
  1212  0197  3ED5               	addlw	_timer_ptr& (0+255)
  1213  0198  0084               	movwf	4
  1214  0199  1383               	bcf	3,7	;select IRP bank1
  1215  019A  0800               	movf	0,w
  1216  019B  120A  118A  265F  120A  118A  	fcall	_inc_year
  1217  01A0                     l2469:	
  1218                           
  1219                           ;i2c_driver.c: 107: key_nav=0;
  1220  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1221  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1222  01A2  01D9               	clrf	_key_nav
  1223                           
  1224                           ;i2c_driver.c: 108: break;
  1225  01A3  29B2               	goto	l2483
  1226  01A4                     l2471:	
  1227                           ;i2c_driver.c: 110: case SET_KEY:
  1228                           
  1229                           
  1230                           ;i2c_driver.c: 112: status = master_tx_write(&i2c_pkt);
  1231  01A4  3069               	movlw	_i2c_pkt& (0+255)
  1232  01A5  120A  118A  233E  120A  118A  	fcall	_master_tx_write
  1233  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1234  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1235  01AC  00C7               	movwf	??_main
  1236  01AD  0847               	movf	??_main,w
  1237  01AE  00D4               	movwf	main@status
  1238                           
  1239                           ;i2c_driver.c: 113: flag = 0;
  1240  01AF  01D7               	clrf	_flag
  1241                           
  1242                           ;i2c_driver.c: 114: key_nav=0;
  1243  01B0  01D9               	clrf	_key_nav
  1244                           
  1245                           ;i2c_driver.c: 115: inc=0;
  1246  01B1  01D8               	clrf	_inc
  1247  01B2                     l2483:	
  1248                           ;i2c_driver.c: 117: }
  1249                           
  1250                           ;i2c_driver.c: 116: break;
  1251                           
  1252  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1253  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1254  01B4  08D7               	movf	_flag,f
  1255  01B5  1903               	btfsc	3,2
  1256  01B6  2A60               	goto	l2485
  1257                           
  1258                           ;i2c_driver.c: 75: {
  1259                           ;i2c_driver.c: 83: lcd_cmnt(0x80);
  1260  01B7  3080               	movlw	128
  1261  01B8  120A  118A  27AD  120A  118A  	fcall	_lcd_cmnt
  1262                           
  1263                           ;i2c_driver.c: 84: uart_lcd_update(lcd_msg,sizeof(lcd_msg));
  1264  01BD  3010               	movlw	16
  1265  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1266  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1267  01C0  00C7               	movwf	??_main
  1268  01C1  0847               	movf	??_main,w
  1269  01C2  00A8               	movwf	uart_lcd_update@len
  1270  01C3  30A0               	movlw	_lcd_msg& (0+255)
  1271  01C4  120A  118A  26E6  120A  118A  	fcall	_uart_lcd_update
  1272                           
  1273                           ;i2c_driver.c: 85: sprintf(lcd_msg1,"Date: %d%d-%d%d-%d%d  ",date[1],date[0],month[1],mo
      +                          nth[0],year[1],year[0]);
  1274  01C9  3022               	movlw	(STR_2-__stringbase)& (0+255)
  1275  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1276  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1277  01CC  00C7               	movwf	??_main
  1278  01CD  0847               	movf	??_main,w
  1279  01CE  00AE               	movwf	sprintf@f
  1280  01CF  085E               	movf	_date+1,w
  1281  01D0  00C8               	movwf	??_main+1
  1282  01D1  01C9               	clrf	??_main+2
  1283  01D2  0848               	movf	??_main+1,w
  1284  01D3  00AF               	movwf	?_sprintf+1
  1285  01D4  0849               	movf	??_main+2,w
  1286  01D5  00B0               	movwf	?_sprintf+2
  1287  01D6  085D               	movf	_date,w
  1288  01D7  00CA               	movwf	??_main+3
  1289  01D8  01CB               	clrf	??_main+4
  1290  01D9  084A               	movf	??_main+3,w
  1291  01DA  00B1               	movwf	?_sprintf+3
  1292  01DB  084B               	movf	??_main+4,w
  1293  01DC  00B2               	movwf	?_sprintf+4
  1294  01DD  0864               	movf	_month+1,w
  1295  01DE  00CC               	movwf	??_main+5
  1296  01DF  01CD               	clrf	??_main+6
  1297  01E0  084C               	movf	??_main+5,w
  1298  01E1  00B3               	movwf	?_sprintf+5
  1299  01E2  084D               	movf	??_main+6,w
  1300  01E3  00B4               	movwf	?_sprintf+6
  1301  01E4  0863               	movf	_month,w
  1302  01E5  00CE               	movwf	??_main+7
  1303  01E6  01CF               	clrf	??_main+8
  1304  01E7  084E               	movf	??_main+7,w
  1305  01E8  00B5               	movwf	?_sprintf+7
  1306  01E9  084F               	movf	??_main+8,w
  1307  01EA  00B6               	movwf	?_sprintf+8
  1308  01EB  0868               	movf	_year+1,w
  1309  01EC  00D0               	movwf	??_main+9
  1310  01ED  01D1               	clrf	??_main+10
  1311  01EE  0850               	movf	??_main+9,w
  1312  01EF  00B7               	movwf	?_sprintf+9
  1313  01F0  0851               	movf	??_main+10,w
  1314  01F1  00B8               	movwf	?_sprintf+10
  1315  01F2  0867               	movf	_year,w
  1316  01F3  00D2               	movwf	??_main+11
  1317  01F4  01D3               	clrf	??_main+12
  1318  01F5  0852               	movf	??_main+11,w
  1319  01F6  00B9               	movwf	?_sprintf+11
  1320  01F7  0853               	movf	??_main+12,w
  1321  01F8  00BA               	movwf	?_sprintf+12
  1322  01F9  30B0               	movlw	_lcd_msg1& (0+255)
  1323  01FA  120A  118A  2263  120A  118A  	fcall	_sprintf
  1324                           
  1325                           ;i2c_driver.c: 86: lcd_cmnt(0xC0);
  1326  01FF  30C0               	movlw	192
  1327  0200  120A  118A  27AD  120A  118A  	fcall	_lcd_cmnt
  1328                           
  1329                           ;i2c_driver.c: 87: uart_lcd_update(lcd_msg1,sizeof(lcd_msg1));
  1330  0205  3010               	movlw	16
  1331  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0208  00C7               	movwf	??_main
  1334  0209  0847               	movf	??_main,w
  1335  020A  00A8               	movwf	uart_lcd_update@len
  1336  020B  30B0               	movlw	_lcd_msg1& (0+255)
  1337  020C  120A  118A  26E6  120A  118A  	fcall	_uart_lcd_update
  1338                           
  1339                           ;i2c_driver.c: 90: delay(50);
  1340  0211  3032               	movlw	50
  1341  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1343  0214  00A0               	movwf	delay@x
  1344  0215  3000               	movlw	0
  1345  0216  00A1               	movwf	delay@x+1
  1346  0217  120A  118A  262D  120A  118A  	fcall	_delay
  1347                           
  1348                           ;i2c_driver.c: 92: space_stuff(lcd_msg1+12-((inc-1)*3),inc);
  1349  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1350  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1351  021E  0858               	movf	_inc,w
  1352  021F  00C7               	movwf	??_main
  1353  0220  0847               	movf	??_main,w
  1354  0221  00A4               	movwf	space_stuff@index
  1355  0222  3003               	movlw	3
  1356  0223  00C8               	movwf	??_main+1
  1357  0224  0848               	movf	??_main+1,w
  1358  0225  00A0               	movwf	___bmul@multiplicand
  1359  0226  0858               	movf	_inc,w
  1360  0227  3EFF               	addlw	-1
  1361  0228  120A  118A  2788  120A  118A  	fcall	___bmul
  1362  022D  3AFF               	xorlw	255
  1363  022E  3E01               	addlw	1
  1364  022F  3EBC               	addlw	(_lcd_msg1+12)& (0+255)
  1365  0230  120A  118A  2773  120A  118A  	fcall	_space_stuff
  1366                           
  1367                           ;i2c_driver.c: 93: lcd_cmnt(0xC0);
  1368  0235  30C0               	movlw	192
  1369  0236  120A  118A  27AD  120A  118A  	fcall	_lcd_cmnt
  1370                           
  1371                           ;i2c_driver.c: 94: uart_lcd_update(lcd_msg1,sizeof(lcd_msg1));
  1372  023B  3010               	movlw	16
  1373  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1374  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1375  023E  00C7               	movwf	??_main
  1376  023F  0847               	movf	??_main,w
  1377  0240  00A8               	movwf	uart_lcd_update@len
  1378  0241  30B0               	movlw	_lcd_msg1& (0+255)
  1379  0242  120A  118A  26E6  120A  118A  	fcall	_uart_lcd_update
  1380                           
  1381                           ;i2c_driver.c: 95: delay(50);
  1382  0247  3032               	movlw	50
  1383  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1385  024A  00A0               	movwf	delay@x
  1386  024B  3000               	movlw	0
  1387  024C  00A1               	movwf	delay@x+1
  1388  024D  120A  118A  262D  120A  118A  	fcall	_delay
  1389  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0254  0859               	movf	_key_nav,w
  1392                           
  1393                           ; Switch size 1, requested type "space"
  1394                           ; Number of cases is 3, Range of values is 2 to 8
  1395                           ; switch strategies available:
  1396                           ; Name         Instructions Cycles
  1397                           ; simple_byte           10     6 (average)
  1398                           ; direct_byte           32    11 (fixed)
  1399                           ; jumptable            263     9 (fixed)
  1400                           ;	Chosen strategy is simple_byte
  1401  0255  3A02               	xorlw	2	; case 2
  1402  0256  1903               	skipnz
  1403  0257  298E               	goto	l2467
  1404  0258  3A06               	xorlw	6	; case 4
  1405  0259  1903               	skipnz
  1406  025A  2979               	goto	l2463
  1407  025B  3A0C               	xorlw	12	; case 8
  1408  025C  1903               	skipnz
  1409  025D  29A4               	goto	l2471
  1410  025E  29B2               	goto	l2483
  1411  025F  29B2               	goto	l2483
  1412  0260                     l2485:	
  1413                           
  1414                           ;i2c_driver.c: 119: }
  1415                           ;i2c_driver.c: 120: PORTA=1;
  1416  0260  3001               	movlw	1
  1417  0261  0085               	movwf	5	;volatile
  1418  0262  285C               	goto	l2401
  1419  0263                     __end_of_main:	
  1420                           
  1421                           	psect	text1
  1422  06E6                     __ptext1:	
  1423 ;; *************** function _uart_lcd_update *****************
  1424 ;; Defined at:
  1425 ;;		line 43 in file "lcd_driver.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  data            1    wreg     PTR unsigned char 
  1428 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1429 ;;  len             1    8[BANK0 ] unsigned char 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  data            1   12[BANK0 ] PTR unsigned char 
  1432 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1433 ;;  i               2   10[BANK0 ] int 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;		None               void
  1436 ;; Registers used:
  1437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1443 ;;      Params:         0       1       0       0       0
  1444 ;;      Locals:         0       3       0       0       0
  1445 ;;      Temps:          0       1       0       0       0
  1446 ;;      Totals:         0       5       0       0       0
  1447 ;;Total ram usage:        5 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    3
  1450 ;; This function calls:
  1451 ;;		_lcd_data
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           
  1458                           ;psect for function _uart_lcd_update
  1459  06E6                     _uart_lcd_update:	
  1460                           
  1461                           ;incstack = 0
  1462                           ; Regs used in _uart_lcd_update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1463                           ;uart_lcd_update@data stored from wreg
  1464  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1465  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1466  06E8  00AC               	movwf	uart_lcd_update@data
  1467                           
  1468                           ;lcd_driver.c: 46: for(i=0;i<len;i++)
  1469  06E9  01AA               	clrf	uart_lcd_update@i
  1470  06EA  01AB               	clrf	uart_lcd_update@i+1
  1471  06EB                     l2309:	
  1472  06EB  082B               	movf	uart_lcd_update@i+1,w
  1473  06EC  3A80               	xorlw	128
  1474  06ED  00A9               	movwf	??_uart_lcd_update
  1475  06EE  3080               	movlw	128
  1476  06EF  0229               	subwf	??_uart_lcd_update,w
  1477  06F0  1D03               	skipz
  1478  06F1  2EF4               	goto	u2165
  1479  06F2  0828               	movf	uart_lcd_update@len,w
  1480  06F3  022A               	subwf	uart_lcd_update@i,w
  1481  06F4                     u2165:	
  1482  06F4  1803               	btfsc	3,0
  1483  06F5  0008               	return
  1484                           
  1485                           ;lcd_driver.c: 47: {
  1486                           ;lcd_driver.c: 48: lcd_data(*(data+i));
  1487  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1488  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1489  06F8  082A               	movf	uart_lcd_update@i,w
  1490  06F9  072C               	addwf	uart_lcd_update@data,w
  1491  06FA  00A9               	movwf	??_uart_lcd_update
  1492  06FB  0829               	movf	??_uart_lcd_update,w
  1493  06FC  0084               	movwf	4
  1494  06FD  1383               	bcf	3,7	;select IRP bank0
  1495  06FE  0800               	movf	0,w
  1496  06FF  120A  118A  279B  120A  118A  	fcall	_lcd_data
  1497  0704  3001               	movlw	1
  1498  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0707  07AA               	addwf	uart_lcd_update@i,f
  1501  0708  1803               	skipnc
  1502  0709  0AAB               	incf	uart_lcd_update@i+1,f
  1503  070A  3000               	movlw	0
  1504  070B  07AB               	addwf	uart_lcd_update@i+1,f
  1505  070C  2EEB               	goto	l2309
  1506  070D                     __end_of_uart_lcd_update:	
  1507                           
  1508                           	psect	text2
  1509  079B                     __ptext2:	
  1510 ;; *************** function _lcd_data *****************
  1511 ;; Defined at:
  1512 ;;		line 35 in file "lcd_driver.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  data            1    wreg     unsigned char 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  data            1    7[BANK0 ] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;		None               void
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       0       0       0       0
  1527 ;;      Locals:         0       1       0       0       0
  1528 ;;      Temps:          0       0       0       0       0
  1529 ;;      Totals:         0       1       0       0       0
  1530 ;;Total ram usage:        1 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    2
  1533 ;; This function calls:
  1534 ;;		_delay
  1535 ;; This function is called by:
  1536 ;;		_uart_lcd_update
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _lcd_data
  1542  079B                     _lcd_data:	
  1543                           
  1544                           ;incstack = 0
  1545                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1546                           ;lcd_data@data stored from wreg
  1547  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1548  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1549  079D  00A7               	movwf	lcd_data@data
  1550                           
  1551                           ;lcd_driver.c: 37: PORTD=data;
  1552  079E  0827               	movf	lcd_data@data,w
  1553  079F  0088               	movwf	8	;volatile
  1554                           
  1555                           ;lcd_driver.c: 38: RE0=1;
  1556  07A0  1409               	bsf	9,0	;volatile
  1557                           
  1558                           ;lcd_driver.c: 39: RE1=1;delay(10);RE1=0;;
  1559  07A1  1489               	bsf	9,1	;volatile
  1560  07A2  300A               	movlw	10
  1561  07A3  00A0               	movwf	delay@x
  1562  07A4  3000               	movlw	0
  1563  07A5  00A1               	movwf	delay@x+1
  1564  07A6  120A  118A  262D   	fcall	_delay
  1565  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1566  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1567  07AB  1089               	bcf	9,1	;volatile
  1568  07AC  0008               	return
  1569  07AD                     __end_of_lcd_data:	
  1570                           
  1571                           	psect	text3
  1572  0263                     __ptext3:	
  1573 ;; *************** function _sprintf *****************
  1574 ;; Defined at:
  1575 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  sp              1    wreg     PTR unsigned char 
  1578 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1579 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1580 ;;		 -> STR_3(23), STR_2(23), STR_1(23), 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  sp              1   37[BANK0 ] PTR unsigned char 
  1583 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1584 ;;  _val            4   33[BANK0 ] struct .
  1585 ;;  c               1   38[BANK0 ] char 
  1586 ;;  prec            1   32[BANK0 ] char 
  1587 ;;  flag            1   31[BANK0 ] unsigned char 
  1588 ;;  ap              1   30[BANK0 ] PTR void [1]
  1589 ;;		 -> ?_sprintf(2), 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  2   14[BANK0 ] int 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0      13       0       0       0
  1600 ;;      Locals:         0       9       0       0       0
  1601 ;;      Temps:          0       3       0       0       0
  1602 ;;      Totals:         0      25       0       0       0
  1603 ;;Total ram usage:       25 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    2
  1606 ;; This function calls:
  1607 ;;		___lwdiv
  1608 ;;		___lwmod
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _sprintf
  1616  0263                     _sprintf:	
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1620                           ;sprintf@sp stored from wreg
  1621  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0265  00C5               	movwf	sprintf@sp
  1624                           
  1625                           ;doprnt.c: 494: va_list ap;
  1626                           ;doprnt.c: 499: signed char c;
  1627                           ;doprnt.c: 506: signed char prec;
  1628                           ;doprnt.c: 508: unsigned char flag;
  1629                           ;doprnt.c: 527: union {
  1630                           ;doprnt.c: 528: unsigned int _val;
  1631                           ;doprnt.c: 529: struct {
  1632                           ;doprnt.c: 530: const char * _cp;
  1633                           ;doprnt.c: 531: unsigned _len;
  1634                           ;doprnt.c: 532: } _str;
  1635                           ;doprnt.c: 533: } _val;
  1636                           ;doprnt.c: 542: *ap = __va_start();
  1637  0266  302F               	movlw	(?_sprintf+1)& (0+255)
  1638  0267  00BB               	movwf	??_sprintf
  1639  0268  083B               	movf	??_sprintf,w
  1640  0269  00BE               	movwf	sprintf@ap
  1641  026A                     l2297:	
  1642                           ;doprnt.c: 545: while(c = *f++) {
  1643                           
  1644  026A  3001               	movlw	1
  1645  026B  07AE               	addwf	sprintf@f,f
  1646  026C  30FF               	movlw	-1
  1647  026D  072E               	addwf	sprintf@f,w
  1648  026E  0084               	movwf	4
  1649  026F  120A  118A  2545  120A  118A  	fcall	stringdir
  1650  0274  00BB               	movwf	??_sprintf
  1651  0275  083B               	movf	??_sprintf,w
  1652  0276  00C6               	movwf	sprintf@c
  1653  0277  08C6               	movf	sprintf@c,f
  1654  0278  1903               	btfsc	3,2
  1655  0279  2B39               	goto	l2299
  1656                           
  1657                           ;doprnt.c: 547: if(c != '%')
  1658  027A  0846               	movf	sprintf@c,w
  1659  027B  3A25               	xorlw	37
  1660  027C  1903               	skipnz
  1661  027D  2A8A               	goto	l2253
  1662                           
  1663                           ;doprnt.c: 549: {
  1664                           ;doprnt.c: 550: ((*sp++ = (c)));
  1665  027E  0846               	movf	sprintf@c,w
  1666  027F  00BB               	movwf	??_sprintf
  1667  0280  0845               	movf	sprintf@sp,w
  1668  0281  0084               	movwf	4
  1669  0282  083B               	movf	??_sprintf,w
  1670  0283  1383               	bcf	3,7	;select IRP bank0
  1671  0284  0080               	movwf	0
  1672  0285  3001               	movlw	1
  1673  0286  00BB               	movwf	??_sprintf
  1674  0287  083B               	movf	??_sprintf,w
  1675  0288  07C5               	addwf	sprintf@sp,f
  1676                           
  1677                           ;doprnt.c: 551: continue;
  1678  0289  2A6A               	goto	l2297
  1679  028A                     l2253:	
  1680                           
  1681                           ;doprnt.c: 552: }
  1682                           ;doprnt.c: 557: flag = 0;
  1683  028A  01BF               	clrf	sprintf@flag
  1684                           
  1685                           ;doprnt.c: 831: }
  1686                           
  1687                           ;doprnt.c: 822: continue;
  1688                           
  1689                           ;doprnt.c: 811: default:
  1690                           
  1691                           ;doprnt.c: 707: case 'i':
  1692                           ;doprnt.c: 708: break;
  1693                           
  1694                           ;doprnt.c: 706: case 'd':
  1695                           
  1696                           ;doprnt.c: 647: goto alldone;
  1697                           
  1698                           ;doprnt.c: 646: case 0:
  1699                           
  1700                           ;doprnt.c: 644: switch(c = *f++) {
  1701  028B  3001               	movlw	1
  1702  028C  07AE               	addwf	sprintf@f,f
  1703  028D  30FF               	movlw	-1
  1704  028E  072E               	addwf	sprintf@f,w
  1705  028F  0084               	movwf	4
  1706  0290  120A  118A  2545  120A  118A  	fcall	stringdir
  1707  0295  00C6               	movwf	sprintf@c
  1708                           
  1709                           ; Switch size 1, requested type "space"
  1710                           ; Number of cases is 3, Range of values is 0 to 105
  1711                           ; switch strategies available:
  1712                           ; Name         Instructions Cycles
  1713                           ; simple_byte           10     6 (average)
  1714                           ; jumptable            260     6 (fixed)
  1715                           ;	Chosen strategy is simple_byte
  1716  0296  3A00               	xorlw	0	; case 0
  1717  0297  1903               	skipnz
  1718  0298  2B39               	goto	l2299
  1719  0299  3A64               	xorlw	100	; case 100
  1720  029A  1903               	skipnz
  1721  029B  2AA0               	goto	l2259
  1722  029C  3A0D               	xorlw	13	; case 105
  1723  029D  1903               	skipnz
  1724  029E  2AA0               	goto	l2259
  1725  029F  2A6A               	goto	l2297
  1726  02A0                     l2259:	
  1727                           
  1728                           ;doprnt.c: 1262: {
  1729                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1730  02A0  083E               	movf	sprintf@ap,w
  1731  02A1  0084               	movwf	4
  1732  02A2  1383               	bcf	3,7	;select IRP bank0
  1733  02A3  0800               	movf	0,w
  1734  02A4  00C1               	movwf	sprintf@_val
  1735  02A5  0A84               	incf	4,f
  1736  02A6  0800               	movf	0,w
  1737  02A7  00C2               	movwf	sprintf@_val+1
  1738  02A8  3002               	movlw	2
  1739  02A9  00BB               	movwf	??_sprintf
  1740  02AA  083B               	movf	??_sprintf,w
  1741  02AB  07BE               	addwf	sprintf@ap,f
  1742                           
  1743                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  1744  02AC  1FC2               	btfss	sprintf@_val+1,7
  1745  02AD  2AB7               	goto	l2269
  1746                           
  1747                           ;doprnt.c: 1271: flag |= 0x03;
  1748  02AE  3003               	movlw	3
  1749  02AF  00BB               	movwf	??_sprintf
  1750  02B0  083B               	movf	??_sprintf,w
  1751  02B1  04BF               	iorwf	sprintf@flag,f
  1752                           
  1753                           ;doprnt.c: 1272: _val._val = -_val._val;
  1754  02B2  09C1               	comf	sprintf@_val,f
  1755  02B3  09C2               	comf	sprintf@_val+1,f
  1756  02B4  0AC1               	incf	sprintf@_val,f
  1757  02B5  1903               	skipnz
  1758  02B6  0AC2               	incf	sprintf@_val+1,f
  1759  02B7                     l2269:	
  1760                           
  1761                           ;doprnt.c: 1273: }
  1762                           ;doprnt.c: 1275: }
  1763                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1764  02B7  01C6               	clrf	sprintf@c
  1765  02B8  0AC6               	incf	sprintf@c,f
  1766  02B9  0846               	movf	sprintf@c,w
  1767  02BA  3A05               	xorlw	5
  1768  02BB  1903               	btfsc	3,2
  1769  02BC  2ADE               	goto	l2281
  1770  02BD                     l2273:	
  1771                           
  1772                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1773  02BD  0846               	movf	sprintf@c,w
  1774  02BE  00BB               	movwf	??_sprintf
  1775  02BF  073B               	addwf	??_sprintf,w
  1776  02C0  3E01               	addlw	low (_dpowers-__stringbase)
  1777  02C1  0084               	movwf	4
  1778  02C2  120A  118A  2545  120A  118A  	fcall	stringdir
  1779  02C7  00BC               	movwf	??_sprintf+1
  1780  02C8  120A  118A  2545  120A  118A  	fcall	stringdir
  1781  02CD  00BD               	movwf	??_sprintf+2
  1782  02CE  083D               	movf	??_sprintf+2,w
  1783  02CF  0242               	subwf	sprintf@_val+1,w
  1784  02D0  1D03               	skipz
  1785  02D1  2AD4               	goto	u2115
  1786  02D2  083C               	movf	??_sprintf+1,w
  1787  02D3  0241               	subwf	sprintf@_val,w
  1788  02D4                     u2115:	
  1789  02D4  1C03               	btfss	3,0
  1790  02D5  2ADE               	goto	l2281
  1791                           
  1792                           ;doprnt.c: 1316: break;
  1793  02D6  3001               	movlw	1
  1794  02D7  00BB               	movwf	??_sprintf
  1795  02D8  083B               	movf	??_sprintf,w
  1796  02D9  07C6               	addwf	sprintf@c,f
  1797  02DA  0846               	movf	sprintf@c,w
  1798  02DB  3A05               	xorlw	5
  1799  02DC  1D03               	skipz
  1800  02DD  2ABD               	goto	l2273
  1801  02DE                     l2281:	
  1802                           
  1803                           ;doprnt.c: 1431: {
  1804                           ;doprnt.c: 1447: if(flag & 0x03)
  1805  02DE  083F               	movf	sprintf@flag,w
  1806  02DF  3903               	andlw	3
  1807  02E0  1903               	btfsc	3,2
  1808  02E1  2AED               	goto	l2287
  1809                           
  1810                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  1811  02E2  302D               	movlw	45
  1812  02E3  00BB               	movwf	??_sprintf
  1813  02E4  0845               	movf	sprintf@sp,w
  1814  02E5  0084               	movwf	4
  1815  02E6  083B               	movf	??_sprintf,w
  1816  02E7  1383               	bcf	3,7	;select IRP bank0
  1817  02E8  0080               	movwf	0
  1818  02E9  3001               	movlw	1
  1819  02EA  00BB               	movwf	??_sprintf
  1820  02EB  083B               	movf	??_sprintf,w
  1821  02EC  07C5               	addwf	sprintf@sp,f
  1822  02ED                     l2287:	
  1823                           
  1824                           ;doprnt.c: 1478: }
  1825                           ;doprnt.c: 1481: prec = c;
  1826  02ED  0846               	movf	sprintf@c,w
  1827  02EE  00BB               	movwf	??_sprintf
  1828  02EF  083B               	movf	??_sprintf,w
  1829  02F0  00C0               	movwf	sprintf@prec
  1830  02F1                     l2295:	
  1831                           ;doprnt.c: 1483: while(prec--) {
  1832                           
  1833  02F1  30FF               	movlw	-1
  1834  02F2  00BB               	movwf	??_sprintf
  1835  02F3  083B               	movf	??_sprintf,w
  1836  02F4  07C0               	addwf	sprintf@prec,f
  1837  02F5  0840               	movf	sprintf@prec,w
  1838  02F6  3AFF               	xorlw	-1
  1839  02F7  1903               	btfsc	3,2
  1840  02F8  2A6A               	goto	l2297
  1841                           
  1842                           ;doprnt.c: 1487: {
  1843                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  1844  02F9  300A               	movlw	10
  1845  02FA  00A8               	movwf	___lwmod@divisor
  1846  02FB  3000               	movlw	0
  1847  02FC  00A9               	movwf	___lwmod@divisor+1
  1848  02FD  0840               	movf	sprintf@prec,w
  1849  02FE  00BB               	movwf	??_sprintf
  1850  02FF  073B               	addwf	??_sprintf,w
  1851  0300  3E01               	addlw	low (_dpowers-__stringbase)
  1852  0301  0084               	movwf	4
  1853  0302  120A  118A  2545  120A  118A  	fcall	stringdir
  1854  0307  00A0               	movwf	___lwdiv@divisor
  1855  0308  120A  118A  2545  120A  118A  	fcall	stringdir
  1856  030D  00A1               	movwf	___lwdiv@divisor+1
  1857  030E  0842               	movf	sprintf@_val+1,w
  1858  030F  01A3               	clrf	___lwdiv@dividend+1
  1859  0310  07A3               	addwf	___lwdiv@dividend+1,f
  1860  0311  0841               	movf	sprintf@_val,w
  1861  0312  01A2               	clrf	___lwdiv@dividend
  1862  0313  07A2               	addwf	___lwdiv@dividend,f
  1863  0314  120A  118A  2505  120A  118A  	fcall	___lwdiv
  1864  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1865  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1866  031B  0821               	movf	?___lwdiv+1,w
  1867  031C  01AB               	clrf	___lwmod@dividend+1
  1868  031D  07AB               	addwf	___lwmod@dividend+1,f
  1869  031E  0820               	movf	?___lwdiv,w
  1870  031F  01AA               	clrf	___lwmod@dividend
  1871  0320  07AA               	addwf	___lwmod@dividend,f
  1872  0321  120A  118A  25F7  120A  118A  	fcall	___lwmod
  1873  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0328  0828               	movf	?___lwmod,w
  1876  0329  3E30               	addlw	48
  1877  032A  00BC               	movwf	??_sprintf+1
  1878  032B  083C               	movf	??_sprintf+1,w
  1879  032C  00C6               	movwf	sprintf@c
  1880                           
  1881                           ;doprnt.c: 1532: }
  1882                           ;doprnt.c: 1533: ((*sp++ = (c)));
  1883  032D  0846               	movf	sprintf@c,w
  1884  032E  00BB               	movwf	??_sprintf
  1885  032F  0845               	movf	sprintf@sp,w
  1886  0330  0084               	movwf	4
  1887  0331  083B               	movf	??_sprintf,w
  1888  0332  1383               	bcf	3,7	;select IRP bank0
  1889  0333  0080               	movwf	0
  1890  0334  3001               	movlw	1
  1891  0335  00BB               	movwf	??_sprintf
  1892  0336  083B               	movf	??_sprintf,w
  1893  0337  07C5               	addwf	sprintf@sp,f
  1894  0338  2AF1               	goto	l2295
  1895  0339                     l2299:	
  1896                           ;doprnt.c: 1534: }
  1897                           ;doprnt.c: 1542: }
  1898                           ;doprnt.c: 1544: alldone:
  1899                           
  1900                           
  1901                           ;doprnt.c: 1547: *sp = 0;
  1902  0339  0845               	movf	sprintf@sp,w
  1903  033A  0084               	movwf	4
  1904  033B  1383               	bcf	3,7	;select IRP bank0
  1905  033C  0180               	clrf	0
  1906  033D  0008               	return
  1907  033E                     __end_of_sprintf:	
  1908                           ;doprnt.c: 1549: return 0;
  1909                           ;	Return value of _sprintf is never used
  1910                           
  1911                           
  1912                           	psect	text4
  1913  05F7                     __ptext4:	
  1914 ;; *************** function ___lwmod *****************
  1915 ;; Defined at:
  1916 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  divisor         2    8[BANK0 ] unsigned int 
  1919 ;;  dividend        2   10[BANK0 ] unsigned int 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  counter         1   13[BANK0 ] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  2    8[BANK0 ] unsigned int 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       4       0       0       0
  1932 ;;      Locals:         0       1       0       0       0
  1933 ;;      Temps:          0       1       0       0       0
  1934 ;;      Totals:         0       6       0       0       0
  1935 ;;Total ram usage:        6 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_sprintf
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function ___lwmod
  1947  05F7                     ___lwmod:	
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1951  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1952  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1953  05F9  0829               	movf	___lwmod@divisor+1,w
  1954  05FA  0428               	iorwf	___lwmod@divisor,w
  1955  05FB  1903               	skipnz
  1956  05FC  2E26               	goto	l2147
  1957  05FD  01AD               	clrf	___lwmod@counter
  1958  05FE  0AAD               	incf	___lwmod@counter,f
  1959  05FF                     l2137:	
  1960  05FF  1BA9               	btfsc	___lwmod@divisor+1,7
  1961  0600  2E0D               	goto	l2139
  1962  0601  3001               	movlw	1
  1963  0602                     u1935:	
  1964  0602  1003               	clrc
  1965  0603  0DA8               	rlf	___lwmod@divisor,f
  1966  0604  0DA9               	rlf	___lwmod@divisor+1,f
  1967  0605  3EFF               	addlw	-1
  1968  0606  1D03               	skipz
  1969  0607  2E02               	goto	u1935
  1970  0608  3001               	movlw	1
  1971  0609  00AC               	movwf	??___lwmod
  1972  060A  082C               	movf	??___lwmod,w
  1973  060B  07AD               	addwf	___lwmod@counter,f
  1974  060C  2DFF               	goto	l2137
  1975  060D                     l2139:	
  1976  060D  0829               	movf	___lwmod@divisor+1,w
  1977  060E  022B               	subwf	___lwmod@dividend+1,w
  1978  060F  1D03               	skipz
  1979  0610  2E13               	goto	u1955
  1980  0611  0828               	movf	___lwmod@divisor,w
  1981  0612  022A               	subwf	___lwmod@dividend,w
  1982  0613                     u1955:	
  1983  0613  1C03               	skipc
  1984  0614  2E1B               	goto	l2143
  1985  0615  0828               	movf	___lwmod@divisor,w
  1986  0616  02AA               	subwf	___lwmod@dividend,f
  1987  0617  0829               	movf	___lwmod@divisor+1,w
  1988  0618  1C03               	skipc
  1989  0619  03AB               	decf	___lwmod@dividend+1,f
  1990  061A  02AB               	subwf	___lwmod@dividend+1,f
  1991  061B                     l2143:	
  1992  061B  3001               	movlw	1
  1993  061C                     u1965:	
  1994  061C  1003               	clrc
  1995  061D  0CA9               	rrf	___lwmod@divisor+1,f
  1996  061E  0CA8               	rrf	___lwmod@divisor,f
  1997  061F  3EFF               	addlw	-1
  1998  0620  1D03               	skipz
  1999  0621  2E1C               	goto	u1965
  2000  0622  3001               	movlw	1
  2001  0623  02AD               	subwf	___lwmod@counter,f
  2002  0624  1D03               	btfss	3,2
  2003  0625  2E0D               	goto	l2139
  2004  0626                     l2147:	
  2005  0626  082B               	movf	___lwmod@dividend+1,w
  2006  0627  01A9               	clrf	?___lwmod+1
  2007  0628  07A9               	addwf	?___lwmod+1,f
  2008  0629  082A               	movf	___lwmod@dividend,w
  2009  062A  01A8               	clrf	?___lwmod
  2010  062B  07A8               	addwf	?___lwmod,f
  2011  062C  0008               	return
  2012  062D                     __end_of___lwmod:	
  2013                           
  2014                           	psect	text5
  2015  0505                     __ptext5:	
  2016 ;; *************** function ___lwdiv *****************
  2017 ;; Defined at:
  2018 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  divisor         2    0[BANK0 ] unsigned int 
  2021 ;;  dividend        2    2[BANK0 ] unsigned int 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  quotient        2    6[BANK0 ] unsigned int 
  2024 ;;  counter         1    5[BANK0 ] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  2    0[BANK0 ] unsigned int 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2034 ;;      Params:         0       4       0       0       0
  2035 ;;      Locals:         0       3       0       0       0
  2036 ;;      Temps:          0       1       0       0       0
  2037 ;;      Totals:         0       8       0       0       0
  2038 ;;Total ram usage:        8 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    1
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_sprintf
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function ___lwdiv
  2050  0505                     ___lwdiv:	
  2051                           
  2052                           ;incstack = 0
  2053                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2054  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2055  0506  1303               	bcf	3,6	;RP1=0, select bank0
  2056  0507  01A6               	clrf	___lwdiv@quotient
  2057  0508  01A7               	clrf	___lwdiv@quotient+1
  2058  0509  0821               	movf	___lwdiv@divisor+1,w
  2059  050A  0420               	iorwf	___lwdiv@divisor,w
  2060  050B  1903               	skipnz
  2061  050C  2D3E               	goto	l2125
  2062  050D  01A5               	clrf	___lwdiv@counter
  2063  050E  0AA5               	incf	___lwdiv@counter,f
  2064  050F                     l2113:	
  2065  050F  1BA1               	btfsc	___lwdiv@divisor+1,7
  2066  0510  2D1D               	goto	l2115
  2067  0511  3001               	movlw	1
  2068  0512                     u1865:	
  2069  0512  1003               	clrc
  2070  0513  0DA0               	rlf	___lwdiv@divisor,f
  2071  0514  0DA1               	rlf	___lwdiv@divisor+1,f
  2072  0515  3EFF               	addlw	-1
  2073  0516  1D03               	skipz
  2074  0517  2D12               	goto	u1865
  2075  0518  3001               	movlw	1
  2076  0519  00A4               	movwf	??___lwdiv
  2077  051A  0824               	movf	??___lwdiv,w
  2078  051B  07A5               	addwf	___lwdiv@counter,f
  2079  051C  2D0F               	goto	l2113
  2080  051D                     l2115:	
  2081  051D  3001               	movlw	1
  2082  051E                     u1885:	
  2083  051E  1003               	clrc
  2084  051F  0DA6               	rlf	___lwdiv@quotient,f
  2085  0520  0DA7               	rlf	___lwdiv@quotient+1,f
  2086  0521  3EFF               	addlw	-1
  2087  0522  1D03               	skipz
  2088  0523  2D1E               	goto	u1885
  2089  0524  0821               	movf	___lwdiv@divisor+1,w
  2090  0525  0223               	subwf	___lwdiv@dividend+1,w
  2091  0526  1D03               	skipz
  2092  0527  2D2A               	goto	u1895
  2093  0528  0820               	movf	___lwdiv@divisor,w
  2094  0529  0222               	subwf	___lwdiv@dividend,w
  2095  052A                     u1895:	
  2096  052A  1C03               	skipc
  2097  052B  2D33               	goto	l2121
  2098  052C  0820               	movf	___lwdiv@divisor,w
  2099  052D  02A2               	subwf	___lwdiv@dividend,f
  2100  052E  0821               	movf	___lwdiv@divisor+1,w
  2101  052F  1C03               	skipc
  2102  0530  03A3               	decf	___lwdiv@dividend+1,f
  2103  0531  02A3               	subwf	___lwdiv@dividend+1,f
  2104  0532  1426               	bsf	___lwdiv@quotient,0
  2105  0533                     l2121:	
  2106  0533  3001               	movlw	1
  2107  0534                     u1905:	
  2108  0534  1003               	clrc
  2109  0535  0CA1               	rrf	___lwdiv@divisor+1,f
  2110  0536  0CA0               	rrf	___lwdiv@divisor,f
  2111  0537  3EFF               	addlw	-1
  2112  0538  1D03               	skipz
  2113  0539  2D34               	goto	u1905
  2114  053A  3001               	movlw	1
  2115  053B  02A5               	subwf	___lwdiv@counter,f
  2116  053C  1D03               	btfss	3,2
  2117  053D  2D1D               	goto	l2115
  2118  053E                     l2125:	
  2119  053E  0827               	movf	___lwdiv@quotient+1,w
  2120  053F  01A1               	clrf	?___lwdiv+1
  2121  0540  07A1               	addwf	?___lwdiv+1,f
  2122  0541  0826               	movf	___lwdiv@quotient,w
  2123  0542  01A0               	clrf	?___lwdiv
  2124  0543  07A0               	addwf	?___lwdiv,f
  2125  0544  0008               	return
  2126  0545                     __end_of___lwdiv:	
  2127                           
  2128                           	psect	text6
  2129  0773                     __ptext6:	
  2130 ;; *************** function _space_stuff *****************
  2131 ;; Defined at:
  2132 ;;		line 269 in file "i2c_driver.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  in              1    wreg     PTR unsigned char 
  2135 ;;		 -> lcd_msg1(16), 
  2136 ;;  index           1    4[BANK0 ] unsigned char 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  in              1    6[BANK0 ] PTR unsigned char 
  2139 ;;		 -> lcd_msg1(16), 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;		None               void
  2142 ;; Registers used:
  2143 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2149 ;;      Params:         0       1       0       0       0
  2150 ;;      Locals:         0       1       0       0       0
  2151 ;;      Temps:          0       1       0       0       0
  2152 ;;      Totals:         0       3       0       0       0
  2153 ;;Total ram usage:        3 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    1
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           
  2164                           ;psect for function _space_stuff
  2165  0773                     _space_stuff:	
  2166                           
  2167                           ;incstack = 0
  2168                           ; Regs used in _space_stuff: [wreg-fsr0h+status,2+status,0]
  2169                           ;space_stuff@in stored from wreg
  2170  0773  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0774  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0775  00A6               	movwf	space_stuff@in
  2173                           
  2174                           ;i2c_driver.c: 271: *(in++)=0x20;
  2175  0776  3020               	movlw	32
  2176  0777  00A5               	movwf	??_space_stuff
  2177  0778  0826               	movf	space_stuff@in,w
  2178  0779  0084               	movwf	4
  2179  077A  0825               	movf	??_space_stuff,w
  2180  077B  1383               	bcf	3,7	;select IRP bank0
  2181  077C  0080               	movwf	0
  2182  077D  3001               	movlw	1
  2183  077E  00A5               	movwf	??_space_stuff
  2184  077F  0825               	movf	??_space_stuff,w
  2185  0780  07A6               	addwf	space_stuff@in,f
  2186                           
  2187                           ;i2c_driver.c: 272: *in=0x20;
  2188  0781  3020               	movlw	32
  2189  0782  00A5               	movwf	??_space_stuff
  2190  0783  0826               	movf	space_stuff@in,w
  2191  0784  0084               	movwf	4
  2192  0785  0825               	movf	??_space_stuff,w
  2193  0786  0080               	movwf	0
  2194  0787  0008               	return
  2195  0788                     __end_of_space_stuff:	
  2196                           
  2197                           	psect	text7
  2198  033E                     __ptext7:	
  2199 ;; *************** function _master_tx_write *****************
  2200 ;; Defined at:
  2201 ;;		line 274 in file "i2c_driver.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  i2c_pkt         1    wreg     PTR struct packet
  2204 ;;		 -> i2c_pkt(3), 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  i2c_pkt         1    6[BANK0 ] PTR struct packet
  2207 ;;		 -> i2c_pkt(3), 
  2208 ;;  i               2    4[BANK0 ] int 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      unsigned char 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       0       0       0       0
  2219 ;;      Locals:         0       3       0       0       0
  2220 ;;      Temps:          0       1       0       0       0
  2221 ;;      Totals:         0       4       0       0       0
  2222 ;;Total ram usage:        4 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    2
  2225 ;; This function calls:
  2226 ;;		_char2int
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           
  2233                           ;psect for function _master_tx_write
  2234  033E                     _master_tx_write:	
  2235                           
  2236                           ;incstack = 0
  2237                           ; Regs used in _master_tx_write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2238                           ;master_tx_write@i2c_pkt stored from wreg
  2239  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2240  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0340  00A6               	movwf	master_tx_write@i2c_pkt
  2242                           
  2243                           ;i2c_driver.c: 276: RBIE = 0;
  2244  0341  118B               	bcf	11,3	;volatile
  2245                           
  2246                           ;i2c_driver.c: 277: SEN=1;
  2247  0342  1683               	bsf	3,5	;RP0=1, select bank1
  2248  0343  1303               	bcf	3,6	;RP1=0, select bank1
  2249  0344  1411               	bsf	17,0	;volatile
  2250  0345                     l2333:	
  2251                           ;i2c_driver.c: 280: {
  2252                           
  2253                           ;i2c_driver.c: 279: while(!i2c_pkt->ack)
  2254                           
  2255  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2256  0346  0826               	movf	master_tx_write@i2c_pkt,w
  2257  0347  3E02               	addlw	2
  2258  0348  0084               	movwf	4
  2259  0349  1383               	bcf	3,7	;select IRP bank0
  2260  034A  0880               	movf	0,f
  2261  034B  1903               	skipnz
  2262  034C  2B45               	goto	l2333
  2263                           
  2264                           ;i2c_driver.c: 283: }
  2265                           ;i2c_driver.c: 284: i2c_pkt->ack=0;
  2266  034D  0826               	movf	master_tx_write@i2c_pkt,w
  2267  034E  3E02               	addlw	2
  2268  034F  0084               	movwf	4
  2269  0350  0180               	clrf	0
  2270                           
  2271                           ;i2c_driver.c: 286: SSPBUF=(i2c_pkt->address<<1|0);
  2272  0351  0826               	movf	master_tx_write@i2c_pkt,w
  2273  0352  0084               	movwf	4
  2274  0353  0800               	movf	0,w
  2275  0354  00A3               	movwf	??_master_tx_write
  2276  0355  0723               	addwf	??_master_tx_write,w
  2277  0356  0093               	movwf	19	;volatile
  2278  0357                     l2339:	
  2279                           ;i2c_driver.c: 287: while(!i2c_pkt->ack);
  2280                           
  2281  0357  0826               	movf	master_tx_write@i2c_pkt,w
  2282  0358  3E02               	addlw	2
  2283  0359  0084               	movwf	4
  2284  035A  0880               	movf	0,f
  2285  035B  1903               	skipnz
  2286  035C  2B57               	goto	l2339
  2287                           
  2288                           ;i2c_driver.c: 288: i2c_pkt->ack=0;
  2289  035D  0826               	movf	master_tx_write@i2c_pkt,w
  2290  035E  3E02               	addlw	2
  2291  035F  0084               	movwf	4
  2292  0360  0180               	clrf	0
  2293                           
  2294                           ;i2c_driver.c: 289: SSPBUF=0;
  2295  0361  0193               	clrf	19	;volatile
  2296  0362                     l2345:	
  2297                           ;i2c_driver.c: 292: while(!i2c_pkt->ack);
  2298                           
  2299  0362  0826               	movf	master_tx_write@i2c_pkt,w
  2300  0363  3E02               	addlw	2
  2301  0364  0084               	movwf	4
  2302  0365  0880               	movf	0,f
  2303  0366  1903               	skipnz
  2304  0367  2B62               	goto	l2345
  2305                           
  2306                           ;i2c_driver.c: 293: i2c_pkt->ack=0;
  2307  0368  0826               	movf	master_tx_write@i2c_pkt,w
  2308  0369  3E02               	addlw	2
  2309  036A  0084               	movwf	4
  2310  036B  0180               	clrf	0
  2311                           
  2312                           ;i2c_driver.c: 294: for(i=0;i<7;i++)
  2313  036C  01A4               	clrf	master_tx_write@i
  2314  036D  01A5               	clrf	master_tx_write@i+1
  2315  036E  0825               	movf	master_tx_write@i+1,w
  2316  036F  3A80               	xorlw	128
  2317  0370  00FF               	movwf	127
  2318  0371  3080               	movlw	128
  2319  0372  027F               	subwf	127,w
  2320  0373  1D03               	skipz
  2321  0374  2B77               	goto	u2225
  2322  0375  3007               	movlw	7
  2323  0376  0224               	subwf	master_tx_write@i,w
  2324  0377                     u2225:	
  2325  0377  1803               	btfsc	3,0
  2326  0378  2BB1               	goto	l212
  2327  0379                     l2355:	
  2328                           
  2329                           ;i2c_driver.c: 295: {
  2330                           ;i2c_driver.c: 296: if(i==3)
  2331  0379  3003               	movlw	3
  2332  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2333  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2334  037C  0624               	xorwf	master_tx_write@i,w
  2335  037D  0425               	iorwf	master_tx_write@i+1,w
  2336  037E  1D03               	skipz
  2337  037F  2B88               	goto	l2359
  2338                           
  2339                           ;i2c_driver.c: 297: SSPBUF=*(timer_ptr[i]);
  2340  0380  0824               	movf	master_tx_write@i,w
  2341  0381  3ED5               	addlw	_timer_ptr& (0+255)
  2342  0382  0084               	movwf	4
  2343  0383  1383               	bcf	3,7	;select IRP bank1
  2344  0384  0800               	movf	0,w
  2345  0385  0084               	movwf	4
  2346  0386  0800               	movf	0,w
  2347  0387  2B94               	goto	L1
  2348  0388                     l2359:	
  2349                           
  2350                           ;i2c_driver.c: 298: else
  2351                           ;i2c_driver.c: 299: SSPBUF=char2int(timer_ptr[i]);
  2352  0388  0824               	movf	master_tx_write@i,w
  2353  0389  3ED5               	addlw	_timer_ptr& (0+255)
  2354  038A  0084               	movwf	4
  2355  038B  1383               	bcf	3,7	;select IRP bank1
  2356  038C  0800               	movf	0,w
  2357  038D  120A  118A  2748  120A  118A  	fcall	_char2int
  2358  0392  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0393  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0394                     L1:	
  2361  0394  0093               	movwf	19	;volatile
  2362  0395                     l2361:	
  2363                           ;i2c_driver.c: 300: while(!i2c_pkt->ack);
  2364                           
  2365  0395  0826               	movf	master_tx_write@i2c_pkt,w
  2366  0396  3E02               	addlw	2
  2367  0397  0084               	movwf	4
  2368  0398  1383               	bcf	3,7	;select IRP bank0
  2369  0399  0880               	movf	0,f
  2370  039A  1903               	skipnz
  2371  039B  2B95               	goto	l2361
  2372                           
  2373                           ;i2c_driver.c: 301: i2c_pkt->ack=0;
  2374  039C  0826               	movf	master_tx_write@i2c_pkt,w
  2375  039D  3E02               	addlw	2
  2376  039E  0084               	movwf	4
  2377  039F  0180               	clrf	0
  2378  03A0  3001               	movlw	1
  2379  03A1  07A4               	addwf	master_tx_write@i,f
  2380  03A2  1803               	skipnc
  2381  03A3  0AA5               	incf	master_tx_write@i+1,f
  2382  03A4  3000               	movlw	0
  2383  03A5  07A5               	addwf	master_tx_write@i+1,f
  2384  03A6  0825               	movf	master_tx_write@i+1,w
  2385  03A7  3A80               	xorlw	128
  2386  03A8  00FF               	movwf	127
  2387  03A9  3080               	movlw	128
  2388  03AA  027F               	subwf	127,w
  2389  03AB  1D03               	skipz
  2390  03AC  2BAF               	goto	u2255
  2391  03AD  3007               	movlw	7
  2392  03AE  0224               	subwf	master_tx_write@i,w
  2393  03AF                     u2255:	
  2394  03AF  1C03               	skipc
  2395  03B0  2B79               	goto	l2355
  2396  03B1                     l212:	
  2397                           
  2398                           ;i2c_driver.c: 302: }
  2399                           ;i2c_driver.c: 303: PEN=1;
  2400  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2401  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2402  03B3  1511               	bsf	17,2	;volatile
  2403  03B4                     l2369:	
  2404                           ;i2c_driver.c: 304: while(!i2c_pkt->ack);
  2405                           
  2406  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2407  03B5  0826               	movf	master_tx_write@i2c_pkt,w
  2408  03B6  3E02               	addlw	2
  2409  03B7  0084               	movwf	4
  2410  03B8  1383               	bcf	3,7	;select IRP bank0
  2411  03B9  0880               	movf	0,f
  2412  03BA  1903               	skipnz
  2413  03BB  2BB4               	goto	l2369
  2414                           
  2415                           ;i2c_driver.c: 305: i2c_pkt->ack=0;
  2416  03BC  0826               	movf	master_tx_write@i2c_pkt,w
  2417  03BD  3E02               	addlw	2
  2418  03BE  0084               	movwf	4
  2419  03BF  0180               	clrf	0
  2420                           
  2421                           ;i2c_driver.c: 312: RBIE = 1;
  2422  03C0  158B               	bsf	11,3	;volatile
  2423                           
  2424                           ;i2c_driver.c: 313: return 0;
  2425  03C1  3000               	movlw	0
  2426  03C2  0008               	return
  2427  03C3                     __end_of_master_tx_write:	
  2428                           
  2429                           	psect	text8
  2430  0748                     __ptext8:	
  2431 ;; *************** function _char2int *****************
  2432 ;; Defined at:
  2433 ;;		line 374 in file "i2c_driver.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  in              1    wreg     PTR unsigned char 
  2436 ;;		 -> year(2), month(2), date(2), day(1), 
  2437 ;;		 -> hour(2), min(2), sec(2), 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  in              1    2[BANK0 ] PTR unsigned char 
  2440 ;;		 -> year(2), month(2), date(2), day(1), 
  2441 ;;		 -> hour(2), min(2), sec(2), 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      unsigned char 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       0       0       0       0
  2452 ;;      Locals:         0       1       0       0       0
  2453 ;;      Temps:          0       2       0       0       0
  2454 ;;      Totals:         0       3       0       0       0
  2455 ;;Total ram usage:        3 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    1
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_master_tx_write
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function _char2int
  2467  0748                     _char2int:	
  2468                           
  2469                           ;incstack = 0
  2470                           ; Regs used in _char2int: [wreg-fsr0h+status,2+status,0]
  2471                           ;char2int@in stored from wreg
  2472  0748  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0749  1303               	bcf	3,6	;RP1=0, select bank0
  2474  074A  00A2               	movwf	char2int@in
  2475                           
  2476                           ;i2c_driver.c: 376: return (*(in) | *(in+1)<<4) ;
  2477  074B  0822               	movf	char2int@in,w
  2478  074C  0084               	movwf	4
  2479  074D  1383               	bcf	3,7	;select IRP bank0
  2480  074E  0800               	movf	0,w
  2481  074F  00A0               	movwf	??_char2int
  2482  0750  0A22               	incf	char2int@in,w
  2483  0751  0084               	movwf	4
  2484  0752  0800               	movf	0,w
  2485  0753  00A1               	movwf	??_char2int+1
  2486  0754  3003               	movlw	3
  2487  0755                     u1845:	
  2488  0755  1003               	clrc
  2489  0756  0DA1               	rlf	??_char2int+1,f
  2490  0757  3EFF               	addlw	-1
  2491  0758  1D03               	skipz
  2492  0759  2F55               	goto	u1845
  2493  075A  1003               	clrc
  2494  075B  0D21               	rlf	??_char2int+1,w
  2495  075C  0420               	iorwf	??_char2int,w
  2496  075D  0008               	return
  2497  075E                     __end_of_char2int:	
  2498                           
  2499                           	psect	text9
  2500  04C4                     __ptext9:	
  2501 ;; *************** function _master_tx *****************
  2502 ;; Defined at:
  2503 ;;		line 165 in file "i2c_driver.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  i2c_pkt         1    wreg     PTR struct packet
  2506 ;;		 -> i2c_pkt(3), 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  i2c_pkt         1    1[BANK0 ] PTR struct packet
  2509 ;;		 -> i2c_pkt(3), 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      unsigned char 
  2512 ;; Registers used:
  2513 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0       0       0       0       0
  2520 ;;      Locals:         0       1       0       0       0
  2521 ;;      Temps:          0       1       0       0       0
  2522 ;;      Totals:         0       2       0       0       0
  2523 ;;Total ram usage:        2 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    1
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_main
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           
  2534                           ;psect for function _master_tx
  2535  04C4                     _master_tx:	
  2536                           
  2537                           ;incstack = 0
  2538                           ; Regs used in _master_tx: [wreg-fsr0h+status,2+status,0]
  2539                           ;master_tx@i2c_pkt stored from wreg
  2540  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2541  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  2542  04C6  00A1               	movwf	master_tx@i2c_pkt
  2543                           
  2544                           ;i2c_driver.c: 167: RBIE = 0;
  2545  04C7  118B               	bcf	11,3	;volatile
  2546                           
  2547                           ;i2c_driver.c: 168: SEN=1;
  2548  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2549  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  2550  04CA  1411               	bsf	17,0	;volatile
  2551  04CB                     l2177:	
  2552                           ;i2c_driver.c: 171: {
  2553                           
  2554                           ;i2c_driver.c: 170: while(!i2c_pkt->ack)
  2555                           
  2556  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2557  04CC  0821               	movf	master_tx@i2c_pkt,w
  2558  04CD  3E02               	addlw	2
  2559  04CE  0084               	movwf	4
  2560  04CF  1383               	bcf	3,7	;select IRP bank0
  2561  04D0  0880               	movf	0,f
  2562  04D1  1903               	skipnz
  2563  04D2  2CCB               	goto	l2177
  2564                           
  2565                           ;i2c_driver.c: 174: }
  2566                           ;i2c_driver.c: 175: i2c_pkt->ack=0;
  2567  04D3  0821               	movf	master_tx@i2c_pkt,w
  2568  04D4  3E02               	addlw	2
  2569  04D5  0084               	movwf	4
  2570  04D6  0180               	clrf	0
  2571                           
  2572                           ;i2c_driver.c: 177: SSPBUF=(i2c_pkt->address<<1|0);
  2573  04D7  0821               	movf	master_tx@i2c_pkt,w
  2574  04D8  0084               	movwf	4
  2575  04D9  0800               	movf	0,w
  2576  04DA  00A0               	movwf	??_master_tx
  2577  04DB  0720               	addwf	??_master_tx,w
  2578  04DC  0093               	movwf	19	;volatile
  2579  04DD                     l2183:	
  2580                           ;i2c_driver.c: 178: while(!i2c_pkt->ack);
  2581                           
  2582  04DD  0821               	movf	master_tx@i2c_pkt,w
  2583  04DE  3E02               	addlw	2
  2584  04DF  0084               	movwf	4
  2585  04E0  0880               	movf	0,f
  2586  04E1  1903               	skipnz
  2587  04E2  2CDD               	goto	l2183
  2588                           
  2589                           ;i2c_driver.c: 179: i2c_pkt->ack=0;
  2590  04E3  0821               	movf	master_tx@i2c_pkt,w
  2591  04E4  3E02               	addlw	2
  2592  04E5  0084               	movwf	4
  2593  04E6  0180               	clrf	0
  2594                           
  2595                           ;i2c_driver.c: 180: SSPBUF=i2c_pkt->data;
  2596  04E7  0A21               	incf	master_tx@i2c_pkt,w
  2597  04E8  0084               	movwf	4
  2598  04E9  0800               	movf	0,w
  2599  04EA  0093               	movwf	19	;volatile
  2600  04EB                     l2189:	
  2601                           ;i2c_driver.c: 182: while(!i2c_pkt->ack);
  2602                           
  2603  04EB  0821               	movf	master_tx@i2c_pkt,w
  2604  04EC  3E02               	addlw	2
  2605  04ED  0084               	movwf	4
  2606  04EE  0880               	movf	0,f
  2607  04EF  1903               	skipnz
  2608  04F0  2CEB               	goto	l2189
  2609                           
  2610                           ;i2c_driver.c: 183: i2c_pkt->ack=0;
  2611  04F1  0821               	movf	master_tx@i2c_pkt,w
  2612  04F2  3E02               	addlw	2
  2613  04F3  0084               	movwf	4
  2614  04F4  0180               	clrf	0
  2615                           
  2616                           ;i2c_driver.c: 186: PEN=1;
  2617  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2618  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2619  04F7  1511               	bsf	17,2	;volatile
  2620  04F8                     l2195:	
  2621                           ;i2c_driver.c: 187: while(!i2c_pkt->ack);
  2622                           
  2623  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2624  04F9  0821               	movf	master_tx@i2c_pkt,w
  2625  04FA  3E02               	addlw	2
  2626  04FB  0084               	movwf	4
  2627  04FC  0880               	movf	0,f
  2628  04FD  1903               	skipnz
  2629  04FE  2CF8               	goto	l2195
  2630                           
  2631                           ;i2c_driver.c: 188: i2c_pkt->ack=0;
  2632  04FF  0821               	movf	master_tx@i2c_pkt,w
  2633  0500  3E02               	addlw	2
  2634  0501  0084               	movwf	4
  2635  0502  0180               	clrf	0
  2636                           
  2637                           ;i2c_driver.c: 195: RBIE = 1;
  2638  0503  158B               	bsf	11,3	;volatile
  2639  0504  0008               	return
  2640  0505                     __end_of_master_tx:	
  2641                           ;i2c_driver.c: 196: return 0;
  2642                           ;	Return value of _master_tx is never used
  2643                           
  2644                           
  2645                           	psect	text10
  2646  0420                     __ptext10:	
  2647 ;; *************** function _master_rx *****************
  2648 ;; Defined at:
  2649 ;;		line 198 in file "i2c_driver.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  i2c_pkt         1    wreg     PTR struct packet
  2652 ;;		 -> i2c_pkt(3), 
  2653 ;;  rx_time         1    0[BANK0 ] PTR unsigned char 
  2654 ;;		 -> NULL(0), local_time(7), 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  i2c_pkt         1    2[BANK0 ] PTR struct packet
  2657 ;;		 -> i2c_pkt(3), 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      unsigned char 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2667 ;;      Params:         0       1       0       0       0
  2668 ;;      Locals:         0       1       0       0       0
  2669 ;;      Temps:          0       1       0       0       0
  2670 ;;      Totals:         0       3       0       0       0
  2671 ;;Total ram usage:        3 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    1
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_main
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           
  2682                           ;psect for function _master_rx
  2683  0420                     _master_rx:	
  2684                           
  2685                           ;incstack = 0
  2686                           ; Regs used in _master_rx: [wreg-fsr0h+status,2+status,0]
  2687                           ;master_rx@i2c_pkt stored from wreg
  2688  0420  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0421  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0422  00A2               	movwf	master_rx@i2c_pkt
  2691                           
  2692                           ;i2c_driver.c: 200: RBIE = 0;
  2693  0423  118B               	bcf	11,3	;volatile
  2694                           
  2695                           ;i2c_driver.c: 201: SEN=1;
  2696  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2697  0425  1303               	bcf	3,6	;RP1=0, select bank1
  2698  0426  1411               	bsf	17,0	;volatile
  2699  0427                     l2205:	
  2700                           ;i2c_driver.c: 203: {
  2701                           
  2702                           ;i2c_driver.c: 202: while(!i2c_pkt->ack)
  2703                           
  2704  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0428  0822               	movf	master_rx@i2c_pkt,w
  2706  0429  3E02               	addlw	2
  2707  042A  0084               	movwf	4
  2708  042B  1383               	bcf	3,7	;select IRP bank0
  2709  042C  0880               	movf	0,f
  2710  042D  1903               	skipnz
  2711  042E  2C27               	goto	l2205
  2712                           
  2713                           ;i2c_driver.c: 206: }
  2714                           ;i2c_driver.c: 207: i2c_pkt->ack=0;
  2715  042F  0822               	movf	master_rx@i2c_pkt,w
  2716  0430  3E02               	addlw	2
  2717  0431  0084               	movwf	4
  2718  0432  0180               	clrf	0
  2719                           
  2720                           ;i2c_driver.c: 209: SSPBUF=(i2c_pkt->address<<1|1);
  2721  0433  1403               	setc
  2722  0434  0822               	movf	master_rx@i2c_pkt,w
  2723  0435  0084               	movwf	4
  2724  0436  0D00               	rlf	0,w
  2725  0437  0093               	movwf	19	;volatile
  2726  0438                     l2211:	
  2727                           ;i2c_driver.c: 210: while(!i2c_pkt->ack);
  2728                           
  2729  0438  0822               	movf	master_rx@i2c_pkt,w
  2730  0439  3E02               	addlw	2
  2731  043A  0084               	movwf	4
  2732  043B  0880               	movf	0,f
  2733  043C  1903               	skipnz
  2734  043D  2C38               	goto	l2211
  2735                           
  2736                           ;i2c_driver.c: 211: i2c_pkt->ack=0;
  2737  043E  0822               	movf	master_rx@i2c_pkt,w
  2738  043F  3E02               	addlw	2
  2739  0440  0084               	movwf	4
  2740  0441  0180               	clrf	0
  2741                           
  2742                           ;i2c_driver.c: 216: RCEN=1;
  2743  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2744  0443  1303               	bcf	3,6	;RP1=0, select bank1
  2745  0444  1591               	bsf	17,3	;volatile
  2746  0445                     l2217:	
  2747                           ;i2c_driver.c: 217: while(!i2c_pkt->ack);
  2748                           
  2749  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2750  0446  0822               	movf	master_rx@i2c_pkt,w
  2751  0447  3E02               	addlw	2
  2752  0448  0084               	movwf	4
  2753  0449  0880               	movf	0,f
  2754  044A  1903               	skipnz
  2755  044B  2C45               	goto	l2217
  2756                           
  2757                           ;i2c_driver.c: 218: i2c_pkt->ack=0;
  2758  044C  0822               	movf	master_rx@i2c_pkt,w
  2759  044D  3E02               	addlw	2
  2760  044E  0084               	movwf	4
  2761  044F  0180               	clrf	0
  2762                           
  2763                           ;i2c_driver.c: 219: *rx_time=SSPBUF;
  2764  0450  0813               	movf	19,w	;volatile
  2765  0451  00A1               	movwf	??_master_rx
  2766  0452  0820               	movf	master_rx@rx_time,w
  2767  0453  0084               	movwf	4
  2768  0454  0821               	movf	??_master_rx,w
  2769  0455  0080               	movwf	0
  2770                           
  2771                           ;i2c_driver.c: 221: ACKDT=1 ;
  2772  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2773  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2774  0458  1691               	bsf	17,5	;volatile
  2775                           
  2776                           ;i2c_driver.c: 222: ACKEN=1;
  2777  0459  1611               	bsf	17,4	;volatile
  2778  045A                     l2227:	
  2779                           ;i2c_driver.c: 223: while(!i2c_pkt->ack);
  2780                           
  2781  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2782  045B  0822               	movf	master_rx@i2c_pkt,w
  2783  045C  3E02               	addlw	2
  2784  045D  0084               	movwf	4
  2785  045E  0880               	movf	0,f
  2786  045F  1903               	skipnz
  2787  0460  2C5A               	goto	l2227
  2788                           
  2789                           ;i2c_driver.c: 224: i2c_pkt->ack=0;
  2790  0461  0822               	movf	master_rx@i2c_pkt,w
  2791  0462  3E02               	addlw	2
  2792  0463  0084               	movwf	4
  2793  0464  0180               	clrf	0
  2794                           
  2795                           ;i2c_driver.c: 234: PEN=1;
  2796  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2797  0466  1303               	bcf	3,6	;RP1=0, select bank1
  2798  0467  1511               	bsf	17,2	;volatile
  2799  0468                     l2233:	
  2800                           ;i2c_driver.c: 235: while(!i2c_pkt->ack);
  2801                           
  2802  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2803  0469  0822               	movf	master_rx@i2c_pkt,w
  2804  046A  3E02               	addlw	2
  2805  046B  0084               	movwf	4
  2806  046C  0880               	movf	0,f
  2807  046D  1903               	skipnz
  2808  046E  2C68               	goto	l2233
  2809                           
  2810                           ;i2c_driver.c: 236: i2c_pkt->ack=0;
  2811  046F  0822               	movf	master_rx@i2c_pkt,w
  2812  0470  3E02               	addlw	2
  2813  0471  0084               	movwf	4
  2814  0472  0180               	clrf	0
  2815                           
  2816                           ;i2c_driver.c: 243: RBIE = 1;
  2817  0473  158B               	bsf	11,3	;volatile
  2818  0474  0008               	return
  2819  0475                     __end_of_master_rx:	
  2820                           ;i2c_driver.c: 244: return 0;
  2821                           ;	Return value of _master_rx is never used
  2822                           
  2823                           
  2824                           	psect	text11
  2825  070D                     __ptext11:	
  2826 ;; *************** function _lcd_init *****************
  2827 ;; Defined at:
  2828 ;;		line 17 in file "lcd_driver.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;		None               void
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0, pclath, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2842 ;;      Params:         0       0       0       0       0
  2843 ;;      Locals:         0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0
  2845 ;;      Totals:         0       0       0       0       0
  2846 ;;Total ram usage:        0 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    3
  2849 ;; This function calls:
  2850 ;;		_lcd_cmnt
  2851 ;; This function is called by:
  2852 ;;		_main
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function _lcd_init
  2858  070D                     _lcd_init:	
  2859                           
  2860                           ;lcd_driver.c: 19: TRISD=0X00;
  2861                           
  2862                           ;incstack = 0
  2863                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2864  070D  1683               	bsf	3,5	;RP0=1, select bank1
  2865  070E  1303               	bcf	3,6	;RP1=0, select bank1
  2866  070F  0188               	clrf	8	;volatile
  2867                           
  2868                           ;lcd_driver.c: 20: PORTD=0X00;
  2869  0710  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0711  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0712  0188               	clrf	8	;volatile
  2872                           
  2873                           ;lcd_driver.c: 21: ADCON1=0X06;
  2874  0713  3006               	movlw	6
  2875  0714  1683               	bsf	3,5	;RP0=1, select bank1
  2876  0715  1303               	bcf	3,6	;RP1=0, select bank1
  2877  0716  009F               	movwf	31	;volatile
  2878                           
  2879                           ;lcd_driver.c: 23: lcd_cmnt(0x38);
  2880  0717  3038               	movlw	56
  2881  0718  120A  118A  27AD  120A  118A  	fcall	_lcd_cmnt
  2882                           
  2883                           ;lcd_driver.c: 24: lcd_cmnt(0x0c);
  2884  071D  300C               	movlw	12
  2885  071E  120A  118A  27AD  120A  118A  	fcall	_lcd_cmnt
  2886                           
  2887                           ;lcd_driver.c: 25: lcd_cmnt(0x01);
  2888  0723  3001               	movlw	1
  2889  0724  120A  118A  27AD  120A  118A  	fcall	_lcd_cmnt
  2890                           
  2891                           ;lcd_driver.c: 26: lcd_cmnt(0x80);
  2892  0729  3080               	movlw	128
  2893  072A  120A  118A  27AD   	fcall	_lcd_cmnt
  2894  072D  0008               	return
  2895  072E                     __end_of_lcd_init:	
  2896                           
  2897                           	psect	text12
  2898  07AD                     __ptext12:	
  2899 ;; *************** function _lcd_cmnt *****************
  2900 ;; Defined at:
  2901 ;;		line 28 in file "lcd_driver.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  cmnt            1    wreg     unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  cmnt            1    7[BANK0 ] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;		None               void
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       0       0       0       0
  2916 ;;      Locals:         0       1       0       0       0
  2917 ;;      Temps:          0       0       0       0       0
  2918 ;;      Totals:         0       1       0       0       0
  2919 ;;Total ram usage:        1 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    2
  2922 ;; This function calls:
  2923 ;;		_delay
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;;		_lcd_init
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           
  2931                           ;psect for function _lcd_cmnt
  2932  07AD                     _lcd_cmnt:	
  2933                           
  2934                           ;incstack = 0
  2935                           ; Regs used in _lcd_cmnt: [wreg+status,2+status,0+pclath+cstack]
  2936                           ;lcd_cmnt@cmnt stored from wreg
  2937  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  2938  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  2939  07AF  00A7               	movwf	lcd_cmnt@cmnt
  2940                           
  2941                           ;lcd_driver.c: 30: PORTD=cmnt;
  2942  07B0  0827               	movf	lcd_cmnt@cmnt,w
  2943  07B1  0088               	movwf	8	;volatile
  2944                           
  2945                           ;lcd_driver.c: 31: RE0=0;
  2946  07B2  1009               	bcf	9,0	;volatile
  2947                           
  2948                           ;lcd_driver.c: 32: RE1=1;delay(10);RE1=0; ;
  2949  07B3  1489               	bsf	9,1	;volatile
  2950  07B4  300A               	movlw	10
  2951  07B5  00A0               	movwf	delay@x
  2952  07B6  3000               	movlw	0
  2953  07B7  00A1               	movwf	delay@x+1
  2954  07B8  120A  118A  262D   	fcall	_delay
  2955  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  2956  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  2957  07BD  1089               	bcf	9,1	;volatile
  2958  07BE  0008               	return
  2959  07BF                     __end_of_lcd_cmnt:	
  2960                           
  2961                           	psect	text13
  2962  062D                     __ptext13:	
  2963 ;; *************** function _delay *****************
  2964 ;; Defined at:
  2965 ;;		line 53 in file "lcd_driver.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  x               2    0[BANK0 ] int 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  j               2    5[BANK0 ] int 
  2970 ;;  i               2    3[BANK0 ] int 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;		None               void
  2973 ;; Registers used:
  2974 ;;		wreg, status,2
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2980 ;;      Params:         0       2       0       0       0
  2981 ;;      Locals:         0       4       0       0       0
  2982 ;;      Temps:          0       1       0       0       0
  2983 ;;      Totals:         0       7       0       0       0
  2984 ;;Total ram usage:        7 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;;		_lcd_cmnt
  2992 ;;		_lcd_data
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function _delay
  2998  062D                     _delay:	
  2999                           
  3000                           ;lcd_driver.c: 55: int i,j;
  3001                           ;lcd_driver.c: 56: for(i=0;i<=x;i++)
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _delay: [wreg+status,2]
  3005  062D  1283               	bcf	3,5	;RP0=0, select bank0
  3006  062E  1303               	bcf	3,6	;RP1=0, select bank0
  3007  062F  01A3               	clrf	delay@i
  3008  0630  01A4               	clrf	delay@i+1
  3009  0631                     l310:	
  3010  0631  0821               	movf	delay@x+1,w
  3011  0632  3A80               	xorlw	128
  3012  0633  00A2               	movwf	??_delay
  3013  0634  0824               	movf	delay@i+1,w
  3014  0635  3A80               	xorlw	128
  3015  0636  0222               	subwf	??_delay,w
  3016  0637  1D03               	skipz
  3017  0638  2E3B               	goto	u1625
  3018  0639  0823               	movf	delay@i,w
  3019  063A  0220               	subwf	delay@x,w
  3020  063B                     u1625:	
  3021  063B  1C03               	btfss	3,0
  3022  063C  0008               	return
  3023                           
  3024                           ;lcd_driver.c: 57: {
  3025                           ;lcd_driver.c: 58: for(j=0;j<=x;j++)
  3026  063D  1283               	bcf	3,5	;RP0=0, select bank0
  3027  063E  1303               	bcf	3,6	;RP1=0, select bank0
  3028  063F  01A5               	clrf	delay@j
  3029  0640  01A6               	clrf	delay@j+1
  3030  0641                     l312:	
  3031  0641  0821               	movf	delay@x+1,w
  3032  0642  3A80               	xorlw	128
  3033  0643  00A2               	movwf	??_delay
  3034  0644  0826               	movf	delay@j+1,w
  3035  0645  3A80               	xorlw	128
  3036  0646  0222               	subwf	??_delay,w
  3037  0647  1D03               	skipz
  3038  0648  2E4B               	goto	u1615
  3039  0649  0825               	movf	delay@j,w
  3040  064A  0220               	subwf	delay@x,w
  3041  064B                     u1615:	
  3042  064B  1C03               	btfss	3,0
  3043  064C  2E56               	goto	l1969
  3044                           
  3045                           ;lcd_driver.c: 59: {}
  3046  064D  3001               	movlw	1
  3047  064E  1283               	bcf	3,5	;RP0=0, select bank0
  3048  064F  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0650  07A5               	addwf	delay@j,f
  3050  0651  1803               	skipnc
  3051  0652  0AA6               	incf	delay@j+1,f
  3052  0653  3000               	movlw	0
  3053  0654  07A6               	addwf	delay@j+1,f
  3054  0655  2E41               	goto	l312
  3055  0656                     l1969:	
  3056  0656  3001               	movlw	1
  3057  0657  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0658  1303               	bcf	3,6	;RP1=0, select bank0
  3059  0659  07A3               	addwf	delay@i,f
  3060  065A  1803               	skipnc
  3061  065B  0AA4               	incf	delay@i+1,f
  3062  065C  3000               	movlw	0
  3063  065D  07A4               	addwf	delay@i+1,f
  3064  065E  2E31               	goto	l310
  3065  065F                     __end_of_delay:	
  3066                           
  3067                           	psect	text14
  3068  065F                     __ptext14:	
  3069 ;; *************** function _inc_year *****************
  3070 ;; Defined at:
  3071 ;;		line 381 in file "i2c_driver.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  data_ptr        1    wreg     PTR unsigned char 
  3074 ;;		 -> year(2), month(2), date(2), day(1), 
  3075 ;;		 -> hour(2), min(2), sec(2), 
  3076 ;;  index           1   14[BANK0 ] unsigned char 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  data_ptr        1   17[BANK0 ] PTR unsigned char 
  3079 ;;		 -> year(2), month(2), date(2), day(1), 
  3080 ;;		 -> hour(2), min(2), sec(2), 
  3081 ;;  temp            1   18[BANK0 ] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;		None               void
  3084 ;; Registers used:
  3085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3091 ;;      Params:         0       1       0       0       0
  3092 ;;      Locals:         0       2       0       0       0
  3093 ;;      Temps:          0       2       0       0       0
  3094 ;;      Totals:         0       5       0       0       0
  3095 ;;Total ram usage:        5 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    3
  3098 ;; This function calls:
  3099 ;;		_hex2integer
  3100 ;;		_int2hex
  3101 ;; This function is called by:
  3102 ;;		_main
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           
  3107                           ;psect for function _inc_year
  3108  065F                     _inc_year:	
  3109                           
  3110                           ;incstack = 0
  3111                           ; Regs used in _inc_year: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3112                           ;inc_year@data_ptr stored from wreg
  3113  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0661  00B1               	movwf	inc_year@data_ptr
  3116                           
  3117                           ;i2c_driver.c: 383: int_u8 temp = hex2integer(data_ptr);
  3118  0662  0831               	movf	inc_year@data_ptr,w
  3119  0663  120A  118A  268D  120A  118A  	fcall	_hex2integer
  3120  0668  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0669  1303               	bcf	3,6	;RP1=0, select bank0
  3122  066A  00AF               	movwf	??_inc_year
  3123  066B  082F               	movf	??_inc_year,w
  3124  066C  00B2               	movwf	inc_year@temp
  3125                           
  3126                           ;i2c_driver.c: 384: if(temp == timer_min_max[index].max)
  3127  066D  1403               	setc
  3128  066E  0D2E               	rlf	inc_year@index,w
  3129  066F  3EC7               	addlw	_timer_min_max& (0+255)
  3130  0670  0084               	movwf	4
  3131  0671  1383               	bcf	3,7	;select IRP bank1
  3132  0672  0800               	movf	0,w
  3133  0673  0632               	xorwf	inc_year@temp,w
  3134  0674  1D03               	skipz
  3135  0675  2E80               	goto	l2327
  3136                           
  3137                           ;i2c_driver.c: 385: {
  3138                           ;i2c_driver.c: 387: temp = timer_min_max[index].min;
  3139  0676  082E               	movf	inc_year@index,w
  3140  0677  00AF               	movwf	??_inc_year
  3141  0678  072F               	addwf	??_inc_year,w
  3142  0679  3EC7               	addlw	_timer_min_max& (0+255)
  3143  067A  0084               	movwf	4
  3144  067B  0800               	movf	0,w
  3145  067C  00B0               	movwf	??_inc_year+1
  3146  067D  0830               	movf	??_inc_year+1,w
  3147  067E  00B2               	movwf	inc_year@temp
  3148                           
  3149                           ;i2c_driver.c: 389: }
  3150  067F  2E84               	goto	l2329
  3151  0680                     l2327:	
  3152                           
  3153                           ;i2c_driver.c: 390: else
  3154                           ;i2c_driver.c: 391: {
  3155                           ;i2c_driver.c: 392: temp++;
  3156  0680  3001               	movlw	1
  3157  0681  00AF               	movwf	??_inc_year
  3158  0682  082F               	movf	??_inc_year,w
  3159  0683  07B2               	addwf	inc_year@temp,f
  3160  0684                     l2329:	
  3161                           
  3162                           ;i2c_driver.c: 394: }
  3163                           ;i2c_driver.c: 395: int2hex(temp,data_ptr);
  3164  0684  0831               	movf	inc_year@data_ptr,w
  3165  0685  00AF               	movwf	??_inc_year
  3166  0686  082F               	movf	??_inc_year,w
  3167  0687  00A9               	movwf	int2hex@out
  3168  0688  0832               	movf	inc_year@temp,w
  3169  0689  120A  118A  25BF   	fcall	_int2hex
  3170  068C  0008               	return
  3171  068D                     __end_of_inc_year:	
  3172                           
  3173                           	psect	text15
  3174  07D0                     __ptext15:	
  3175 ;; *************** function _i2c_master_init *****************
  3176 ;; Defined at:
  3177 ;;		line 131 in file "i2c_driver.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;		None               void
  3184 ;; Registers used:
  3185 ;;		wreg
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3191 ;;      Params:         0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0
  3194 ;;      Totals:         0       0       0       0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    1
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _i2c_master_init
  3207  07D0                     _i2c_master_init:	
  3208                           
  3209                           ;i2c_driver.c: 134: TRISC3 = 1;
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _i2c_master_init: [wreg]
  3213  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  3214  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  3215  07D2  1587               	bsf	7,3	;volatile
  3216                           
  3217                           ;i2c_driver.c: 135: TRISC4 = 1;
  3218  07D3  1607               	bsf	7,4	;volatile
  3219                           
  3220                           ;i2c_driver.c: 136: SSPADD = 0x28;
  3221  07D4  3028               	movlw	40
  3222  07D5  0093               	movwf	19	;volatile
  3223                           
  3224                           ;i2c_driver.c: 137: SSPSTAT |= 0x80;
  3225  07D6  1794               	bsf	20,7	;volatile
  3226                           
  3227                           ;i2c_driver.c: 138: SSPCON = 0x28;
  3228  07D7  3028               	movlw	40
  3229  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  3230  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  3231  07DA  0094               	movwf	20	;volatile
  3232                           
  3233                           ;i2c_driver.c: 139: GIE = 1;
  3234  07DB  178B               	bsf	11,7	;volatile
  3235                           
  3236                           ;i2c_driver.c: 140: PEIE = 1;
  3237  07DC  170B               	bsf	11,6	;volatile
  3238                           
  3239                           ;i2c_driver.c: 141: SSPIE = 1;
  3240  07DD  1683               	bsf	3,5	;RP0=1, select bank1
  3241  07DE  1303               	bcf	3,6	;RP1=0, select bank1
  3242  07DF  158C               	bsf	12,3	;volatile
  3243  07E0  0008               	return
  3244  07E1                     __end_of_i2c_master_init:	
  3245                           
  3246                           	psect	text16
  3247  072E                     __ptext16:	
  3248 ;; *************** function _hex2char *****************
  3249 ;; Defined at:
  3250 ;;		line 357 in file "i2c_driver.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  in              1    wreg     unsigned char 
  3253 ;;  out             1    0[BANK0 ] PTR unsigned char 
  3254 ;;		 -> year(2), month(2), date(2), hour(2), 
  3255 ;;		 -> min(2), sec(2), 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  in              1    3[BANK0 ] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       1       0       0       0
  3268 ;;      Locals:         0       1       0       0       0
  3269 ;;      Temps:          0       2       0       0       0
  3270 ;;      Totals:         0       4       0       0       0
  3271 ;;Total ram usage:        4 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function _hex2char
  3283  072E                     _hex2char:	
  3284                           
  3285                           ;incstack = 0
  3286                           ; Regs used in _hex2char: [wreg-fsr0h+status,2+status,0]
  3287                           ;hex2char@in stored from wreg
  3288  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3289  072F  1303               	bcf	3,6	;RP1=0, select bank0
  3290  0730  00A3               	movwf	hex2char@in
  3291                           
  3292                           ;i2c_driver.c: 359: *out= in & 0x0f;
  3293  0731  0823               	movf	hex2char@in,w
  3294  0732  390F               	andlw	15
  3295  0733  00A1               	movwf	??_hex2char
  3296  0734  0820               	movf	hex2char@out,w
  3297  0735  0084               	movwf	4
  3298  0736  0821               	movf	??_hex2char,w
  3299  0737  1383               	bcf	3,7	;select IRP bank0
  3300  0738  0080               	movwf	0
  3301                           
  3302                           ;i2c_driver.c: 360: *(out+1)= in>>4;
  3303  0739  0823               	movf	hex2char@in,w
  3304  073A  00A1               	movwf	??_hex2char
  3305  073B  3004               	movlw	4
  3306  073C                     u2075:	
  3307  073C  1003               	clrc
  3308  073D  0CA1               	rrf	??_hex2char,f
  3309  073E  3EFF               	addlw	-1
  3310  073F  1D03               	skipz
  3311  0740  2F3C               	goto	u2075
  3312  0741  0821               	movf	??_hex2char,w
  3313  0742  00A2               	movwf	??_hex2char+1
  3314  0743  0A20               	incf	hex2char@out,w
  3315  0744  0084               	movwf	4
  3316  0745  0822               	movf	??_hex2char+1,w
  3317  0746  0080               	movwf	0
  3318  0747  0008               	return
  3319  0748                     __end_of_hex2char:	
  3320                           
  3321                           	psect	text17
  3322  06BA                     __ptext17:	
  3323 ;; *************** function _dec_year *****************
  3324 ;; Defined at:
  3325 ;;		line 398 in file "i2c_driver.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  data_ptr        1    wreg     PTR unsigned char 
  3328 ;;		 -> year(2), month(2), date(2), day(1), 
  3329 ;;		 -> hour(2), min(2), sec(2), 
  3330 ;;  index           1   14[BANK0 ] unsigned char 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  data_ptr        1   16[BANK0 ] PTR unsigned char 
  3333 ;;		 -> year(2), month(2), date(2), day(1), 
  3334 ;;		 -> hour(2), min(2), sec(2), 
  3335 ;;  temp            1   17[BANK0 ] unsigned char 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;		None               void
  3338 ;; Registers used:
  3339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3345 ;;      Params:         0       1       0       0       0
  3346 ;;      Locals:         0       2       0       0       0
  3347 ;;      Temps:          0       1       0       0       0
  3348 ;;      Totals:         0       4       0       0       0
  3349 ;;Total ram usage:        4 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    3
  3352 ;; This function calls:
  3353 ;;		_hex2integer
  3354 ;;		_int2hex
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _dec_year
  3362  06BA                     _dec_year:	
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _dec_year: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3366                           ;dec_year@data_ptr stored from wreg
  3367  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3368  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3369  06BC  00B0               	movwf	dec_year@data_ptr
  3370                           
  3371                           ;i2c_driver.c: 400: int_u8 temp =hex2integer(data_ptr);
  3372  06BD  0830               	movf	dec_year@data_ptr,w
  3373  06BE  120A  118A  268D  120A  118A  	fcall	_hex2integer
  3374  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  3375  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  3376  06C5  00AF               	movwf	??_dec_year
  3377  06C6  082F               	movf	??_dec_year,w
  3378  06C7  00B1               	movwf	dec_year@temp
  3379                           
  3380                           ;i2c_driver.c: 401: if(temp == timer_min_max[index].min)
  3381  06C8  082E               	movf	dec_year@index,w
  3382  06C9  00AF               	movwf	??_dec_year
  3383  06CA  072F               	addwf	??_dec_year,w
  3384  06CB  3EC7               	addlw	_timer_min_max& (0+255)
  3385  06CC  0084               	movwf	4
  3386  06CD  1383               	bcf	3,7	;select IRP bank1
  3387  06CE  0800               	movf	0,w
  3388  06CF  0631               	xorwf	dec_year@temp,w
  3389  06D0  1D03               	skipz
  3390  06D1  2EDB               	goto	l2317
  3391                           
  3392                           ;i2c_driver.c: 402: {
  3393                           ;i2c_driver.c: 404: temp = timer_min_max[index].max;
  3394  06D2  1403               	setc
  3395  06D3  0D2E               	rlf	dec_year@index,w
  3396  06D4  3EC7               	addlw	_timer_min_max& (0+255)
  3397  06D5  0084               	movwf	4
  3398  06D6  0800               	movf	0,w
  3399  06D7  00AF               	movwf	??_dec_year
  3400  06D8  082F               	movf	??_dec_year,w
  3401  06D9  00B1               	movwf	dec_year@temp
  3402                           
  3403                           ;i2c_driver.c: 406: }
  3404  06DA  2EDD               	goto	l2319
  3405  06DB                     l2317:	
  3406                           
  3407                           ;i2c_driver.c: 407: else
  3408                           ;i2c_driver.c: 408: {
  3409                           ;i2c_driver.c: 409: temp--;
  3410  06DB  3001               	movlw	1
  3411  06DC  02B1               	subwf	dec_year@temp,f
  3412  06DD                     l2319:	
  3413                           
  3414                           ;i2c_driver.c: 411: }
  3415                           ;i2c_driver.c: 412: int2hex(temp,data_ptr);
  3416  06DD  0830               	movf	dec_year@data_ptr,w
  3417  06DE  00AF               	movwf	??_dec_year
  3418  06DF  082F               	movf	??_dec_year,w
  3419  06E0  00A9               	movwf	int2hex@out
  3420  06E1  0831               	movf	dec_year@temp,w
  3421  06E2  120A  118A  25BF   	fcall	_int2hex
  3422  06E5  0008               	return
  3423  06E6                     __end_of_dec_year:	
  3424                           
  3425                           	psect	text18
  3426  05BF                     __ptext18:	
  3427 ;; *************** function _int2hex *****************
  3428 ;; Defined at:
  3429 ;;		line 369 in file "i2c_driver.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  in              1    wreg     unsigned char 
  3432 ;;  out             1    9[BANK0 ] PTR unsigned char 
  3433 ;;		 -> year(2), month(2), date(2), day(1), 
  3434 ;;		 -> hour(2), min(2), sec(2), 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  in              1   13[BANK0 ] unsigned char 
  3437 ;; Return value:  Size  Location     Type
  3438 ;;		None               void
  3439 ;; Registers used:
  3440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3446 ;;      Params:         0       1       0       0       0
  3447 ;;      Locals:         0       1       0       0       0
  3448 ;;      Temps:          0       3       0       0       0
  3449 ;;      Totals:         0       5       0       0       0
  3450 ;;Total ram usage:        5 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    2
  3453 ;; This function calls:
  3454 ;;		___awdiv
  3455 ;;		___awmod
  3456 ;; This function is called by:
  3457 ;;		_inc_year
  3458 ;;		_dec_year
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           
  3463                           ;psect for function _int2hex
  3464  05BF                     _int2hex:	
  3465                           
  3466                           ;incstack = 0
  3467                           ; Regs used in _int2hex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3468                           ;int2hex@in stored from wreg
  3469  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3470  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3471  05C1  00AD               	movwf	int2hex@in
  3472                           
  3473                           ;i2c_driver.c: 371: *out++ = in %10 ;
  3474  05C2  300A               	movlw	10
  3475  05C3  00A0               	movwf	___awmod@divisor
  3476  05C4  3000               	movlw	0
  3477  05C5  00A1               	movwf	___awmod@divisor+1
  3478  05C6  082D               	movf	int2hex@in,w
  3479  05C7  00AA               	movwf	??_int2hex
  3480  05C8  01AB               	clrf	??_int2hex+1
  3481  05C9  082A               	movf	??_int2hex,w
  3482  05CA  00A2               	movwf	___awmod@dividend
  3483  05CB  082B               	movf	??_int2hex+1,w
  3484  05CC  00A3               	movwf	___awmod@dividend+1
  3485  05CD  120A  118A  2475  120A  118A  	fcall	___awmod
  3486  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  3487  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  3488  05D4  0820               	movf	?___awmod,w
  3489  05D5  00AC               	movwf	??_int2hex+2
  3490  05D6  0829               	movf	int2hex@out,w
  3491  05D7  0084               	movwf	4
  3492  05D8  082C               	movf	??_int2hex+2,w
  3493  05D9  1383               	bcf	3,7	;select IRP bank0
  3494  05DA  0080               	movwf	0
  3495  05DB  3001               	movlw	1
  3496  05DC  00AA               	movwf	??_int2hex
  3497  05DD  082A               	movf	??_int2hex,w
  3498  05DE  07A9               	addwf	int2hex@out,f
  3499                           
  3500                           ;i2c_driver.c: 372: *out = (in/10) ;
  3501  05DF  300A               	movlw	10
  3502  05E0  00A0               	movwf	___awdiv@divisor
  3503  05E1  3000               	movlw	0
  3504  05E2  00A1               	movwf	___awdiv@divisor+1
  3505  05E3  082D               	movf	int2hex@in,w
  3506  05E4  00AA               	movwf	??_int2hex
  3507  05E5  01AB               	clrf	??_int2hex+1
  3508  05E6  082A               	movf	??_int2hex,w
  3509  05E7  00A2               	movwf	___awdiv@dividend
  3510  05E8  082B               	movf	??_int2hex+1,w
  3511  05E9  00A3               	movwf	___awdiv@dividend+1
  3512  05EA  120A  118A  23C3   	fcall	___awdiv
  3513  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  3514  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  3515  05EF  0820               	movf	?___awdiv,w
  3516  05F0  00AC               	movwf	??_int2hex+2
  3517  05F1  0829               	movf	int2hex@out,w
  3518  05F2  0084               	movwf	4
  3519  05F3  082C               	movf	??_int2hex+2,w
  3520  05F4  1383               	bcf	3,7	;select IRP bank0
  3521  05F5  0080               	movwf	0
  3522  05F6  0008               	return
  3523  05F7                     __end_of_int2hex:	
  3524                           
  3525                           	psect	text19
  3526  03C3                     __ptext19:	
  3527 ;; *************** function ___awdiv *****************
  3528 ;; Defined at:
  3529 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  divisor         2    0[BANK0 ] int 
  3532 ;;  dividend        2    2[BANK0 ] int 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  quotient        2    7[BANK0 ] int 
  3535 ;;  sign            1    6[BANK0 ] unsigned char 
  3536 ;;  counter         1    5[BANK0 ] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  2    0[BANK0 ] int 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3546 ;;      Params:         0       4       0       0       0
  3547 ;;      Locals:         0       4       0       0       0
  3548 ;;      Temps:          0       1       0       0       0
  3549 ;;      Totals:         0       9       0       0       0
  3550 ;;Total ram usage:        9 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    1
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_int2hex
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           
  3561                           ;psect for function ___awdiv
  3562  03C3                     ___awdiv:	
  3563                           
  3564                           ;incstack = 0
  3565                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3566  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3567  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3568  03C5  01A6               	clrf	___awdiv@sign
  3569  03C6  1FA1               	btfss	___awdiv@divisor+1,7
  3570  03C7  2BCF               	goto	l1995
  3571  03C8  09A0               	comf	___awdiv@divisor,f
  3572  03C9  09A1               	comf	___awdiv@divisor+1,f
  3573  03CA  0AA0               	incf	___awdiv@divisor,f
  3574  03CB  1903               	skipnz
  3575  03CC  0AA1               	incf	___awdiv@divisor+1,f
  3576  03CD  01A6               	clrf	___awdiv@sign
  3577  03CE  0AA6               	incf	___awdiv@sign,f
  3578  03CF                     l1995:	
  3579  03CF  1FA3               	btfss	___awdiv@dividend+1,7
  3580  03D0  2BDA               	goto	l2001
  3581  03D1  09A2               	comf	___awdiv@dividend,f
  3582  03D2  09A3               	comf	___awdiv@dividend+1,f
  3583  03D3  0AA2               	incf	___awdiv@dividend,f
  3584  03D4  1903               	skipnz
  3585  03D5  0AA3               	incf	___awdiv@dividend+1,f
  3586  03D6  3001               	movlw	1
  3587  03D7  00A4               	movwf	??___awdiv
  3588  03D8  0824               	movf	??___awdiv,w
  3589  03D9  06A6               	xorwf	___awdiv@sign,f
  3590  03DA                     l2001:	
  3591  03DA  01A7               	clrf	___awdiv@quotient
  3592  03DB  01A8               	clrf	___awdiv@quotient+1
  3593  03DC  0821               	movf	___awdiv@divisor+1,w
  3594  03DD  0420               	iorwf	___awdiv@divisor,w
  3595  03DE  1903               	skipnz
  3596  03DF  2C11               	goto	l2023
  3597  03E0  01A5               	clrf	___awdiv@counter
  3598  03E1  0AA5               	incf	___awdiv@counter,f
  3599  03E2                     l2011:	
  3600  03E2  1BA1               	btfsc	___awdiv@divisor+1,7
  3601  03E3  2BF0               	goto	l2013
  3602  03E4  3001               	movlw	1
  3603  03E5                     u1685:	
  3604  03E5  1003               	clrc
  3605  03E6  0DA0               	rlf	___awdiv@divisor,f
  3606  03E7  0DA1               	rlf	___awdiv@divisor+1,f
  3607  03E8  3EFF               	addlw	-1
  3608  03E9  1D03               	skipz
  3609  03EA  2BE5               	goto	u1685
  3610  03EB  3001               	movlw	1
  3611  03EC  00A4               	movwf	??___awdiv
  3612  03ED  0824               	movf	??___awdiv,w
  3613  03EE  07A5               	addwf	___awdiv@counter,f
  3614  03EF  2BE2               	goto	l2011
  3615  03F0                     l2013:	
  3616  03F0  3001               	movlw	1
  3617  03F1                     u1705:	
  3618  03F1  1003               	clrc
  3619  03F2  0DA7               	rlf	___awdiv@quotient,f
  3620  03F3  0DA8               	rlf	___awdiv@quotient+1,f
  3621  03F4  3EFF               	addlw	-1
  3622  03F5  1D03               	skipz
  3623  03F6  2BF1               	goto	u1705
  3624  03F7  0821               	movf	___awdiv@divisor+1,w
  3625  03F8  0223               	subwf	___awdiv@dividend+1,w
  3626  03F9  1D03               	skipz
  3627  03FA  2BFD               	goto	u1715
  3628  03FB  0820               	movf	___awdiv@divisor,w
  3629  03FC  0222               	subwf	___awdiv@dividend,w
  3630  03FD                     u1715:	
  3631  03FD  1C03               	skipc
  3632  03FE  2C06               	goto	l2019
  3633  03FF  0820               	movf	___awdiv@divisor,w
  3634  0400  02A2               	subwf	___awdiv@dividend,f
  3635  0401  0821               	movf	___awdiv@divisor+1,w
  3636  0402  1C03               	skipc
  3637  0403  03A3               	decf	___awdiv@dividend+1,f
  3638  0404  02A3               	subwf	___awdiv@dividend+1,f
  3639  0405  1427               	bsf	___awdiv@quotient,0
  3640  0406                     l2019:	
  3641  0406  3001               	movlw	1
  3642  0407                     u1725:	
  3643  0407  1003               	clrc
  3644  0408  0CA1               	rrf	___awdiv@divisor+1,f
  3645  0409  0CA0               	rrf	___awdiv@divisor,f
  3646  040A  3EFF               	addlw	-1
  3647  040B  1D03               	skipz
  3648  040C  2C07               	goto	u1725
  3649  040D  3001               	movlw	1
  3650  040E  02A5               	subwf	___awdiv@counter,f
  3651  040F  1D03               	btfss	3,2
  3652  0410  2BF0               	goto	l2013
  3653  0411                     l2023:	
  3654  0411  0826               	movf	___awdiv@sign,w
  3655  0412  1903               	btfsc	3,2
  3656  0413  2C19               	goto	l2027
  3657  0414  09A7               	comf	___awdiv@quotient,f
  3658  0415  09A8               	comf	___awdiv@quotient+1,f
  3659  0416  0AA7               	incf	___awdiv@quotient,f
  3660  0417  1903               	skipnz
  3661  0418  0AA8               	incf	___awdiv@quotient+1,f
  3662  0419                     l2027:	
  3663  0419  0828               	movf	___awdiv@quotient+1,w
  3664  041A  01A1               	clrf	?___awdiv+1
  3665  041B  07A1               	addwf	?___awdiv+1,f
  3666  041C  0827               	movf	___awdiv@quotient,w
  3667  041D  01A0               	clrf	?___awdiv
  3668  041E  07A0               	addwf	?___awdiv,f
  3669  041F  0008               	return
  3670  0420                     __end_of___awdiv:	
  3671                           
  3672                           	psect	text20
  3673  068D                     __ptext20:	
  3674 ;; *************** function _hex2integer *****************
  3675 ;; Defined at:
  3676 ;;		line 363 in file "i2c_driver.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  in              1    wreg     PTR unsigned char 
  3679 ;;		 -> year(2), month(2), date(2), day(1), 
  3680 ;;		 -> hour(2), min(2), sec(2), 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  in              1   12[BANK0 ] PTR unsigned char 
  3683 ;;		 -> year(2), month(2), date(2), day(1), 
  3684 ;;		 -> hour(2), min(2), sec(2), 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      unsigned char 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3694 ;;      Params:         0       0       0       0       0
  3695 ;;      Locals:         0       1       0       0       0
  3696 ;;      Temps:          0       5       0       0       0
  3697 ;;      Totals:         0       6       0       0       0
  3698 ;;Total ram usage:        6 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    2
  3701 ;; This function calls:
  3702 ;;		___awmod
  3703 ;;		___bmul
  3704 ;; This function is called by:
  3705 ;;		_inc_year
  3706 ;;		_dec_year
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           
  3711                           ;psect for function _hex2integer
  3712  068D                     _hex2integer:	
  3713                           
  3714                           ;incstack = 0
  3715                           ; Regs used in _hex2integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3716                           ;hex2integer@in stored from wreg
  3717  068D  1283               	bcf	3,5	;RP0=0, select bank0
  3718  068E  1303               	bcf	3,6	;RP1=0, select bank0
  3719  068F  00AC               	movwf	hex2integer@in
  3720                           
  3721                           ;i2c_driver.c: 365: return ( *in++ %10 + *in * 10) ;
  3722  0690  300A               	movlw	10
  3723  0691  00A0               	movwf	___awmod@divisor
  3724  0692  3000               	movlw	0
  3725  0693  00A1               	movwf	___awmod@divisor+1
  3726  0694  082C               	movf	hex2integer@in,w
  3727  0695  0084               	movwf	4
  3728  0696  3001               	movlw	1
  3729  0697  07AC               	addwf	hex2integer@in,f
  3730  0698  1383               	bcf	3,7	;select IRP bank0
  3731  0699  0800               	movf	0,w
  3732  069A  00A7               	movwf	??_hex2integer
  3733  069B  01A8               	clrf	??_hex2integer+1
  3734  069C  0827               	movf	??_hex2integer,w
  3735  069D  00A2               	movwf	___awmod@dividend
  3736  069E  0828               	movf	??_hex2integer+1,w
  3737  069F  00A3               	movwf	___awmod@dividend+1
  3738  06A0  120A  118A  2475  120A  118A  	fcall	___awmod
  3739  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3740  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3741  06A7  0820               	movf	?___awmod,w
  3742  06A8  00A9               	movwf	??_hex2integer+2
  3743  06A9  0821               	movf	?___awmod+1,w
  3744  06AA  00AA               	movwf	??_hex2integer+3
  3745  06AB  300A               	movlw	10
  3746  06AC  00AB               	movwf	??_hex2integer+4
  3747  06AD  082B               	movf	??_hex2integer+4,w
  3748  06AE  00A0               	movwf	___bmul@multiplicand
  3749  06AF  082C               	movf	hex2integer@in,w
  3750  06B0  0084               	movwf	4
  3751  06B1  1383               	bcf	3,7	;select IRP bank0
  3752  06B2  0800               	movf	0,w
  3753  06B3  120A  118A  2788   	fcall	___bmul
  3754  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3755  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3756  06B8  0729               	addwf	??_hex2integer+2,w
  3757  06B9  0008               	return
  3758  06BA                     __end_of_hex2integer:	
  3759                           
  3760                           	psect	text21
  3761  0788                     __ptext21:	
  3762 ;; *************** function ___bmul *****************
  3763 ;; Defined at:
  3764 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  multiplier      1    wreg     unsigned char 
  3767 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3770 ;;  product         1    2[BANK0 ] unsigned char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      unsigned char 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3780 ;;      Params:         0       1       0       0       0
  3781 ;;      Locals:         0       2       0       0       0
  3782 ;;      Temps:          0       1       0       0       0
  3783 ;;      Totals:         0       4       0       0       0
  3784 ;;Total ram usage:        4 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    1
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_main
  3791 ;;		_hex2integer
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           
  3796                           ;psect for function ___bmul
  3797  0788                     ___bmul:	
  3798                           
  3799                           ;incstack = 0
  3800                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3801                           ;___bmul@multiplier stored from wreg
  3802  0788  1283               	bcf	3,5	;RP0=0, select bank0
  3803  0789  1303               	bcf	3,6	;RP1=0, select bank0
  3804  078A  00A3               	movwf	___bmul@multiplier
  3805  078B  01A2               	clrf	___bmul@product
  3806  078C                     l1973:	
  3807  078C  1C23               	btfss	___bmul@multiplier,0
  3808  078D  2F92               	goto	l1977
  3809  078E  0820               	movf	___bmul@multiplicand,w
  3810  078F  00A1               	movwf	??___bmul
  3811  0790  0821               	movf	??___bmul,w
  3812  0791  07A2               	addwf	___bmul@product,f
  3813  0792                     l1977:	
  3814  0792  1003               	clrc
  3815  0793  0DA0               	rlf	___bmul@multiplicand,f
  3816  0794  1003               	clrc
  3817  0795  0CA3               	rrf	___bmul@multiplier,f
  3818  0796  08A3               	movf	___bmul@multiplier,f
  3819  0797  1D03               	skipz
  3820  0798  2F8C               	goto	l1973
  3821  0799  0822               	movf	___bmul@product,w
  3822  079A  0008               	return
  3823  079B                     __end_of___bmul:	
  3824                           
  3825                           	psect	text22
  3826  0475                     __ptext22:	
  3827 ;; *************** function ___awmod *****************
  3828 ;; Defined at:
  3829 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  divisor         2    0[BANK0 ] int 
  3832 ;;  dividend        2    2[BANK0 ] int 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  sign            1    6[BANK0 ] unsigned char 
  3835 ;;  counter         1    5[BANK0 ] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  2    0[BANK0 ] int 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3845 ;;      Params:         0       4       0       0       0
  3846 ;;      Locals:         0       2       0       0       0
  3847 ;;      Temps:          0       1       0       0       0
  3848 ;;      Totals:         0       7       0       0       0
  3849 ;;Total ram usage:        7 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    1
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_hex2integer
  3856 ;;		_int2hex
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           
  3861                           ;psect for function ___awmod
  3862  0475                     ___awmod:	
  3863                           
  3864                           ;incstack = 0
  3865                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3866  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3867  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3868  0477  01A6               	clrf	___awmod@sign
  3869  0478  1FA3               	btfss	___awmod@dividend+1,7
  3870  0479  2C81               	goto	l2039
  3871  047A  09A2               	comf	___awmod@dividend,f
  3872  047B  09A3               	comf	___awmod@dividend+1,f
  3873  047C  0AA2               	incf	___awmod@dividend,f
  3874  047D  1903               	skipnz
  3875  047E  0AA3               	incf	___awmod@dividend+1,f
  3876  047F  01A6               	clrf	___awmod@sign
  3877  0480  0AA6               	incf	___awmod@sign,f
  3878  0481                     l2039:	
  3879  0481  1FA1               	btfss	___awmod@divisor+1,7
  3880  0482  2C88               	goto	l2043
  3881  0483  09A0               	comf	___awmod@divisor,f
  3882  0484  09A1               	comf	___awmod@divisor+1,f
  3883  0485  0AA0               	incf	___awmod@divisor,f
  3884  0486  1903               	skipnz
  3885  0487  0AA1               	incf	___awmod@divisor+1,f
  3886  0488                     l2043:	
  3887  0488  0821               	movf	___awmod@divisor+1,w
  3888  0489  0420               	iorwf	___awmod@divisor,w
  3889  048A  1903               	skipnz
  3890  048B  2CB5               	goto	l2061
  3891  048C  01A5               	clrf	___awmod@counter
  3892  048D  0AA5               	incf	___awmod@counter,f
  3893  048E                     l2051:	
  3894  048E  1BA1               	btfsc	___awmod@divisor+1,7
  3895  048F  2C9C               	goto	l2053
  3896  0490  3001               	movlw	1
  3897  0491                     u1785:	
  3898  0491  1003               	clrc
  3899  0492  0DA0               	rlf	___awmod@divisor,f
  3900  0493  0DA1               	rlf	___awmod@divisor+1,f
  3901  0494  3EFF               	addlw	-1
  3902  0495  1D03               	skipz
  3903  0496  2C91               	goto	u1785
  3904  0497  3001               	movlw	1
  3905  0498  00A4               	movwf	??___awmod
  3906  0499  0824               	movf	??___awmod,w
  3907  049A  07A5               	addwf	___awmod@counter,f
  3908  049B  2C8E               	goto	l2051
  3909  049C                     l2053:	
  3910  049C  0821               	movf	___awmod@divisor+1,w
  3911  049D  0223               	subwf	___awmod@dividend+1,w
  3912  049E  1D03               	skipz
  3913  049F  2CA2               	goto	u1805
  3914  04A0  0820               	movf	___awmod@divisor,w
  3915  04A1  0222               	subwf	___awmod@dividend,w
  3916  04A2                     u1805:	
  3917  04A2  1C03               	skipc
  3918  04A3  2CAA               	goto	l2057
  3919  04A4  0820               	movf	___awmod@divisor,w
  3920  04A5  02A2               	subwf	___awmod@dividend,f
  3921  04A6  0821               	movf	___awmod@divisor+1,w
  3922  04A7  1C03               	skipc
  3923  04A8  03A3               	decf	___awmod@dividend+1,f
  3924  04A9  02A3               	subwf	___awmod@dividend+1,f
  3925  04AA                     l2057:	
  3926  04AA  3001               	movlw	1
  3927  04AB                     u1815:	
  3928  04AB  1003               	clrc
  3929  04AC  0CA1               	rrf	___awmod@divisor+1,f
  3930  04AD  0CA0               	rrf	___awmod@divisor,f
  3931  04AE  3EFF               	addlw	-1
  3932  04AF  1D03               	skipz
  3933  04B0  2CAB               	goto	u1815
  3934  04B1  3001               	movlw	1
  3935  04B2  02A5               	subwf	___awmod@counter,f
  3936  04B3  1D03               	btfss	3,2
  3937  04B4  2C9C               	goto	l2053
  3938  04B5                     l2061:	
  3939  04B5  0826               	movf	___awmod@sign,w
  3940  04B6  1903               	btfsc	3,2
  3941  04B7  2CBD               	goto	l2065
  3942  04B8  09A2               	comf	___awmod@dividend,f
  3943  04B9  09A3               	comf	___awmod@dividend+1,f
  3944  04BA  0AA2               	incf	___awmod@dividend,f
  3945  04BB  1903               	skipnz
  3946  04BC  0AA3               	incf	___awmod@dividend+1,f
  3947  04BD                     l2065:	
  3948  04BD  0823               	movf	___awmod@dividend+1,w
  3949  04BE  01A1               	clrf	?___awmod+1
  3950  04BF  07A1               	addwf	?___awmod+1,f
  3951  04C0  0822               	movf	___awmod@dividend,w
  3952  04C1  01A0               	clrf	?___awmod
  3953  04C2  07A0               	addwf	?___awmod,f
  3954  04C3  0008               	return
  3955  04C4                     __end_of___awmod:	
  3956                           
  3957                           	psect	text23
  3958  0583                     __ptext23:	
  3959 ;; *************** function _interrupt_isr *****************
  3960 ;; Defined at:
  3961 ;;		line 316 in file "i2c_driver.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;		None               void
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0
  3977 ;;      Temps:          6       0       0       0       0
  3978 ;;      Totals:         6       0       0       0       0
  3979 ;;Total ram usage:        6 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		Interrupt level 1
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           
  3989                           ;psect for function _interrupt_isr
  3990  0583                     _interrupt_isr:	
  3991                           
  3992                           ;i2c_driver.c: 319: if(SSPIF)
  3993  0583  1D8C               	btfss	12,3	;volatile
  3994  0584  2D88               	goto	i1l224
  3995                           
  3996                           ;i2c_driver.c: 320: {
  3997                           ;i2c_driver.c: 321: i2c_pkt.ack=1;
  3998  0585  01EB               	clrf	_i2c_pkt+2
  3999  0586  0AEB               	incf	_i2c_pkt+2,f
  4000                           
  4001                           ;i2c_driver.c: 324: SSPIF = 0;
  4002  0587  118C               	bcf	12,3	;volatile
  4003  0588                     i1l224:	
  4004                           
  4005                           ;i2c_driver.c: 327: }
  4006                           ;i2c_driver.c: 328: if(RBIF)
  4007  0588  1C0B               	btfss	11,0	;volatile
  4008  0589  2DB4               	goto	i1l229
  4009                           
  4010                           ;i2c_driver.c: 329: {
  4011                           ;i2c_driver.c: 332: PORTA=2;
  4012  058A  3002               	movlw	2
  4013  058B  0085               	movwf	5	;volatile
  4014                           
  4015                           ;i2c_driver.c: 334: if((0XF0&~PORTB)>>4)
  4016  058C  0906               	comf	6,w	;volatile
  4017  058D  00F6               	movwf	??_interrupt_isr
  4018  058E  3004               	movlw	4
  4019  058F                     u153_25:	
  4020  058F  1003               	clrc
  4021  0590  0CF6               	rrf	??_interrupt_isr,f
  4022  0591  3EFF               	addlw	-1
  4023  0592  1D03               	skipz
  4024  0593  2D8F               	goto	u153_25
  4025  0594  0876               	movf	??_interrupt_isr,w
  4026  0595  390F               	andlw	15
  4027  0596  1903               	btfsc	3,2
  4028  0597  2DA5               	goto	i1l1933
  4029                           
  4030                           ;i2c_driver.c: 335: key_nav = ((0XF0&~PORTB)>>4);
  4031  0598  0906               	comf	6,w	;volatile
  4032  0599  00F6               	movwf	??_interrupt_isr
  4033  059A  3004               	movlw	4
  4034  059B                     u155_25:	
  4035  059B  1003               	clrc
  4036  059C  0CF6               	rrf	??_interrupt_isr,f
  4037  059D  3EFF               	addlw	-1
  4038  059E  1D03               	skipz
  4039  059F  2D9B               	goto	u155_25
  4040  05A0  0876               	movf	??_interrupt_isr,w
  4041  05A1  390F               	andlw	15
  4042  05A2  00F7               	movwf	??_interrupt_isr+1
  4043  05A3  0877               	movf	??_interrupt_isr+1,w
  4044  05A4  00D9               	movwf	_key_nav
  4045  05A5                     i1l1933:	
  4046                           
  4047                           ;i2c_driver.c: 338: if(RB4==0)
  4048  05A5  1A06               	btfsc	6,4	;volatile
  4049  05A6  2DB3               	goto	i1l1943
  4050                           
  4051                           ;i2c_driver.c: 339: {
  4052                           ;i2c_driver.c: 340: flag=1;
  4053  05A7  01D7               	clrf	_flag
  4054  05A8  0AD7               	incf	_flag,f
  4055                           
  4056                           ;i2c_driver.c: 342: inc++;
  4057  05A9  3001               	movlw	1
  4058  05AA  00F6               	movwf	??_interrupt_isr
  4059  05AB  0876               	movf	??_interrupt_isr,w
  4060  05AC  07D8               	addwf	_inc,f
  4061                           
  4062                           ;i2c_driver.c: 343: if(inc==4)
  4063  05AD  0858               	movf	_inc,w
  4064  05AE  3A04               	xorlw	4
  4065  05AF  1D03               	skipz
  4066  05B0  2DB3               	goto	i1l1943
  4067                           
  4068                           ;i2c_driver.c: 344: {
  4069                           ;i2c_driver.c: 345: inc=0;
  4070  05B1  01D8               	clrf	_inc
  4071                           
  4072                           ;i2c_driver.c: 346: flag=0;
  4073  05B2  01D7               	clrf	_flag
  4074  05B3                     i1l1943:	
  4075                           
  4076                           ;i2c_driver.c: 348: }
  4077                           ;i2c_driver.c: 349: }
  4078                           ;i2c_driver.c: 351: RBIF = 0;
  4079  05B3  100B               	bcf	11,0	;volatile
  4080  05B4                     i1l229:	
  4081  05B4  087B               	movf	??_interrupt_isr+5,w
  4082  05B5  00FF               	movwf	127
  4083  05B6  087A               	movf	??_interrupt_isr+4,w
  4084  05B7  008A               	movwf	10
  4085  05B8  0879               	movf	??_interrupt_isr+3,w
  4086  05B9  0084               	movwf	4
  4087  05BA  0E78               	swapf	(??_interrupt_isr+2)^(0+-128),w
  4088  05BB  0083               	movwf	3
  4089  05BC  0EFE               	swapf	126,f
  4090  05BD  0E7E               	swapf	126,w
  4091  05BE  0009               	retfie
  4092  05BF                     __end_of_interrupt_isr:	
  4093  007E                     btemp	set	126	;btemp
  4094  007E                     wtemp	set	126
  4095  007E                     wtemp0	set	126
  4096  0080                     wtemp1	set	128
  4097  0082                     wtemp2	set	130
  4098  0084                     wtemp3	set	132
  4099  0086                     wtemp4	set	134
  4100  0088                     wtemp5	set	136
  4101  007F                     wtemp6	set	127
  4102  007E                     ttemp	set	126
  4103  007E                     ttemp0	set	126
  4104  0081                     ttemp1	set	129
  4105  0084                     ttemp2	set	132
  4106  0087                     ttemp3	set	135
  4107  007F                     ttemp4	set	127
  4108  007E                     ltemp	set	126
  4109  007E                     ltemp0	set	126
  4110  0082                     ltemp1	set	130
  4111  0086                     ltemp2	set	134
  4112  0080                     ltemp3	set	128
  4113                           
  4114                           	psect	intentry
  4115  0004                     __pintentry:	
  4116                           ;incstack = 0
  4117                           ; Regs used in _interrupt_isr: [wreg+status,2+status,0]
  4118                           
  4119  0004                     interrupt_function:	
  4120  007E                     saved_w	set	btemp
  4121  0004  00FE               	movwf	btemp
  4122  0005  0E03               	swapf	3,w
  4123  0006  00F8               	movwf	??_interrupt_isr+2
  4124  0007  0804               	movf	4,w
  4125  0008  00F9               	movwf	??_interrupt_isr+3
  4126  0009  080A               	movf	10,w
  4127  000A  00FA               	movwf	??_interrupt_isr+4
  4128  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4129  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4130  000D  087F               	movf	btemp+1,w
  4131  000E  00FB               	movwf	??_interrupt_isr+5
  4132  000F  120A  118A  2D83   	ljmp	_interrupt_isr


Data Sizes:
    Strings     46
    Constant    10
    Data        21
    BSS         64
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     54      76
    BANK1            80      0      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_3(CODE[23]), STR_2(CODE[23]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> lcd_msg1(BANK1[16]), lcd_msg(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S284$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    uart_lcd_update@data	PTR unsigned char  size(1) Largest target is 16
		 -> lcd_msg1(BANK1[16]), lcd_msg(BANK1[16]), 

    dec_year@data_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), day(COMMON[1]), 
		 -> hour(BANK0[2]), min(BANK0[2]), sec(BANK0[2]), 

    inc_year@data_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), day(COMMON[1]), 
		 -> hour(BANK0[2]), min(BANK0[2]), sec(BANK0[2]), 

    char2int@in	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), day(COMMON[1]), 
		 -> hour(BANK0[2]), min(BANK0[2]), sec(BANK0[2]), 

    int2hex@out	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), day(COMMON[1]), 
		 -> hour(BANK0[2]), min(BANK0[2]), sec(BANK0[2]), 

    hex2integer@in	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), day(COMMON[1]), 
		 -> hour(BANK0[2]), min(BANK0[2]), sec(BANK0[2]), 

    hex2char@out	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), hour(BANK0[2]), 
		 -> min(BANK0[2]), sec(BANK0[2]), 

    master_tx_write@i2c_pkt	PTR struct packet size(1) Largest target is 3
		 -> i2c_pkt(BANK0[3]), 

    space_stuff@in	PTR unsigned char  size(1) Largest target is 16
		 -> lcd_msg1(BANK1[16]), 

    master_rx@rx_time	PTR unsigned char  size(1) Largest target is 7
		 -> NULL(NULL[0]), local_time(BANK1[7]), 

    master_rx@i2c_pkt	PTR struct packet size(1) Largest target is 3
		 -> i2c_pkt(BANK0[3]), 

    master_tx@i2c_pkt	PTR struct packet size(1) Largest target is 3
		 -> i2c_pkt(BANK0[3]), 

    timer	PTR unsigned char  size(1) Largest target is 7
		 -> NULL(NULL[0]), local_time(BANK1[7]), 

    timer_ptr	PTR unsigned char [7] size(1) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), day(COMMON[1]), 
		 -> hour(BANK0[2]), min(BANK0[2]), sec(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _uart_lcd_update->_lcd_data
    _lcd_data->_delay
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _space_stuff->___bmul
    _master_tx_write->_char2int
    _lcd_init->_lcd_cmnt
    _lcd_cmnt->_delay
    _inc_year->_int2hex
    _dec_year->_int2hex
    _int2hex->___awdiv
    _hex2integer->___awmod

Critical Paths under _interrupt_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   12365
                                             39 BANK0     15    15      0
                             ___bmul
                           _dec_year
                              _delay
                           _hex2char
                    _i2c_master_init
                           _inc_year
                           _lcd_cmnt
                           _lcd_init
                          _master_rx
                          _master_tx
                    _master_tx_write
                        _space_stuff
                            _sprintf
                    _uart_lcd_update
 ---------------------------------------------------------------------------------
 (1) _uart_lcd_update                                      5     4      1    1097
                                              8 BANK0      5     4      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             1     1      0     492
                                              7 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    12     13    1714
                                             14 BANK0     25    12     13
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     362
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _space_stuff                                          3     2      1     125
                                              4 BANK0      3     2      1
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _master_tx_write                                      4     4      0     624
                                              3 BANK0      4     4      0
                           _char2int
 ---------------------------------------------------------------------------------
 (2) _char2int                                             3     3      0      92
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _master_tx                                            2     2      0     340
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _master_rx                                            3     2      1     467
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     492
                           _lcd_cmnt
 ---------------------------------------------------------------------------------
 (2) _lcd_cmnt                                             1     1      0     492
                                              7 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                7     5      2     461
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _inc_year                                             5     4      1    2866
                                             14 BANK0      5     4      1
                        _hex2integer
                            _int2hex
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hex2char                                             4     3      1     514
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _dec_year                                             4     3      1    2866
                                             14 BANK0      4     3      1
                        _hex2integer
                            _int2hex
 ---------------------------------------------------------------------------------
 (2) _int2hex                                              5     4      1    1525
                                              9 BANK0      5     4      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     575
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _hex2integer                                          6     6      0    1051
                                              7 BANK0      6     6      0
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     236
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     693
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupt_isr                                        6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _dec_year
     _hex2integer
       ___awmod
       ___bmul
     _int2hex
       ___awdiv
       ___awmod
   _delay
   _hex2char
   _i2c_master_init
   _inc_year
     _hex2integer
       ___awmod
       ___bmul
     _int2hex
       ___awdiv
       ___awmod
   _lcd_cmnt
     _delay
   _lcd_init
     _lcd_cmnt
       _delay
   _master_rx
   _master_tx
   _master_tx_write
     _char2int
   _space_stuff
     ___bmul (ARG)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _uart_lcd_update
     _lcd_data
       _delay

 _interrupt_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     36      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      94      12        0.0%
ABS                  0      0      94       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Feb 13 02:45:42 2018

              __CFG_CP$ON 0000                         pc 0002              lcd_data@data 0027  
          ___bmul@product 0022     __end_of_interrupt_isr 05BF               __CFG_CPD$ON 0000  
            ___awdiv@sign 0026                        fsr 0004                       l212 03B1  
                     l310 0631                       l312 0641                       _GIE 005F  
                     _RB4 0034                       _RE0 0048                       _RE1 0049  
                     _PEN 048A                       _SEN 0488                       _day 0075  
                     _inc 0058                       _min 0061                       _sec 0065  
                     fsr0 0004                       indf 0000              ___awmod@sign 0026  
            __CFG_FOSC$LP 0000              lcd_cmnt@cmnt 0027              __CFG_LVP$OFF 0000  
                    l2001 03DA                      l2011 03E2                      l2013 03F0  
                    l2023 0411                      l2121 0533                      l2113 050F  
                    l2051 048E                      l2043 0488                      l2027 0419  
                    l2019 0406                      l2211 0438                      l2115 051D  
                    l2053 049C                      l2061 04B5                      l2205 0427  
                    l2125 053E                      l2039 0481                      l2143 061B  
                    l2065 04BD                      l2057 04AA                      l2233 0468  
                    l2217 0445                      l2137 05FF                      l2401 005C  
                    l2227 045A                      l2139 060D                      l2147 0626  
                    l2411 006D                      l2317 06DB                      l2333 0345  
                    l2253 028A                      l2309 06EB                      l2319 06DD  
                    l2327 0680                      l2183 04DD                      l2329 0684  
                    l2177 04CB                      l2361 0395                      l2345 0362  
                    l2281 02DE                      l2273 02BD                      l2195 04F8  
                    l2355 0379                      l2339 0357                      l2259 02A0  
                    l2419 0085                      l2189 04EB                      l2269 02B7  
                    l2359 0388                      l2295 02F1                      l2287 02ED  
                    l2471 01A4                      l2463 0179                      l2369 03B4  
                    l2297 026A                      l2299 0339                      l2467 018E  
                    l2483 01B2                      l2485 0260                      l2469 01A0  
                    l1973 078C                      l1977 0792                      l1969 0656  
                    l1995 03CF                      STR_1 0555                      STR_2 056C  
                    STR_3 056C                      u2115 02D4                      u2225 0377  
                    u2075 073C                      u2165 06F4                      u1615 064B  
                    u2255 03AF                      u1705 03F1                      u1625 063B  
                    u1715 03FD             __CFG_DEBUG$ON 0000                      u1805 04A2  
                    u1725 0407                      u1815 04AB                      u1905 0534  
                    u1685 03E5                      u1845 0755                      u1935 0602  
                    u1785 0491                      u1865 0512                      u1955 0613  
                    _PEIE 005E                      u1885 051E                      u1965 061C  
                    u1895 052A                      _RBIE 005B                      _RBIF 0058  
                    _RCEN 048B                      _RSEN 0489                      _date 005D  
                    _flag 0057                      _main 003B                      _hour 005F  
                    _year 0067                      btemp 007E                      ltemp 007E  
       ??_uart_lcd_update 0029                      start 0012                      ttemp 007E  
                    wtemp 007E         ___bmul@multiplier 0023                     ?_main 0076  
                   _ACKEN 048C                     _ACKDT 048D                     _BCLIE 046B  
         __end_of___awdiv 0420             __CFG_WDTE$OFF 0000           __end_of___awmod 04C4  
         ___awdiv@divisor 0020           __end_of___lwdiv 0545                     i1l224 0588  
                   i1l229 05B4           __end_of___lwmod 062D           ___awdiv@counter 0025  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
                   _SSPIE 0463                     _TRISE 0089                     _SSPIF 0063  
                   _SSPEN 00A5             __CFG_WRT$HALF 0000             __CFG_PWRTE$ON 0000  
         __end_of_int2hex 05F7                     _delay 062D           __end_of_dpowers 0555  
                   _month 0063                     _timer 005B                     main@i 0055  
          __CFG_BOREN$OFF 0000                     pclath 000A                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __end_of_sprintf 033E           __initialization 0015  
            __end_of_main 0263         ??_master_tx_write 0023      __size_of_hex2integer 002D  
                  ??_main 0047                    ?_delay 0020                    _ADCON1 009F  
        ___awdiv@dividend 0022                    i1l1933 05A5                    i1l1943 05B3  
                  _INTCON 000B                    u153_25 058F                    u155_25 059B  
        __end_of_char2int 075E                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
        __end_of_dec_year 06E6          __end_of_hex2char 0748          __end_of_lcd_data 07AD  
        __end_of_lcd_cmnt 07BF          __end_of_lcd_init 072E                    ___bmul 0788  
               ??___awdiv 0024                 ??___awmod 0024           _i2c_master_init 07D0  
           dec_year@index 002E          __end_of_inc_year 068D                 ??___lwdiv 0024  
               ??___lwmod 002C              ?_space_stuff 0024                    delay@i 0023  
                  delay@j 0025                    delay@x 0020          ___awdiv@quotient 0027  
         ___awmod@divisor 0020           ___awmod@counter 0025                 ??_int2hex 002A  
                  saved_w 007E                 ??_sprintf 003B              inc_year@temp 0032  
 __end_of__initialization 0037       ___bmul@multiplicand 0020            __pcstackCOMMON 0076  
            __pidataBANK1 075E             __end_of_delay 065F           _uart_lcd_update 06E6  
                 ??_delay 0022    master_tx_write@i2c_pkt 0026                __pbssBANK0 0056  
              __pbssBANK1 00A0   __end_of_i2c_master_init 07E1        __size_of_master_rx 0055  
      __size_of_master_tx 0041                __pmaintext 003B                   ?___bmul 0020  
              __pintentry 0004                 ?_char2int 0076                 ?_dec_year 002E  
               ?_hex2char 0020          uart_lcd_update@i 002A                char2int@in 0022  
               ?_lcd_data 0076                 ?_lcd_cmnt 0076                 ?_lcd_init 0076  
                 _SSPSTAT 0094                __stringtab 0545                 ?_inc_year 002E  
  __size_of_interrupt_isr 003C           _master_tx_write 033E                   _i2c_pkt 0069  
         __size_of___bmul 0013                   ___awdiv 03C3                   ___awmod 0475  
                 ___lwdiv 0505                   ___lwmod 05F7                _local_time 00C0  
                 _day_dec 0070   __end_of_uart_lcd_update 070D                   __ptext1 06E6  
                 __ptext2 079B                   __ptext3 0263                   __ptext4 05F7  
                 __ptext5 0505                   __ptext6 0773                   __ptext7 033E  
                 __ptext8 0748                   __ptext9 04C4                   _lcd_msg 00A0  
                 _lcd_ptr 0072                   _int2hex 05BF                ??_char2int 0020  
    __size_of_space_stuff 0015                   _dpowers 054B                   _key_nav 0059  
                 _min_dec 0073                ??_dec_year 002F                   _sec_dec 0074  
        ___awmod@dividend 0022         __end_of_master_rx 0475         __end_of_master_tx 0505  
              ??_hex2char 0021                ??_lcd_data 0027                   _sprintf 0263  
              ??_lcd_cmnt 0027                hex2char@in 0023                   clrloop0 07E2  
              ??_lcd_init 0028      end_of_initialization 0037                ??_inc_year 002F  
        ?_i2c_master_init 0076        uart_lcd_update@len 0028             ??_hex2integer 0027  
           _interrupt_isr 0583             inc_year@index 002E   __end_of_master_tx_write 03C3  
              int2hex@out 0029                main@status 0054            __end_of___bmul 079B  
          ?_interrupt_isr 0076          ?_uart_lcd_update 0028       __end_of_hex2integer 06BA  
     start_initialization 0015          master_rx@i2c_pkt 0022                  ??___bmul 0021  
            dec_year@temp 0031                init_fetch0 07BF          master_tx@i2c_pkt 0021  
             __pdataBANK1 00C7               __pbssCOMMON 0070                 ___latbits 0002  
           __pcstackBANK0 0020         __size_of_char2int 0016       __end_of__stringdata 0583  
       __size_of_dec_year 002C          master_rx@rx_time 0020         __size_of_hex2char 001A  
        ?_master_tx_write 0076          dec_year@data_ptr 0030             hex2integer@in 002C  
       __size_of_lcd_data 0012         __size_of_lcd_cmnt 0012         __size_of_lcd_init 0021  
             sprintf@_val 0041               sprintf@flag 003F               sprintf@prec 0040  
       __size_of_inc_year 002E                 __pnvBANK0 0069          ___lwdiv@dividend 0022  
         ??_interrupt_isr 0076               _hex2integer 068D                  ?___awdiv 0020  
                ?___awmod 0020                  ?___lwdiv 0020                  ?___lwmod 0028  
               __pstrings 0545                  ?_int2hex 0029          ___lwdiv@quotient 0026  
          __size_of_delay 0032                  ?_sprintf 002E                 _master_rx 0420  
               _master_tx 04C4         interrupt_function 0004          master_tx_write@i 0024  
               clear_ram0 07E1                 _month_dec 005A                 _timer_ptr 00D5  
           ??_space_stuff 0025               __stringbase 054A               __stringdata 0555  
               int2hex@in 002D                ?_master_rx 0020                ?_master_tx 0076  
        __size_of___awdiv 005D          __size_of___awmod 004F  __size_of_i2c_master_init 0011  
        __size_of___lwdiv 0040          __size_of___lwmod 0036        __end_of__stringtab 054B  
                _char2int 0748          space_stuff@index 0024          __size_of_int2hex 0038  
                _dec_year 06BA                  _date_dec 0056       __end_of_space_stuff 0788  
                _hex2char 072E           ___lwdiv@divisor 0020           ___lwdiv@counter 0025  
                __ptext10 0420                  __ptext11 070D                  __ptext20 068D  
                __ptext12 07AD                  __ptext21 0788                  __ptext13 062D  
                __ptext22 0475                  __ptext14 065F                  __ptext23 0583  
                __ptext15 07D0                  __ptext16 072E                  __ptext17 06BA  
                __ptext18 05BF                  __ptext19 03C3                  _lcd_data 079B  
                _lcd_cmnt 07AD                  _lcd_msg1 00B0                  _lcd_init 070D  
        __size_of_sprintf 00DB                  _inc_year 065F             space_stuff@in 0026  
           __size_of_main 0228                  _hour_dec 0071                  _year_dec 005C  
             hex2char@out 0020             _timer_min_max 00C7                  init_ram0 07C3  
__size_of_uart_lcd_update 0027               ??_master_rx 0021               ??_master_tx 0020  
                intlevel1 0000                 sprintf@ap 003E                 sprintf@sp 0045  
        ___lwmod@dividend 002A                 stringcode 0545       uart_lcd_update@data 002C  
        inc_year@data_ptr 0031              ?_hex2integer 0076               _space_stuff 0773  
              _OPTION_REG 0081                  sprintf@c 0046                  sprintf@f 002E  
         ___lwmod@divisor 0028           ___lwmod@counter 002D         ??_i2c_master_init 0020  
                stringdir 0545                  stringtab 0545  __size_of_master_tx_write 0085  
