

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Jan 25 01:48:09 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     	;# 
    38  0001                     	;# 
    39  0002                     	;# 
    40  0003                     	;# 
    41  0004                     	;# 
    42  0005                     	;# 
    43  0006                     	;# 
    44  0007                     	;# 
    45  0008                     	;# 
    46  0009                     	;# 
    47  000A                     	;# 
    48  000B                     	;# 
    49  000C                     	;# 
    50  000D                     	;# 
    51  000E                     	;# 
    52  000E                     	;# 
    53  000F                     	;# 
    54  0010                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0013                     	;# 
    58  0014                     	;# 
    59  0015                     	;# 
    60  0015                     	;# 
    61  0016                     	;# 
    62  0017                     	;# 
    63  0018                     	;# 
    64  0019                     	;# 
    65  001A                     	;# 
    66  001B                     	;# 
    67  001B                     	;# 
    68  001C                     	;# 
    69  001D                     	;# 
    70  001E                     	;# 
    71  001F                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  0087                     	;# 
    76  0088                     	;# 
    77  0089                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0094                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  010C                     	;# 
    92  010D                     	;# 
    93  010E                     	;# 
    94  010F                     	;# 
    95  018C                     	;# 
    96  018D                     	;# 
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  0088                     	;# 
   137  0089                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157                           
   158                           	psect	idataBANK1
   159  0632                     __pidataBANK1:	
   160                           
   161                           ;initializer for _timer_ptr
   162  0632  3463               	retlw	_hour& (0+255)
   163  0633  3465               	retlw	_min& (0+255)
   164  0634  3469               	retlw	_sec& (0+255)
   165  0635  3475               	retlw	_day& (0+255)
   166  0636  3461               	retlw	_date& (0+255)
   167  0637  3467               	retlw	_month& (0+255)
   168  0638  346B               	retlw	_year& (0+255)
   169                           
   170                           	psect	strings
   171  0300                     __pstrings:	
   172  0300                     stringtab:	
   173  0300                     __stringtab:	
   174  0300                     stringcode:	
   175                           ;	String table - string pointers are 1 byte each
   176                           
   177  0300                     stringdir:	
   178  0300  3003               	movlw	high stringdir
   179  0301  008A               	movwf	10
   180  0302  0804               	movf	4,w
   181  0303  0A84               	incf	4,f
   182  0304  0782               	addwf	2,f
   183  0305                     __stringbase:	
   184  0305  3400               	retlw	0
   185  0306                     __end_of__stringtab:	
   186  0306                     _dpowers:	
   187  0306  3401               	retlw	1
   188  0307  3400               	retlw	0
   189  0308  340A               	retlw	10
   190  0309  3400               	retlw	0
   191  030A  3464               	retlw	100
   192  030B  3400               	retlw	0
   193  030C  34E8               	retlw	232
   194  030D  3403               	retlw	3
   195  030E  3410               	retlw	16
   196  030F  3427               	retlw	39
   197  0310                     __end_of_dpowers:	
   198  0310                     __stringdata:	
   199  0310                     STR_1:	
   200  0310  3454               	retlw	84	;'T'
   201  0311  3469               	retlw	105	;'i'
   202  0312  346D               	retlw	109	;'m'
   203  0313  3465               	retlw	101	;'e'
   204  0314  343A               	retlw	58	;':'
   205  0315  3420               	retlw	32	;' '
   206  0316  3425               	retlw	37	;'%'
   207  0317  3464               	retlw	100	;'d'
   208  0318  3425               	retlw	37	;'%'
   209  0319  3464               	retlw	100	;'d'
   210  031A  342D               	retlw	45	;'-'
   211  031B  3425               	retlw	37	;'%'
   212  031C  3464               	retlw	100	;'d'
   213  031D  3425               	retlw	37	;'%'
   214  031E  3464               	retlw	100	;'d'
   215  031F  342D               	retlw	45	;'-'
   216  0320  3425               	retlw	37	;'%'
   217  0321  3464               	retlw	100	;'d'
   218  0322  3425               	retlw	37	;'%'
   219  0323  3464               	retlw	100	;'d'
   220  0324  3420               	retlw	32	;' '
   221  0325  3420               	retlw	32	;' '
   222  0326  3400               	retlw	0
   223  0327                     STR_2:	
   224  0327  3444               	retlw	68	;'D'
   225  0328  3461               	retlw	97	;'a'
   226  0329  3474               	retlw	116	;'t'
   227  032A  3465               	retlw	101	;'e'
   228  032B  343A               	retlw	58	;':'
   229  032C  3420               	retlw	32	;' '
   230  032D  3425               	retlw	37	;'%'
   231  032E  3464               	retlw	100	;'d'
   232  032F  3425               	retlw	37	;'%'
   233  0330  3464               	retlw	100	;'d'
   234  0331  342D               	retlw	45	;'-'
   235  0332  3425               	retlw	37	;'%'
   236  0333  3464               	retlw	100	;'d'
   237  0334  3425               	retlw	37	;'%'
   238  0335  3464               	retlw	100	;'d'
   239  0336  342D               	retlw	45	;'-'
   240  0337  3425               	retlw	37	;'%'
   241  0338  3464               	retlw	100	;'d'
   242  0339  3425               	retlw	37	;'%'
   243  033A  3464               	retlw	100	;'d'
   244  033B  3420               	retlw	32	;' '
   245  033C  3420               	retlw	32	;' '
   246  033D  3400               	retlw	0
   247  033E                     STR_3:	
   248  033E  3444               	retlw	68	;'D'
   249  033F  3461               	retlw	97	;'a'
   250  0340  3474               	retlw	116	;'t'
   251  0341  3465               	retlw	101	;'e'
   252  0342  343A               	retlw	58	;':'
   253  0343  3420               	retlw	32	;' '
   254  0344  3425               	retlw	37	;'%'
   255  0345  3464               	retlw	100	;'d'
   256  0346  3425               	retlw	37	;'%'
   257  0347  3464               	retlw	100	;'d'
   258  0348  342D               	retlw	45	;'-'
   259  0349  3425               	retlw	37	;'%'
   260  034A  3464               	retlw	100	;'d'
   261  034B  3425               	retlw	37	;'%'
   262  034C  3464               	retlw	100	;'d'
   263  034D  342D               	retlw	45	;'-'
   264  034E  3425               	retlw	37	;'%'
   265  034F  3464               	retlw	100	;'d'
   266  0350  3425               	retlw	37	;'%'
   267  0351  3464               	retlw	100	;'d'
   268  0352  343C               	retlw	60	;'<'
   269  0353  342D               	retlw	45	;'-'
   270  0354  3400               	retlw	0
   271  0355                     __end_of__stringdata:	
   272                           
   273                           ; #config settings
   274  0000                     
   275                           	psect	nvBANK0
   276  006D                     __pnvBANK0:	
   277  006D                     _i2c_pkt:	
   278  006D                     	ds	3
   279  000B                     _INTCON	set	11
   280  0005                     _PORTA	set	5
   281  0008                     _PORTD	set	8
   282  0013                     _SSPBUF	set	19
   283  0014                     _SSPCON	set	20
   284  0006                     _PORTB	set	6
   285  005F                     _GIE	set	95
   286  005E                     _PEIE	set	94
   287  0034                     _RB4	set	52
   288  005B                     _RBIE	set	91
   289  0058                     _RBIF	set	88
   290  0048                     _RE0	set	72
   291  0049                     _RE1	set	73
   292  00A5                     _SSPEN	set	165
   293  0063                     _SSPIF	set	99
   294  009F                     _ADCON1	set	159
   295  0081                     _OPTION_REG	set	129
   296  0093                     _SSPADD	set	147
   297  0094                     _SSPSTAT	set	148
   298  0085                     _TRISA	set	133
   299  0086                     _TRISB	set	134
   300  0088                     _TRISD	set	136
   301  0089                     _TRISE	set	137
   302  048D                     _ACKDT	set	1165
   303  048C                     _ACKEN	set	1164
   304  046B                     _BCLIE	set	1131
   305  048A                     _PEN	set	1162
   306  048B                     _RCEN	set	1163
   307  0489                     _RSEN	set	1161
   308  0488                     _SEN	set	1160
   309  0463                     _SSPIE	set	1123
   310  043B                     _TRISC3	set	1083
   311  043C                     _TRISC4	set	1084
   312                           
   313                           	psect	cinit
   314  0015                     start_initialization:	
   315  0015                     __initialization:	
   316                           
   317                           ; Clear objects allocated to COMMON
   318  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   319  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   320  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   321  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   322  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   323  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   324                           
   325                           ; Clear objects allocated to BANK0
   326  001B  1383               	bcf	3,7	;select IRP bank0
   327  001C  3054               	movlw	low __pbssBANK0
   328  001D  0084               	movwf	4
   329  001E  306D               	movlw	low (__pbssBANK0+25)
   330  001F  120A  118A  262A  120A  118A  	fcall	clear_ram0
   331                           
   332                           ; Clear objects allocated to BANK1
   333  0024  30A0               	movlw	low __pbssBANK1
   334  0025  0084               	movwf	4
   335  0026  30C0               	movlw	low (__pbssBANK1+32)
   336  0027  120A  118A  262A  120A  118A  	fcall	clear_ram0
   337                           
   338                           ; Initialize objects allocated to BANK1
   339  002C  30C7               	movlw	low (__pdataBANK1+7)
   340  002D  00FD               	movwf	btemp+-1
   341  002E  3006               	movlw	high __pidataBANK1
   342  002F  00FE               	movwf	btemp
   343  0030  3032               	movlw	low __pidataBANK1
   344  0031  00FF               	movwf	btemp+1
   345  0032  30C0               	movlw	low __pdataBANK1
   346  0033  0084               	movwf	4
   347  0034  120A  118A  260C   	fcall	init_ram0
   348  0037                     end_of_initialization:	
   349                           ;End of C runtime variable initialization code
   350                           
   351  0037                     __end_of__initialization:	
   352  0037  0183               	clrf	3
   353  0038  120A  118A  283B   	ljmp	_main	;jump to C main() function
   354                           
   355                           	psect	bssCOMMON
   356  0070                     __pbssCOMMON:	
   357  0070                     _date_dec:	
   358  0070                     	ds	1
   359  0071                     _day_dec:	
   360  0071                     	ds	1
   361  0072                     _hour_dec:	
   362  0072                     	ds	1
   363  0073                     _min_dec:	
   364  0073                     	ds	1
   365  0074                     _sec_dec:	
   366  0074                     	ds	1
   367  0075                     _day:	
   368  0075                     	ds	1
   369                           
   370                           	psect	bssBANK0
   371  0054                     __pbssBANK0:	
   372  0054                     _flag:	
   373  0054                     	ds	1
   374  0055                     _inc:	
   375  0055                     	ds	1
   376  0056                     _key_nav:	
   377  0056                     	ds	1
   378  0057                     _month_dec:	
   379  0057                     	ds	1
   380  0058                     _timer:	
   381  0058                     	ds	1
   382  0059                     _year_dec:	
   383  0059                     	ds	1
   384  005A                     _local_time:	
   385  005A                     	ds	7
   386  0061                     _date:	
   387  0061                     	ds	2
   388  0063                     _hour:	
   389  0063                     	ds	2
   390  0065                     _min:	
   391  0065                     	ds	2
   392  0067                     _month:	
   393  0067                     	ds	2
   394  0069                     _sec:	
   395  0069                     	ds	2
   396  006B                     _year:	
   397  006B                     	ds	2
   398                           
   399                           	psect	bssBANK1
   400  00A0                     __pbssBANK1:	
   401  00A0                     _lcd_msg:	
   402  00A0                     	ds	16
   403  00B0                     _lcd_msg1:	
   404  00B0                     	ds	16
   405                           
   406                           	psect	dataBANK1
   407  00C0                     __pdataBANK1:	
   408  00C0                     _timer_ptr:	
   409  00C0                     	ds	7
   410                           
   411                           	psect	clrtext
   412  062A                     clear_ram0:	
   413                           ;	Called with FSR containing the base address, and
   414                           ;	W with the last address+1
   415                           
   416  062A  0064               	clrwdt	;clear the watchdog before getting into this loop
   417  062B                     clrloop0:	
   418  062B  0180               	clrf	0	;clear RAM location pointed to by FSR
   419  062C  0A84               	incf	4,f	;increment pointer
   420  062D  0604               	xorwf	4,w	;XOR with final address
   421  062E  1903               	btfsc	3,2	;have we reached the end yet?
   422  062F  3400               	retlw	0	;all done for this memory range, return
   423  0630  0604               	xorwf	4,w	;XOR again to restore value
   424  0631  2E2B               	goto	clrloop0	;do the next byte
   425                           
   426                           	psect	inittext
   427  0608                     init_fetch0:	
   428                           ;	Called with low address in FSR and high address in W
   429                           
   430  0608  087E               	movf	126,w
   431  0609  008A               	movwf	10
   432  060A  087F               	movf	127,w
   433  060B  0082               	movwf	2
   434  060C                     init_ram0:	
   435                           ;Called with:
   436                           ;	high address of idata address in btemp 
   437                           ;	low address of idata address in btemp+1 
   438                           ;	low address of data in FSR
   439                           ;	high address + 1 of data in btemp-1
   440                           
   441  060C  2608  120A  118A   	fcall	init_fetch0
   442  060F  0080               	movwf	0
   443  0610  0A84               	incf	4,f
   444  0611  0804               	movf	4,w
   445  0612  067D               	xorwf	125,w
   446  0613  1903               	btfsc	3,2
   447  0614  3400               	retlw	0
   448  0615  0AFF               	incf	127,f
   449  0616  1903               	btfsc	3,2
   450  0617  0AFE               	incf	126,f
   451  0618  2E0C               	goto	init_ram0
   452                           
   453                           	psect	cstackBANK1
   454  00C7                     __pcstackBANK1:	
   455  00C7                     main@status:	
   456                           
   457                           ; 1 bytes @ 0x0
   458  00C7                     	ds	1
   459  00C8                     main@i:	
   460                           
   461                           ; 1 bytes @ 0x1
   462  00C8                     	ds	1
   463                           
   464                           	psect	cstackCOMMON
   465  0076                     __pcstackCOMMON:	
   466  0076                     ?_lcd_init:	
   467  0076                     ?_i2c_master_init:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  0076                     ?_lcd_cmnt:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0076                     ?_dec_year:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0076                     ?_inc_year:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  0076                     ?_main:	
   480                           ; 0 bytes @ 0x0
   481                           
   482  0076                     ?_interrupt_isr:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  0076                     ??_interrupt_isr:	
   486                           ; 0 bytes @ 0x0
   487                           
   488  0076                     ?_lcd_data:	
   489                           ; 0 bytes @ 0x0
   490                           
   491  0076                     ?_master_tx:	
   492                           ; 0 bytes @ 0x0
   493                           
   494  0076                     ?_master_tx_write:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0076                     ?_char2int:	
   498                           ; 1 bytes @ 0x0
   499                           
   500                           
   501                           ; 1 bytes @ 0x0
   502  0076                     	ds	6
   503                           
   504                           	psect	cstackBANK0
   505  0020                     __pcstackBANK0:	
   506  0020                     ??_i2c_master_init:	
   507  0020                     ??_master_tx:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0020                     ?_hex2char:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0020                     ?_delay:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0020                     ??_dec_year:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0020                     ??_inc_year:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0020                     ??_char2int:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0020                     ?_master_rx:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0020                     ?___lwdiv:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0020                     master_rx@rx_time:	
   532                           ; 2 bytes @ 0x0
   533                           
   534  0020                     hex2char@out:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0020                     delay@x:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0020                     ___lwdiv@divisor:	
   541                           ; 2 bytes @ 0x0
   542                           
   543                           
   544                           ; 2 bytes @ 0x0
   545  0020                     	ds	1
   546  0021                     ??_master_rx:	
   547  0021                     ??_hex2char:	
   548                           ; 0 bytes @ 0x1
   549                           
   550  0021                     master_tx@i2c_pkt:	
   551                           ; 0 bytes @ 0x1
   552                           
   553  0021                     inc_year@data_ptr:	
   554                           ; 1 bytes @ 0x1
   555                           
   556  0021                     dec_year@data_ptr:	
   557                           ; 1 bytes @ 0x1
   558                           
   559                           
   560                           ; 1 bytes @ 0x1
   561  0021                     	ds	1
   562  0022                     ??_delay:	
   563  0022                     master_rx@i2c_pkt:	
   564                           ; 0 bytes @ 0x2
   565                           
   566  0022                     char2int@in:	
   567                           ; 1 bytes @ 0x2
   568                           
   569  0022                     ___lwdiv@dividend:	
   570                           ; 1 bytes @ 0x2
   571                           
   572                           
   573                           ; 2 bytes @ 0x2
   574  0022                     	ds	1
   575  0023                     ??_master_tx_write:	
   576  0023                     hex2char@in:	
   577                           ; 0 bytes @ 0x3
   578                           
   579  0023                     delay@i:	
   580                           ; 1 bytes @ 0x3
   581                           
   582                           
   583                           ; 2 bytes @ 0x3
   584  0023                     	ds	1
   585  0024                     ??___lwdiv:	
   586  0024                     master_tx_write@i2c_pkt:	
   587                           ; 0 bytes @ 0x4
   588                           
   589                           
   590                           ; 1 bytes @ 0x4
   591  0024                     	ds	1
   592  0025                     ___lwdiv@counter:	
   593  0025                     delay@j:	
   594                           ; 1 bytes @ 0x5
   595                           
   596                           
   597                           ; 2 bytes @ 0x5
   598  0025                     	ds	1
   599  0026                     ___lwdiv@quotient:	
   600                           
   601                           ; 2 bytes @ 0x6
   602  0026                     	ds	1
   603  0027                     ??_lcd_cmnt:	
   604  0027                     ??_lcd_data:	
   605                           ; 0 bytes @ 0x7
   606                           
   607  0027                     lcd_cmnt@cmnt:	
   608                           ; 0 bytes @ 0x7
   609                           
   610  0027                     lcd_data@data:	
   611                           ; 1 bytes @ 0x7
   612                           
   613                           
   614                           ; 1 bytes @ 0x7
   615  0027                     	ds	1
   616  0028                     ??_lcd_init:	
   617  0028                     ?_uart_lcd_update:	
   618                           ; 0 bytes @ 0x8
   619                           
   620  0028                     ?___lwmod:	
   621                           ; 0 bytes @ 0x8
   622                           
   623  0028                     uart_lcd_update@len:	
   624                           ; 2 bytes @ 0x8
   625                           
   626  0028                     ___lwmod@divisor:	
   627                           ; 1 bytes @ 0x8
   628                           
   629                           
   630                           ; 2 bytes @ 0x8
   631  0028                     	ds	1
   632  0029                     ??_uart_lcd_update:	
   633                           
   634                           ; 0 bytes @ 0x9
   635  0029                     	ds	1
   636  002A                     uart_lcd_update@data:	
   637  002A                     ___lwmod@dividend:	
   638                           ; 1 bytes @ 0xA
   639                           
   640                           
   641                           ; 2 bytes @ 0xA
   642  002A                     	ds	1
   643  002B                     uart_lcd_update@i:	
   644                           
   645                           ; 2 bytes @ 0xB
   646  002B                     	ds	1
   647  002C                     ??___lwmod:	
   648                           
   649                           ; 0 bytes @ 0xC
   650  002C                     	ds	1
   651  002D                     ___lwmod@counter:	
   652                           
   653                           ; 1 bytes @ 0xD
   654  002D                     	ds	1
   655  002E                     ?_sprintf:	
   656  002E                     sprintf@f:	
   657                           ; 2 bytes @ 0xE
   658                           
   659                           
   660                           ; 1 bytes @ 0xE
   661  002E                     	ds	13
   662  003B                     ??_sprintf:	
   663                           
   664                           ; 0 bytes @ 0x1B
   665  003B                     	ds	3
   666  003E                     sprintf@ap:	
   667                           
   668                           ; 1 bytes @ 0x1E
   669  003E                     	ds	1
   670  003F                     sprintf@flag:	
   671                           
   672                           ; 1 bytes @ 0x1F
   673  003F                     	ds	1
   674  0040                     sprintf@prec:	
   675                           
   676                           ; 1 bytes @ 0x20
   677  0040                     	ds	1
   678  0041                     sprintf@_val:	
   679                           
   680                           ; 4 bytes @ 0x21
   681  0041                     	ds	4
   682  0045                     sprintf@sp:	
   683                           
   684                           ; 1 bytes @ 0x25
   685  0045                     	ds	1
   686  0046                     sprintf@c:	
   687                           
   688                           ; 1 bytes @ 0x26
   689  0046                     	ds	1
   690  0047                     ??_main:	
   691                           
   692                           ; 0 bytes @ 0x27
   693  0047                     	ds	13
   694                           
   695                           	psect	maintext
   696  003B                     __pmaintext:	
   697 ;;
   698 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
   699 ;;
   700 ;; *************** function _main *****************
   701 ;; Defined at:
   702 ;;		line 24 in file "i2c_driver.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  i               1    1[BANK1 ] unsigned char 
   707 ;;  status          1    0[BANK1 ] unsigned char 
   708 ;; Return value:  Size  Location     Type
   709 ;;		None               void
   710 ;; Registers used:
   711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 17F/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         0       0       0       0       0
   718 ;;      Locals:         0       0       2       0       0
   719 ;;      Temps:          0      13       0       0       0
   720 ;;      Totals:         0      13       2       0       0
   721 ;;Total ram usage:       15 bytes
   722 ;; Hardware stack levels required when called:    4
   723 ;; This function calls:
   724 ;;		_dec_year
   725 ;;		_delay
   726 ;;		_hex2char
   727 ;;		_i2c_master_init
   728 ;;		_inc_year
   729 ;;		_lcd_cmnt
   730 ;;		_lcd_init
   731 ;;		_master_rx
   732 ;;		_master_tx
   733 ;;		_master_tx_write
   734 ;;		_sprintf
   735 ;;		_uart_lcd_update
   736 ;; This function is called by:
   737 ;;		Startup code after reset
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           
   742                           ;psect for function _main
   743  003B                     _main:	
   744                           
   745                           ;i2c_driver.c: 28: TRISD=0X00;
   746                           
   747                           ;incstack = 0
   748                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   749  003B  1683               	bsf	3,5	;RP0=1, select bank1
   750  003C  1303               	bcf	3,6	;RP1=0, select bank1
   751  003D  0188               	clrf	8	;volatile
   752                           
   753                           ;i2c_driver.c: 29: TRISE=0X00;
   754  003E  0189               	clrf	9	;volatile
   755                           
   756                           ;i2c_driver.c: 30: TRISB=0XFF;
   757  003F  30FF               	movlw	255
   758  0040  0086               	movwf	6	;volatile
   759                           
   760                           ;i2c_driver.c: 31: TRISA=0X00;
   761  0041  0185               	clrf	5	;volatile
   762                           
   763                           ;i2c_driver.c: 32: PORTD=0X00;
   764  0042  1283               	bcf	3,5	;RP0=0, select bank0
   765  0043  1303               	bcf	3,6	;RP1=0, select bank0
   766  0044  0188               	clrf	8	;volatile
   767                           
   768                           ;i2c_driver.c: 33: RBIE=1;
   769  0045  158B               	bsf	11,3	;volatile
   770                           
   771                           ;i2c_driver.c: 34: OPTION_REG=0XB0;
   772  0046  30B0               	movlw	176
   773  0047  1683               	bsf	3,5	;RP0=1, select bank1
   774  0048  1303               	bcf	3,6	;RP1=0, select bank1
   775  0049  0081               	movwf	1	;volatile
   776                           
   777                           ;i2c_driver.c: 38: i2c_pkt.address=0x68;
   778  004A  3068               	movlw	104
   779  004B  1283               	bcf	3,5	;RP0=0, select bank0
   780  004C  1303               	bcf	3,6	;RP1=0, select bank0
   781  004D  00C7               	movwf	??_main
   782  004E  0847               	movf	??_main,w
   783  004F  00ED               	movwf	_i2c_pkt
   784                           
   785                           ;i2c_driver.c: 39: i2c_pkt.data=0x00;
   786  0050  01EE               	clrf	_i2c_pkt+1
   787                           
   788                           ;i2c_driver.c: 40: i2c_pkt.ack =0;
   789  0051  01EF               	clrf	_i2c_pkt+2
   790                           
   791                           ;i2c_driver.c: 42: lcd_init();
   792  0052  120A  118A  2593  120A  118A  	fcall	_lcd_init
   793                           
   794                           ;i2c_driver.c: 43: i2c_master_init();
   795  0057  120A  118A  2619  120A  118A  	fcall	_i2c_master_init
   796  005C                     l1975:	
   797                           ;i2c_driver.c: 45: while(1)
   798                           
   799                           
   800                           ;i2c_driver.c: 46: {
   801                           ;i2c_driver.c: 48: int_u8 i,status;
   802                           ;i2c_driver.c: 51: master_tx(&i2c_pkt);
   803  005C  306D               	movlw	_i2c_pkt& (0+255)
   804  005D  120A  118A  23FE  120A  118A  	fcall	_master_tx
   805                           
   806                           ;i2c_driver.c: 52: for(i=0,timer=(int_u8 *)&local_time;i<7;i++,timer++)
   807  0062  1683               	bsf	3,5	;RP0=1, select bank1
   808  0063  1303               	bcf	3,6	;RP1=0, select bank1
   809  0064  01C8               	clrf	main@i^(0+128)
   810  0065  305A               	movlw	_local_time& (0+255)
   811  0066  1283               	bcf	3,5	;RP0=0, select bank0
   812  0067  1303               	bcf	3,6	;RP1=0, select bank0
   813  0068  00C7               	movwf	??_main
   814  0069  0847               	movf	??_main,w
   815  006A  00D8               	movwf	_timer
   816  006B  3007               	movlw	7
   817  006C  1683               	bsf	3,5	;RP0=1, select bank1
   818  006D  1303               	bcf	3,6	;RP1=0, select bank1
   819  006E  0248               	subwf	main@i^(0+128),w
   820  006F  1803               	btfsc	3,0
   821  0070  2891               	goto	l1993
   822  0071                     l1985:	
   823                           
   824                           ;i2c_driver.c: 53: master_rx(&i2c_pkt,timer);
   825  0071  1283               	bcf	3,5	;RP0=0, select bank0
   826  0072  1303               	bcf	3,6	;RP1=0, select bank0
   827  0073  0858               	movf	_timer,w
   828  0074  00C7               	movwf	??_main
   829  0075  0847               	movf	??_main,w
   830  0076  00A0               	movwf	master_rx@rx_time
   831  0077  306D               	movlw	_i2c_pkt& (0+255)
   832  0078  120A  118A  2355  120A  118A  	fcall	_master_rx
   833  007D  3001               	movlw	1
   834  007E  1283               	bcf	3,5	;RP0=0, select bank0
   835  007F  1303               	bcf	3,6	;RP1=0, select bank0
   836  0080  00C7               	movwf	??_main
   837  0081  0847               	movf	??_main,w
   838  0082  1683               	bsf	3,5	;RP0=1, select bank1
   839  0083  1303               	bcf	3,6	;RP1=0, select bank1
   840  0084  07C8               	addwf	main@i^(0+128),f
   841  0085  3001               	movlw	1
   842  0086  1283               	bcf	3,5	;RP0=0, select bank0
   843  0087  1303               	bcf	3,6	;RP1=0, select bank0
   844  0088  00C7               	movwf	??_main
   845  0089  0847               	movf	??_main,w
   846  008A  07D8               	addwf	_timer,f
   847  008B  3007               	movlw	7
   848  008C  1683               	bsf	3,5	;RP0=1, select bank1
   849  008D  1303               	bcf	3,6	;RP1=0, select bank1
   850  008E  0248               	subwf	main@i^(0+128),w
   851  008F  1C03               	skipc
   852  0090  2871               	goto	l1985
   853  0091                     l1993:	
   854                           
   855                           ;i2c_driver.c: 56: hex2char(local_time.HH,hour);
   856  0091  3063               	movlw	_hour& (0+255)
   857  0092  1283               	bcf	3,5	;RP0=0, select bank0
   858  0093  1303               	bcf	3,6	;RP1=0, select bank0
   859  0094  00C7               	movwf	??_main
   860  0095  0847               	movf	??_main,w
   861  0096  00A0               	movwf	hex2char@out
   862  0097  085C               	movf	_local_time+2,w
   863  0098  120A  118A  25B4  120A  118A  	fcall	_hex2char
   864                           
   865                           ;i2c_driver.c: 57: hex2char(local_time.MM,min);
   866  009D  3065               	movlw	_min& (0+255)
   867  009E  1283               	bcf	3,5	;RP0=0, select bank0
   868  009F  1303               	bcf	3,6	;RP1=0, select bank0
   869  00A0  00C7               	movwf	??_main
   870  00A1  0847               	movf	??_main,w
   871  00A2  00A0               	movwf	hex2char@out
   872  00A3  085B               	movf	_local_time+1,w
   873  00A4  120A  118A  25B4  120A  118A  	fcall	_hex2char
   874                           
   875                           ;i2c_driver.c: 58: hex2char(local_time.SS,sec);
   876  00A9  3069               	movlw	_sec& (0+255)
   877  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   878  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   879  00AC  00C7               	movwf	??_main
   880  00AD  0847               	movf	??_main,w
   881  00AE  00A0               	movwf	hex2char@out
   882  00AF  085A               	movf	_local_time,w
   883  00B0  120A  118A  25B4  120A  118A  	fcall	_hex2char
   884                           
   885                           ;i2c_driver.c: 60: sprintf(lcd_msg,"Time: %d%d-%d%d-%d%d  ",hour[1],hour[0],min[1],min[0
      +                          ],sec[1],sec[0]);
   886  00B5  300B               	movlw	(STR_1-__stringbase)& (0+255)
   887  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   888  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   889  00B8  00C7               	movwf	??_main
   890  00B9  0847               	movf	??_main,w
   891  00BA  00AE               	movwf	sprintf@f
   892  00BB  0864               	movf	_hour+1,w
   893  00BC  00C8               	movwf	??_main+1
   894  00BD  01C9               	clrf	??_main+2
   895  00BE  0848               	movf	??_main+1,w
   896  00BF  00AF               	movwf	?_sprintf+1
   897  00C0  0849               	movf	??_main+2,w
   898  00C1  00B0               	movwf	?_sprintf+2
   899  00C2  0863               	movf	_hour,w
   900  00C3  00CA               	movwf	??_main+3
   901  00C4  01CB               	clrf	??_main+4
   902  00C5  084A               	movf	??_main+3,w
   903  00C6  00B1               	movwf	?_sprintf+3
   904  00C7  084B               	movf	??_main+4,w
   905  00C8  00B2               	movwf	?_sprintf+4
   906  00C9  0866               	movf	_min+1,w
   907  00CA  00CC               	movwf	??_main+5
   908  00CB  01CD               	clrf	??_main+6
   909  00CC  084C               	movf	??_main+5,w
   910  00CD  00B3               	movwf	?_sprintf+5
   911  00CE  084D               	movf	??_main+6,w
   912  00CF  00B4               	movwf	?_sprintf+6
   913  00D0  0865               	movf	_min,w
   914  00D1  00CE               	movwf	??_main+7
   915  00D2  01CF               	clrf	??_main+8
   916  00D3  084E               	movf	??_main+7,w
   917  00D4  00B5               	movwf	?_sprintf+7
   918  00D5  084F               	movf	??_main+8,w
   919  00D6  00B6               	movwf	?_sprintf+8
   920  00D7  086A               	movf	_sec+1,w
   921  00D8  00D0               	movwf	??_main+9
   922  00D9  01D1               	clrf	??_main+10
   923  00DA  0850               	movf	??_main+9,w
   924  00DB  00B7               	movwf	?_sprintf+9
   925  00DC  0851               	movf	??_main+10,w
   926  00DD  00B8               	movwf	?_sprintf+10
   927  00DE  0869               	movf	_sec,w
   928  00DF  00D2               	movwf	??_main+11
   929  00E0  01D3               	clrf	??_main+12
   930  00E1  0852               	movf	??_main+11,w
   931  00E2  00B9               	movwf	?_sprintf+11
   932  00E3  0853               	movf	??_main+12,w
   933  00E4  00BA               	movwf	?_sprintf+12
   934  00E5  30A0               	movlw	_lcd_msg& (0+255)
   935  00E6  120A  118A  2200  120A  118A  	fcall	_sprintf
   936                           
   937                           ;i2c_driver.c: 61: lcd_cmnt(0x80);
   938  00EB  3080               	movlw	128
   939  00EC  120A  118A  25F6  120A  118A  	fcall	_lcd_cmnt
   940                           
   941                           ;i2c_driver.c: 62: uart_lcd_update(lcd_msg,sizeof(lcd_msg));
   942  00F1  3010               	movlw	16
   943  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   944  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   945  00F4  00C7               	movwf	??_main
   946  00F5  0847               	movf	??_main,w
   947  00F6  00A8               	movwf	uart_lcd_update@len
   948  00F7  30A0               	movlw	_lcd_msg& (0+255)
   949  00F8  120A  118A  256C  120A  118A  	fcall	_uart_lcd_update
   950                           
   951                           ;i2c_driver.c: 63: hex2char(local_time.date,date);
   952  00FD  3061               	movlw	_date& (0+255)
   953  00FE  1283               	bcf	3,5	;RP0=0, select bank0
   954  00FF  1303               	bcf	3,6	;RP1=0, select bank0
   955  0100  00C7               	movwf	??_main
   956  0101  0847               	movf	??_main,w
   957  0102  00A0               	movwf	hex2char@out
   958  0103  085E               	movf	_local_time+4,w
   959  0104  120A  118A  25B4  120A  118A  	fcall	_hex2char
   960                           
   961                           ;i2c_driver.c: 64: hex2char(local_time.month,month);
   962  0109  3067               	movlw	_month& (0+255)
   963  010A  1283               	bcf	3,5	;RP0=0, select bank0
   964  010B  1303               	bcf	3,6	;RP1=0, select bank0
   965  010C  00C7               	movwf	??_main
   966  010D  0847               	movf	??_main,w
   967  010E  00A0               	movwf	hex2char@out
   968  010F  085F               	movf	_local_time+5,w
   969  0110  120A  118A  25B4  120A  118A  	fcall	_hex2char
   970                           
   971                           ;i2c_driver.c: 65: hex2char(local_time.year,year);
   972  0115  306B               	movlw	_year& (0+255)
   973  0116  1283               	bcf	3,5	;RP0=0, select bank0
   974  0117  1303               	bcf	3,6	;RP1=0, select bank0
   975  0118  00C7               	movwf	??_main
   976  0119  0847               	movf	??_main,w
   977  011A  00A0               	movwf	hex2char@out
   978  011B  0860               	movf	_local_time+6,w
   979  011C  120A  118A  25B4  120A  118A  	fcall	_hex2char
   980                           
   981                           ;i2c_driver.c: 66: sprintf(lcd_msg1,"Date: %d%d-%d%d-%d%d  ",date[1],date[0],month[1],mo
      +                          nth[0],year[1],year[0]);
   982  0121  3022               	movlw	(STR_2-__stringbase)& (0+255)
   983  0122  1283               	bcf	3,5	;RP0=0, select bank0
   984  0123  1303               	bcf	3,6	;RP1=0, select bank0
   985  0124  00C7               	movwf	??_main
   986  0125  0847               	movf	??_main,w
   987  0126  00AE               	movwf	sprintf@f
   988  0127  0862               	movf	_date+1,w
   989  0128  00C8               	movwf	??_main+1
   990  0129  01C9               	clrf	??_main+2
   991  012A  0848               	movf	??_main+1,w
   992  012B  00AF               	movwf	?_sprintf+1
   993  012C  0849               	movf	??_main+2,w
   994  012D  00B0               	movwf	?_sprintf+2
   995  012E  0861               	movf	_date,w
   996  012F  00CA               	movwf	??_main+3
   997  0130  01CB               	clrf	??_main+4
   998  0131  084A               	movf	??_main+3,w
   999  0132  00B1               	movwf	?_sprintf+3
  1000  0133  084B               	movf	??_main+4,w
  1001  0134  00B2               	movwf	?_sprintf+4
  1002  0135  0868               	movf	_month+1,w
  1003  0136  00CC               	movwf	??_main+5
  1004  0137  01CD               	clrf	??_main+6
  1005  0138  084C               	movf	??_main+5,w
  1006  0139  00B3               	movwf	?_sprintf+5
  1007  013A  084D               	movf	??_main+6,w
  1008  013B  00B4               	movwf	?_sprintf+6
  1009  013C  0867               	movf	_month,w
  1010  013D  00CE               	movwf	??_main+7
  1011  013E  01CF               	clrf	??_main+8
  1012  013F  084E               	movf	??_main+7,w
  1013  0140  00B5               	movwf	?_sprintf+7
  1014  0141  084F               	movf	??_main+8,w
  1015  0142  00B6               	movwf	?_sprintf+8
  1016  0143  086C               	movf	_year+1,w
  1017  0144  00D0               	movwf	??_main+9
  1018  0145  01D1               	clrf	??_main+10
  1019  0146  0850               	movf	??_main+9,w
  1020  0147  00B7               	movwf	?_sprintf+9
  1021  0148  0851               	movf	??_main+10,w
  1022  0149  00B8               	movwf	?_sprintf+10
  1023  014A  086B               	movf	_year,w
  1024  014B  00D2               	movwf	??_main+11
  1025  014C  01D3               	clrf	??_main+12
  1026  014D  0852               	movf	??_main+11,w
  1027  014E  00B9               	movwf	?_sprintf+11
  1028  014F  0853               	movf	??_main+12,w
  1029  0150  00BA               	movwf	?_sprintf+12
  1030  0151  30B0               	movlw	_lcd_msg1& (0+255)
  1031  0152  120A  118A  2200  120A  118A  	fcall	_sprintf
  1032                           
  1033                           ;i2c_driver.c: 67: lcd_cmnt(0xC0);
  1034  0157  30C0               	movlw	192
  1035  0158  120A  118A  25F6  120A  118A  	fcall	_lcd_cmnt
  1036                           
  1037                           ;i2c_driver.c: 68: uart_lcd_update(lcd_msg1,sizeof(lcd_msg1));
  1038  015D  3010               	movlw	16
  1039  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1040  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0160  00C7               	movwf	??_main
  1042  0161  0847               	movf	??_main,w
  1043  0162  00A8               	movwf	uart_lcd_update@len
  1044  0163  30B0               	movlw	_lcd_msg1& (0+255)
  1045  0164  120A  118A  256C  120A  118A  	fcall	_uart_lcd_update
  1046                           
  1047                           ;i2c_driver.c: 69: delay(100);
  1048  0169  3064               	movlw	100
  1049  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1050  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1051  016C  00A0               	movwf	delay@x
  1052  016D  3000               	movlw	0
  1053  016E  00A1               	movwf	delay@x+1
  1054  016F  120A  118A  24B5  120A  118A  	fcall	_delay
  1055                           
  1056                           ;i2c_driver.c: 72: while(flag)
  1057  0174  2996               	goto	l2039
  1058  0175                     l2021:	
  1059                           ;i2c_driver.c: 91: {
  1060                           ;i2c_driver.c: 94: case DOWN:
  1061                           
  1062                           ;i2c_driver.c: 90: switch(key_nav)
  1063                           
  1064                           
  1065                           ;i2c_driver.c: 95: dec_year(year);
  1066  0175  306B               	movlw	_year& (0+255)
  1067  0176  120A  118A  24E7  120A  118A  	fcall	_dec_year
  1068  017B  2982               	goto	l2027
  1069  017C                     l2025:	
  1070                           ;i2c_driver.c: 99: case UP:
  1071                           
  1072                           ;i2c_driver.c: 97: break;
  1073                           
  1074                           ;i2c_driver.c: 96: key_nav=0;
  1075                           
  1076                           
  1077                           ;i2c_driver.c: 100: inc_year(year);
  1078  017C  306B               	movlw	_year& (0+255)
  1079  017D  120A  118A  2516  120A  118A  	fcall	_inc_year
  1080  0182                     l2027:	
  1081                           
  1082                           ;i2c_driver.c: 101: key_nav=0;
  1083  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0184  2995               	goto	l2033
  1086  0185                     l2029:	
  1087                           ;i2c_driver.c: 104: case SET_KEY:
  1088                           
  1089                           ;i2c_driver.c: 102: break;
  1090                           
  1091                           
  1092                           ;i2c_driver.c: 106: status = master_tx_write(&i2c_pkt);
  1093  0185  306D               	movlw	_i2c_pkt& (0+255)
  1094  0186  120A  118A  23AA  120A  118A  	fcall	_master_tx_write
  1095  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1096  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1097  018D  00C7               	movwf	??_main
  1098  018E  0847               	movf	??_main,w
  1099  018F  1683               	bsf	3,5	;RP0=1, select bank1
  1100  0190  1303               	bcf	3,6	;RP1=0, select bank1
  1101  0191  00C7               	movwf	main@status^(0+128)
  1102                           
  1103                           ;i2c_driver.c: 107: flag = 0;
  1104  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0194  01D4               	clrf	_flag
  1107  0195                     l2033:	
  1108                           
  1109                           ;i2c_driver.c: 108: key_nav=0;
  1110  0195  01D6               	clrf	_key_nav
  1111  0196                     l2039:	
  1112                           ;i2c_driver.c: 110: }
  1113                           
  1114                           ;i2c_driver.c: 109: break;
  1115                           
  1116  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0198  08D4               	movf	_flag,f
  1119  0199  1903               	btfsc	3,2
  1120  019A  29FD               	goto	l2041
  1121                           
  1122                           ;i2c_driver.c: 73: {
  1123                           ;i2c_driver.c: 82: uart_lcd_update(lcd_msg,sizeof(lcd_msg));
  1124  019B  3010               	movlw	16
  1125  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1126  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1127  019E  00C7               	movwf	??_main
  1128  019F  0847               	movf	??_main,w
  1129  01A0  00A8               	movwf	uart_lcd_update@len
  1130  01A1  30A0               	movlw	_lcd_msg& (0+255)
  1131  01A2  120A  118A  256C  120A  118A  	fcall	_uart_lcd_update
  1132                           
  1133                           ;i2c_driver.c: 83: sprintf(lcd_msg1,"Date: %d%d-%d%d-%d%d<-",date[1],date[0],month[1],mo
      +                          nth[0],year[1],year[0]);
  1134  01A7  3039               	movlw	(STR_3-__stringbase)& (0+255)
  1135  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1136  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1137  01AA  00C7               	movwf	??_main
  1138  01AB  0847               	movf	??_main,w
  1139  01AC  00AE               	movwf	sprintf@f
  1140  01AD  0862               	movf	_date+1,w
  1141  01AE  00C8               	movwf	??_main+1
  1142  01AF  01C9               	clrf	??_main+2
  1143  01B0  0848               	movf	??_main+1,w
  1144  01B1  00AF               	movwf	?_sprintf+1
  1145  01B2  0849               	movf	??_main+2,w
  1146  01B3  00B0               	movwf	?_sprintf+2
  1147  01B4  0861               	movf	_date,w
  1148  01B5  00CA               	movwf	??_main+3
  1149  01B6  01CB               	clrf	??_main+4
  1150  01B7  084A               	movf	??_main+3,w
  1151  01B8  00B1               	movwf	?_sprintf+3
  1152  01B9  084B               	movf	??_main+4,w
  1153  01BA  00B2               	movwf	?_sprintf+4
  1154  01BB  0868               	movf	_month+1,w
  1155  01BC  00CC               	movwf	??_main+5
  1156  01BD  01CD               	clrf	??_main+6
  1157  01BE  084C               	movf	??_main+5,w
  1158  01BF  00B3               	movwf	?_sprintf+5
  1159  01C0  084D               	movf	??_main+6,w
  1160  01C1  00B4               	movwf	?_sprintf+6
  1161  01C2  0867               	movf	_month,w
  1162  01C3  00CE               	movwf	??_main+7
  1163  01C4  01CF               	clrf	??_main+8
  1164  01C5  084E               	movf	??_main+7,w
  1165  01C6  00B5               	movwf	?_sprintf+7
  1166  01C7  084F               	movf	??_main+8,w
  1167  01C8  00B6               	movwf	?_sprintf+8
  1168  01C9  086C               	movf	_year+1,w
  1169  01CA  00D0               	movwf	??_main+9
  1170  01CB  01D1               	clrf	??_main+10
  1171  01CC  0850               	movf	??_main+9,w
  1172  01CD  00B7               	movwf	?_sprintf+9
  1173  01CE  0851               	movf	??_main+10,w
  1174  01CF  00B8               	movwf	?_sprintf+10
  1175  01D0  086B               	movf	_year,w
  1176  01D1  00D2               	movwf	??_main+11
  1177  01D2  01D3               	clrf	??_main+12
  1178  01D3  0852               	movf	??_main+11,w
  1179  01D4  00B9               	movwf	?_sprintf+11
  1180  01D5  0853               	movf	??_main+12,w
  1181  01D6  00BA               	movwf	?_sprintf+12
  1182  01D7  30B0               	movlw	_lcd_msg1& (0+255)
  1183  01D8  120A  118A  2200  120A  118A  	fcall	_sprintf
  1184                           
  1185                           ;i2c_driver.c: 84: lcd_cmnt(0xC0);
  1186  01DD  30C0               	movlw	192
  1187  01DE  120A  118A  25F6  120A  118A  	fcall	_lcd_cmnt
  1188                           
  1189                           ;i2c_driver.c: 85: uart_lcd_update(lcd_msg1,sizeof(lcd_msg1));
  1190  01E3  3010               	movlw	16
  1191  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1192  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1193  01E6  00C7               	movwf	??_main
  1194  01E7  0847               	movf	??_main,w
  1195  01E8  00A8               	movwf	uart_lcd_update@len
  1196  01E9  30B0               	movlw	_lcd_msg1& (0+255)
  1197  01EA  120A  118A  256C  120A  118A  	fcall	_uart_lcd_update
  1198  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1199  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1200  01F1  0856               	movf	_key_nav,w
  1201                           
  1202                           ; Switch size 1, requested type "space"
  1203                           ; Number of cases is 3, Range of values is 2 to 8
  1204                           ; switch strategies available:
  1205                           ; Name         Instructions Cycles
  1206                           ; simple_byte           10     6 (average)
  1207                           ; direct_byte           32    11 (fixed)
  1208                           ; jumptable            263     9 (fixed)
  1209                           ;	Chosen strategy is simple_byte
  1210  01F2  3A02               	xorlw	2	; case 2
  1211  01F3  1903               	skipnz
  1212  01F4  297C               	goto	l2025
  1213  01F5  3A06               	xorlw	6	; case 4
  1214  01F6  1903               	skipnz
  1215  01F7  2975               	goto	l2021
  1216  01F8  3A0C               	xorlw	12	; case 8
  1217  01F9  1903               	skipnz
  1218  01FA  2985               	goto	l2029
  1219  01FB  2996               	goto	l2039
  1220  01FC  2996               	goto	l2039
  1221  01FD                     l2041:	
  1222                           
  1223                           ;i2c_driver.c: 112: }
  1224                           ;i2c_driver.c: 113: PORTA=1;
  1225  01FD  3001               	movlw	1
  1226  01FE  0085               	movwf	5	;volatile
  1227  01FF  285C               	goto	l1975
  1228  0200                     __end_of_main:	
  1229                           
  1230                           	psect	text1
  1231  056C                     __ptext1:	
  1232 ;; *************** function _uart_lcd_update *****************
  1233 ;; Defined at:
  1234 ;;		line 43 in file "lcd_driver.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  data            1    wreg     PTR unsigned char 
  1237 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1238 ;;  len             1    8[BANK0 ] unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  data            1   10[BANK0 ] PTR unsigned char 
  1241 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1242 ;;  i               2   11[BANK0 ] int 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;		None               void
  1245 ;; Registers used:
  1246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1252 ;;      Params:         0       1       0       0       0
  1253 ;;      Locals:         0       3       0       0       0
  1254 ;;      Temps:          0       1       0       0       0
  1255 ;;      Totals:         0       5       0       0       0
  1256 ;;Total ram usage:        5 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    3
  1259 ;; This function calls:
  1260 ;;		_lcd_data
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _uart_lcd_update
  1268  056C                     _uart_lcd_update:	
  1269                           
  1270                           ;incstack = 0
  1271                           ; Regs used in _uart_lcd_update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1272                           ;uart_lcd_update@data stored from wreg
  1273  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1274  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1275  056E  00AA               	movwf	uart_lcd_update@data
  1276                           
  1277                           ;lcd_driver.c: 46: for(i=0;i<len;i++)
  1278  056F  01AB               	clrf	uart_lcd_update@i
  1279  0570  01AC               	clrf	uart_lcd_update@i+1
  1280  0571                     l1891:	
  1281  0571  082C               	movf	uart_lcd_update@i+1,w
  1282  0572  3A80               	xorlw	128
  1283  0573  00A9               	movwf	??_uart_lcd_update
  1284  0574  3080               	movlw	128
  1285  0575  0229               	subwf	??_uart_lcd_update,w
  1286  0576  1D03               	skipz
  1287  0577  2D7A               	goto	u1455
  1288  0578  0828               	movf	uart_lcd_update@len,w
  1289  0579  022B               	subwf	uart_lcd_update@i,w
  1290  057A                     u1455:	
  1291  057A  1803               	btfsc	3,0
  1292  057B  0008               	return
  1293                           
  1294                           ;lcd_driver.c: 47: {
  1295                           ;lcd_driver.c: 48: lcd_data(*(data+i));
  1296  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1297  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1298  057E  082B               	movf	uart_lcd_update@i,w
  1299  057F  072A               	addwf	uart_lcd_update@data,w
  1300  0580  00A9               	movwf	??_uart_lcd_update
  1301  0581  0829               	movf	??_uart_lcd_update,w
  1302  0582  0084               	movwf	4
  1303  0583  1383               	bcf	3,7	;select IRP bank0
  1304  0584  0800               	movf	0,w
  1305  0585  120A  118A  25E4  120A  118A  	fcall	_lcd_data
  1306  058A  3001               	movlw	1
  1307  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1308  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1309  058D  07AB               	addwf	uart_lcd_update@i,f
  1310  058E  1803               	skipnc
  1311  058F  0AAC               	incf	uart_lcd_update@i+1,f
  1312  0590  3000               	movlw	0
  1313  0591  07AC               	addwf	uart_lcd_update@i+1,f
  1314  0592  2D71               	goto	l1891
  1315  0593                     __end_of_uart_lcd_update:	
  1316                           
  1317                           	psect	text2
  1318  05E4                     __ptext2:	
  1319 ;; *************** function _lcd_data *****************
  1320 ;; Defined at:
  1321 ;;		line 35 in file "lcd_driver.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  data            1    wreg     unsigned char 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  data            1    7[BANK0 ] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;		None               void
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       1       0       0       0
  1337 ;;      Temps:          0       0       0       0       0
  1338 ;;      Totals:         0       1       0       0       0
  1339 ;;Total ram usage:        1 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    2
  1342 ;; This function calls:
  1343 ;;		_delay
  1344 ;; This function is called by:
  1345 ;;		_uart_lcd_update
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _lcd_data
  1351  05E4                     _lcd_data:	
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1355                           ;lcd_data@data stored from wreg
  1356  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1357  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1358  05E6  00A7               	movwf	lcd_data@data
  1359                           
  1360                           ;lcd_driver.c: 37: PORTD=data;
  1361  05E7  0827               	movf	lcd_data@data,w
  1362  05E8  0088               	movwf	8	;volatile
  1363                           
  1364                           ;lcd_driver.c: 38: RE0=1;
  1365  05E9  1409               	bsf	9,0	;volatile
  1366                           
  1367                           ;lcd_driver.c: 39: RE1=1;delay(10);RE1=0;;
  1368  05EA  1489               	bsf	9,1	;volatile
  1369  05EB  300A               	movlw	10
  1370  05EC  00A0               	movwf	delay@x
  1371  05ED  3000               	movlw	0
  1372  05EE  00A1               	movwf	delay@x+1
  1373  05EF  120A  118A  24B5   	fcall	_delay
  1374  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1375  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1376  05F4  1089               	bcf	9,1	;volatile
  1377  05F5  0008               	return
  1378  05F6                     __end_of_lcd_data:	
  1379                           
  1380                           	psect	text3
  1381  0200                     __ptext3:	
  1382 ;; *************** function _sprintf *****************
  1383 ;; Defined at:
  1384 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  sp              1    wreg     PTR unsigned char 
  1387 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1388 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1389 ;;		 -> STR_3(23), STR_2(23), STR_1(23), 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  sp              1   37[BANK0 ] PTR unsigned char 
  1392 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1393 ;;  _val            4   33[BANK0 ] struct .
  1394 ;;  c               1   38[BANK0 ] char 
  1395 ;;  prec            1   32[BANK0 ] char 
  1396 ;;  flag            1   31[BANK0 ] unsigned char 
  1397 ;;  ap              1   30[BANK0 ] PTR void [1]
  1398 ;;		 -> ?_sprintf(2), 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  2   14[BANK0 ] int 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0      13       0       0       0
  1409 ;;      Locals:         0       9       0       0       0
  1410 ;;      Temps:          0       3       0       0       0
  1411 ;;      Totals:         0      25       0       0       0
  1412 ;;Total ram usage:       25 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:    2
  1415 ;; This function calls:
  1416 ;;		___lwdiv
  1417 ;;		___lwmod
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _sprintf
  1425  0200                     _sprintf:	
  1426                           
  1427                           ;incstack = 0
  1428                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1429                           ;sprintf@sp stored from wreg
  1430  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0202  00C5               	movwf	sprintf@sp
  1433                           
  1434                           ;doprnt.c: 494: va_list ap;
  1435                           ;doprnt.c: 499: signed char c;
  1436                           ;doprnt.c: 506: signed char prec;
  1437                           ;doprnt.c: 508: unsigned char flag;
  1438                           ;doprnt.c: 527: union {
  1439                           ;doprnt.c: 528: unsigned int _val;
  1440                           ;doprnt.c: 529: struct {
  1441                           ;doprnt.c: 530: const char * _cp;
  1442                           ;doprnt.c: 531: unsigned _len;
  1443                           ;doprnt.c: 532: } _str;
  1444                           ;doprnt.c: 533: } _val;
  1445                           ;doprnt.c: 542: *ap = __va_start();
  1446  0203  302F               	movlw	(?_sprintf+1)& (0+255)
  1447  0204  00BB               	movwf	??_sprintf
  1448  0205  083B               	movf	??_sprintf,w
  1449  0206  00BE               	movwf	sprintf@ap
  1450  0207                     l1879:	
  1451                           ;doprnt.c: 545: while(c = *f++) {
  1452                           
  1453  0207  3001               	movlw	1
  1454  0208  07AE               	addwf	sprintf@f,f
  1455  0209  30FF               	movlw	-1
  1456  020A  072E               	addwf	sprintf@f,w
  1457  020B  0084               	movwf	4
  1458  020C  120A  118A  2300  120A  118A  	fcall	stringdir
  1459  0211  00BB               	movwf	??_sprintf
  1460  0212  083B               	movf	??_sprintf,w
  1461  0213  00C6               	movwf	sprintf@c
  1462  0214  08C6               	movf	sprintf@c,f
  1463  0215  1903               	btfsc	3,2
  1464  0216  2AD6               	goto	l1881
  1465                           
  1466                           ;doprnt.c: 547: if(c != '%')
  1467  0217  0846               	movf	sprintf@c,w
  1468  0218  3A25               	xorlw	37
  1469  0219  1903               	skipnz
  1470  021A  2A27               	goto	l1835
  1471                           
  1472                           ;doprnt.c: 549: {
  1473                           ;doprnt.c: 550: ((*sp++ = (c)));
  1474  021B  0846               	movf	sprintf@c,w
  1475  021C  00BB               	movwf	??_sprintf
  1476  021D  0845               	movf	sprintf@sp,w
  1477  021E  0084               	movwf	4
  1478  021F  083B               	movf	??_sprintf,w
  1479  0220  1383               	bcf	3,7	;select IRP bank0
  1480  0221  0080               	movwf	0
  1481  0222  3001               	movlw	1
  1482  0223  00BB               	movwf	??_sprintf
  1483  0224  083B               	movf	??_sprintf,w
  1484  0225  07C5               	addwf	sprintf@sp,f
  1485                           
  1486                           ;doprnt.c: 551: continue;
  1487  0226  2A07               	goto	l1879
  1488  0227                     l1835:	
  1489                           
  1490                           ;doprnt.c: 552: }
  1491                           ;doprnt.c: 557: flag = 0;
  1492  0227  01BF               	clrf	sprintf@flag
  1493                           
  1494                           ;doprnt.c: 831: }
  1495                           
  1496                           ;doprnt.c: 822: continue;
  1497                           
  1498                           ;doprnt.c: 811: default:
  1499                           
  1500                           ;doprnt.c: 707: case 'i':
  1501                           ;doprnt.c: 708: break;
  1502                           
  1503                           ;doprnt.c: 706: case 'd':
  1504                           
  1505                           ;doprnt.c: 647: goto alldone;
  1506                           
  1507                           ;doprnt.c: 646: case 0:
  1508                           
  1509                           ;doprnt.c: 644: switch(c = *f++) {
  1510  0228  3001               	movlw	1
  1511  0229  07AE               	addwf	sprintf@f,f
  1512  022A  30FF               	movlw	-1
  1513  022B  072E               	addwf	sprintf@f,w
  1514  022C  0084               	movwf	4
  1515  022D  120A  118A  2300  120A  118A  	fcall	stringdir
  1516  0232  00C6               	movwf	sprintf@c
  1517                           
  1518                           ; Switch size 1, requested type "space"
  1519                           ; Number of cases is 3, Range of values is 0 to 105
  1520                           ; switch strategies available:
  1521                           ; Name         Instructions Cycles
  1522                           ; simple_byte           10     6 (average)
  1523                           ; jumptable            260     6 (fixed)
  1524                           ;	Chosen strategy is simple_byte
  1525  0233  3A00               	xorlw	0	; case 0
  1526  0234  1903               	skipnz
  1527  0235  2AD6               	goto	l1881
  1528  0236  3A64               	xorlw	100	; case 100
  1529  0237  1903               	skipnz
  1530  0238  2A3D               	goto	l1841
  1531  0239  3A0D               	xorlw	13	; case 105
  1532  023A  1903               	skipnz
  1533  023B  2A3D               	goto	l1841
  1534  023C  2A07               	goto	l1879
  1535  023D                     l1841:	
  1536                           
  1537                           ;doprnt.c: 1262: {
  1538                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1539  023D  083E               	movf	sprintf@ap,w
  1540  023E  0084               	movwf	4
  1541  023F  1383               	bcf	3,7	;select IRP bank0
  1542  0240  0800               	movf	0,w
  1543  0241  00C1               	movwf	sprintf@_val
  1544  0242  0A84               	incf	4,f
  1545  0243  0800               	movf	0,w
  1546  0244  00C2               	movwf	sprintf@_val+1
  1547  0245  3002               	movlw	2
  1548  0246  00BB               	movwf	??_sprintf
  1549  0247  083B               	movf	??_sprintf,w
  1550  0248  07BE               	addwf	sprintf@ap,f
  1551                           
  1552                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  1553  0249  1FC2               	btfss	sprintf@_val+1,7
  1554  024A  2A54               	goto	l1851
  1555                           
  1556                           ;doprnt.c: 1271: flag |= 0x03;
  1557  024B  3003               	movlw	3
  1558  024C  00BB               	movwf	??_sprintf
  1559  024D  083B               	movf	??_sprintf,w
  1560  024E  04BF               	iorwf	sprintf@flag,f
  1561                           
  1562                           ;doprnt.c: 1272: _val._val = -_val._val;
  1563  024F  09C1               	comf	sprintf@_val,f
  1564  0250  09C2               	comf	sprintf@_val+1,f
  1565  0251  0AC1               	incf	sprintf@_val,f
  1566  0252  1903               	skipnz
  1567  0253  0AC2               	incf	sprintf@_val+1,f
  1568  0254                     l1851:	
  1569                           
  1570                           ;doprnt.c: 1273: }
  1571                           ;doprnt.c: 1275: }
  1572                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1573  0254  01C6               	clrf	sprintf@c
  1574  0255  0AC6               	incf	sprintf@c,f
  1575  0256  0846               	movf	sprintf@c,w
  1576  0257  3A05               	xorlw	5
  1577  0258  1903               	btfsc	3,2
  1578  0259  2A7B               	goto	l1863
  1579  025A                     l1855:	
  1580                           
  1581                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1582  025A  0846               	movf	sprintf@c,w
  1583  025B  00BB               	movwf	??_sprintf
  1584  025C  073B               	addwf	??_sprintf,w
  1585  025D  3E01               	addlw	low (_dpowers-__stringbase)
  1586  025E  0084               	movwf	4
  1587  025F  120A  118A  2300  120A  118A  	fcall	stringdir
  1588  0264  00BC               	movwf	??_sprintf+1
  1589  0265  120A  118A  2300  120A  118A  	fcall	stringdir
  1590  026A  00BD               	movwf	??_sprintf+2
  1591  026B  083D               	movf	??_sprintf+2,w
  1592  026C  0242               	subwf	sprintf@_val+1,w
  1593  026D  1D03               	skipz
  1594  026E  2A71               	goto	u1405
  1595  026F  083C               	movf	??_sprintf+1,w
  1596  0270  0241               	subwf	sprintf@_val,w
  1597  0271                     u1405:	
  1598  0271  1C03               	btfss	3,0
  1599  0272  2A7B               	goto	l1863
  1600                           
  1601                           ;doprnt.c: 1316: break;
  1602  0273  3001               	movlw	1
  1603  0274  00BB               	movwf	??_sprintf
  1604  0275  083B               	movf	??_sprintf,w
  1605  0276  07C6               	addwf	sprintf@c,f
  1606  0277  0846               	movf	sprintf@c,w
  1607  0278  3A05               	xorlw	5
  1608  0279  1D03               	skipz
  1609  027A  2A5A               	goto	l1855
  1610  027B                     l1863:	
  1611                           
  1612                           ;doprnt.c: 1431: {
  1613                           ;doprnt.c: 1447: if(flag & 0x03)
  1614  027B  083F               	movf	sprintf@flag,w
  1615  027C  3903               	andlw	3
  1616  027D  1903               	btfsc	3,2
  1617  027E  2A8A               	goto	l1869
  1618                           
  1619                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  1620  027F  302D               	movlw	45
  1621  0280  00BB               	movwf	??_sprintf
  1622  0281  0845               	movf	sprintf@sp,w
  1623  0282  0084               	movwf	4
  1624  0283  083B               	movf	??_sprintf,w
  1625  0284  1383               	bcf	3,7	;select IRP bank0
  1626  0285  0080               	movwf	0
  1627  0286  3001               	movlw	1
  1628  0287  00BB               	movwf	??_sprintf
  1629  0288  083B               	movf	??_sprintf,w
  1630  0289  07C5               	addwf	sprintf@sp,f
  1631  028A                     l1869:	
  1632                           
  1633                           ;doprnt.c: 1478: }
  1634                           ;doprnt.c: 1481: prec = c;
  1635  028A  0846               	movf	sprintf@c,w
  1636  028B  00BB               	movwf	??_sprintf
  1637  028C  083B               	movf	??_sprintf,w
  1638  028D  00C0               	movwf	sprintf@prec
  1639  028E                     l1877:	
  1640                           ;doprnt.c: 1483: while(prec--) {
  1641                           
  1642  028E  30FF               	movlw	-1
  1643  028F  00BB               	movwf	??_sprintf
  1644  0290  083B               	movf	??_sprintf,w
  1645  0291  07C0               	addwf	sprintf@prec,f
  1646  0292  0840               	movf	sprintf@prec,w
  1647  0293  3AFF               	xorlw	-1
  1648  0294  1903               	btfsc	3,2
  1649  0295  2A07               	goto	l1879
  1650                           
  1651                           ;doprnt.c: 1487: {
  1652                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  1653  0296  300A               	movlw	10
  1654  0297  00A8               	movwf	___lwmod@divisor
  1655  0298  3000               	movlw	0
  1656  0299  00A9               	movwf	___lwmod@divisor+1
  1657  029A  0840               	movf	sprintf@prec,w
  1658  029B  00BB               	movwf	??_sprintf
  1659  029C  073B               	addwf	??_sprintf,w
  1660  029D  3E01               	addlw	low (_dpowers-__stringbase)
  1661  029E  0084               	movwf	4
  1662  029F  120A  118A  2300  120A  118A  	fcall	stringdir
  1663  02A4  00A0               	movwf	___lwdiv@divisor
  1664  02A5  120A  118A  2300  120A  118A  	fcall	stringdir
  1665  02AA  00A1               	movwf	___lwdiv@divisor+1
  1666  02AB  0842               	movf	sprintf@_val+1,w
  1667  02AC  01A3               	clrf	___lwdiv@dividend+1
  1668  02AD  07A3               	addwf	___lwdiv@dividend+1,f
  1669  02AE  0841               	movf	sprintf@_val,w
  1670  02AF  01A2               	clrf	___lwdiv@dividend
  1671  02B0  07A2               	addwf	___lwdiv@dividend,f
  1672  02B1  120A  118A  243F  120A  118A  	fcall	___lwdiv
  1673  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1674  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1675  02B8  0821               	movf	?___lwdiv+1,w
  1676  02B9  01AB               	clrf	___lwmod@dividend+1
  1677  02BA  07AB               	addwf	___lwmod@dividend+1,f
  1678  02BB  0820               	movf	?___lwdiv,w
  1679  02BC  01AA               	clrf	___lwmod@dividend
  1680  02BD  07AA               	addwf	___lwmod@dividend,f
  1681  02BE  120A  118A  247F  120A  118A  	fcall	___lwmod
  1682  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1683  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1684  02C5  0828               	movf	?___lwmod,w
  1685  02C6  3E30               	addlw	48
  1686  02C7  00BC               	movwf	??_sprintf+1
  1687  02C8  083C               	movf	??_sprintf+1,w
  1688  02C9  00C6               	movwf	sprintf@c
  1689                           
  1690                           ;doprnt.c: 1532: }
  1691                           ;doprnt.c: 1533: ((*sp++ = (c)));
  1692  02CA  0846               	movf	sprintf@c,w
  1693  02CB  00BB               	movwf	??_sprintf
  1694  02CC  0845               	movf	sprintf@sp,w
  1695  02CD  0084               	movwf	4
  1696  02CE  083B               	movf	??_sprintf,w
  1697  02CF  1383               	bcf	3,7	;select IRP bank0
  1698  02D0  0080               	movwf	0
  1699  02D1  3001               	movlw	1
  1700  02D2  00BB               	movwf	??_sprintf
  1701  02D3  083B               	movf	??_sprintf,w
  1702  02D4  07C5               	addwf	sprintf@sp,f
  1703  02D5  2A8E               	goto	l1877
  1704  02D6                     l1881:	
  1705                           ;doprnt.c: 1534: }
  1706                           ;doprnt.c: 1542: }
  1707                           ;doprnt.c: 1544: alldone:
  1708                           
  1709                           
  1710                           ;doprnt.c: 1547: *sp = 0;
  1711  02D6  0845               	movf	sprintf@sp,w
  1712  02D7  0084               	movwf	4
  1713  02D8  1383               	bcf	3,7	;select IRP bank0
  1714  02D9  0180               	clrf	0
  1715  02DA  0008               	return
  1716  02DB                     __end_of_sprintf:	
  1717                           ;doprnt.c: 1549: return 0;
  1718                           ;	Return value of _sprintf is never used
  1719                           
  1720                           
  1721                           	psect	text4
  1722  047F                     __ptext4:	
  1723 ;; *************** function ___lwmod *****************
  1724 ;; Defined at:
  1725 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  divisor         2    8[BANK0 ] unsigned int 
  1728 ;;  dividend        2   10[BANK0 ] unsigned int 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  counter         1   13[BANK0 ] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  2    8[BANK0 ] unsigned int 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1740 ;;      Params:         0       4       0       0       0
  1741 ;;      Locals:         0       1       0       0       0
  1742 ;;      Temps:          0       1       0       0       0
  1743 ;;      Totals:         0       6       0       0       0
  1744 ;;Total ram usage:        6 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    1
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_sprintf
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           
  1755                           ;psect for function ___lwmod
  1756  047F                     ___lwmod:	
  1757                           
  1758                           ;incstack = 0
  1759                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1760  047F  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0480  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0481  0829               	movf	___lwmod@divisor+1,w
  1763  0482  0428               	iorwf	___lwmod@divisor,w
  1764  0483  1903               	skipnz
  1765  0484  2CAE               	goto	l1729
  1766  0485  01AD               	clrf	___lwmod@counter
  1767  0486  0AAD               	incf	___lwmod@counter,f
  1768  0487                     l1719:	
  1769  0487  1BA9               	btfsc	___lwmod@divisor+1,7
  1770  0488  2C95               	goto	l1721
  1771  0489  3001               	movlw	1
  1772  048A                     u1225:	
  1773  048A  1003               	clrc
  1774  048B  0DA8               	rlf	___lwmod@divisor,f
  1775  048C  0DA9               	rlf	___lwmod@divisor+1,f
  1776  048D  3EFF               	addlw	-1
  1777  048E  1D03               	skipz
  1778  048F  2C8A               	goto	u1225
  1779  0490  3001               	movlw	1
  1780  0491  00AC               	movwf	??___lwmod
  1781  0492  082C               	movf	??___lwmod,w
  1782  0493  07AD               	addwf	___lwmod@counter,f
  1783  0494  2C87               	goto	l1719
  1784  0495                     l1721:	
  1785  0495  0829               	movf	___lwmod@divisor+1,w
  1786  0496  022B               	subwf	___lwmod@dividend+1,w
  1787  0497  1D03               	skipz
  1788  0498  2C9B               	goto	u1245
  1789  0499  0828               	movf	___lwmod@divisor,w
  1790  049A  022A               	subwf	___lwmod@dividend,w
  1791  049B                     u1245:	
  1792  049B  1C03               	skipc
  1793  049C  2CA3               	goto	l1725
  1794  049D  0828               	movf	___lwmod@divisor,w
  1795  049E  02AA               	subwf	___lwmod@dividend,f
  1796  049F  0829               	movf	___lwmod@divisor+1,w
  1797  04A0  1C03               	skipc
  1798  04A1  03AB               	decf	___lwmod@dividend+1,f
  1799  04A2  02AB               	subwf	___lwmod@dividend+1,f
  1800  04A3                     l1725:	
  1801  04A3  3001               	movlw	1
  1802  04A4                     u1255:	
  1803  04A4  1003               	clrc
  1804  04A5  0CA9               	rrf	___lwmod@divisor+1,f
  1805  04A6  0CA8               	rrf	___lwmod@divisor,f
  1806  04A7  3EFF               	addlw	-1
  1807  04A8  1D03               	skipz
  1808  04A9  2CA4               	goto	u1255
  1809  04AA  3001               	movlw	1
  1810  04AB  02AD               	subwf	___lwmod@counter,f
  1811  04AC  1D03               	btfss	3,2
  1812  04AD  2C95               	goto	l1721
  1813  04AE                     l1729:	
  1814  04AE  082B               	movf	___lwmod@dividend+1,w
  1815  04AF  01A9               	clrf	?___lwmod+1
  1816  04B0  07A9               	addwf	?___lwmod+1,f
  1817  04B1  082A               	movf	___lwmod@dividend,w
  1818  04B2  01A8               	clrf	?___lwmod
  1819  04B3  07A8               	addwf	?___lwmod,f
  1820  04B4  0008               	return
  1821  04B5                     __end_of___lwmod:	
  1822                           
  1823                           	psect	text5
  1824  043F                     __ptext5:	
  1825 ;; *************** function ___lwdiv *****************
  1826 ;; Defined at:
  1827 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  divisor         2    0[BANK0 ] unsigned int 
  1830 ;;  dividend        2    2[BANK0 ] unsigned int 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  quotient        2    6[BANK0 ] unsigned int 
  1833 ;;  counter         1    5[BANK0 ] unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  2    0[BANK0 ] unsigned int 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1843 ;;      Params:         0       4       0       0       0
  1844 ;;      Locals:         0       3       0       0       0
  1845 ;;      Temps:          0       1       0       0       0
  1846 ;;      Totals:         0       8       0       0       0
  1847 ;;Total ram usage:        8 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    1
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_sprintf
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           
  1858                           ;psect for function ___lwdiv
  1859  043F                     ___lwdiv:	
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1863  043F  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0440  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0441  01A6               	clrf	___lwdiv@quotient
  1866  0442  01A7               	clrf	___lwdiv@quotient+1
  1867  0443  0821               	movf	___lwdiv@divisor+1,w
  1868  0444  0420               	iorwf	___lwdiv@divisor,w
  1869  0445  1903               	skipnz
  1870  0446  2C78               	goto	l1707
  1871  0447  01A5               	clrf	___lwdiv@counter
  1872  0448  0AA5               	incf	___lwdiv@counter,f
  1873  0449                     l1695:	
  1874  0449  1BA1               	btfsc	___lwdiv@divisor+1,7
  1875  044A  2C57               	goto	l1697
  1876  044B  3001               	movlw	1
  1877  044C                     u1155:	
  1878  044C  1003               	clrc
  1879  044D  0DA0               	rlf	___lwdiv@divisor,f
  1880  044E  0DA1               	rlf	___lwdiv@divisor+1,f
  1881  044F  3EFF               	addlw	-1
  1882  0450  1D03               	skipz
  1883  0451  2C4C               	goto	u1155
  1884  0452  3001               	movlw	1
  1885  0453  00A4               	movwf	??___lwdiv
  1886  0454  0824               	movf	??___lwdiv,w
  1887  0455  07A5               	addwf	___lwdiv@counter,f
  1888  0456  2C49               	goto	l1695
  1889  0457                     l1697:	
  1890  0457  3001               	movlw	1
  1891  0458                     u1175:	
  1892  0458  1003               	clrc
  1893  0459  0DA6               	rlf	___lwdiv@quotient,f
  1894  045A  0DA7               	rlf	___lwdiv@quotient+1,f
  1895  045B  3EFF               	addlw	-1
  1896  045C  1D03               	skipz
  1897  045D  2C58               	goto	u1175
  1898  045E  0821               	movf	___lwdiv@divisor+1,w
  1899  045F  0223               	subwf	___lwdiv@dividend+1,w
  1900  0460  1D03               	skipz
  1901  0461  2C64               	goto	u1185
  1902  0462  0820               	movf	___lwdiv@divisor,w
  1903  0463  0222               	subwf	___lwdiv@dividend,w
  1904  0464                     u1185:	
  1905  0464  1C03               	skipc
  1906  0465  2C6D               	goto	l1703
  1907  0466  0820               	movf	___lwdiv@divisor,w
  1908  0467  02A2               	subwf	___lwdiv@dividend,f
  1909  0468  0821               	movf	___lwdiv@divisor+1,w
  1910  0469  1C03               	skipc
  1911  046A  03A3               	decf	___lwdiv@dividend+1,f
  1912  046B  02A3               	subwf	___lwdiv@dividend+1,f
  1913  046C  1426               	bsf	___lwdiv@quotient,0
  1914  046D                     l1703:	
  1915  046D  3001               	movlw	1
  1916  046E                     u1195:	
  1917  046E  1003               	clrc
  1918  046F  0CA1               	rrf	___lwdiv@divisor+1,f
  1919  0470  0CA0               	rrf	___lwdiv@divisor,f
  1920  0471  3EFF               	addlw	-1
  1921  0472  1D03               	skipz
  1922  0473  2C6E               	goto	u1195
  1923  0474  3001               	movlw	1
  1924  0475  02A5               	subwf	___lwdiv@counter,f
  1925  0476  1D03               	btfss	3,2
  1926  0477  2C57               	goto	l1697
  1927  0478                     l1707:	
  1928  0478  0827               	movf	___lwdiv@quotient+1,w
  1929  0479  01A1               	clrf	?___lwdiv+1
  1930  047A  07A1               	addwf	?___lwdiv+1,f
  1931  047B  0826               	movf	___lwdiv@quotient,w
  1932  047C  01A0               	clrf	?___lwdiv
  1933  047D  07A0               	addwf	?___lwdiv,f
  1934  047E  0008               	return
  1935  047F                     __end_of___lwdiv:	
  1936                           
  1937                           	psect	text6
  1938  03AA                     __ptext6:	
  1939 ;; *************** function _master_tx_write *****************
  1940 ;; Defined at:
  1941 ;;		line 262 in file "i2c_driver.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  i2c_pkt         1    wreg     PTR struct packet
  1944 ;;		 -> i2c_pkt(3), 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  i2c_pkt         1    4[BANK0 ] PTR struct packet
  1947 ;;		 -> i2c_pkt(3), 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      unsigned char 
  1950 ;; Registers used:
  1951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1957 ;;      Params:         0       0       0       0       0
  1958 ;;      Locals:         0       1       0       0       0
  1959 ;;      Temps:          0       1       0       0       0
  1960 ;;      Totals:         0       2       0       0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    2
  1964 ;; This function calls:
  1965 ;;		_char2int
  1966 ;; This function is called by:
  1967 ;;		_main
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           
  1972                           ;psect for function _master_tx_write
  1973  03AA                     _master_tx_write:	
  1974                           
  1975                           ;incstack = 0
  1976                           ; Regs used in _master_tx_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1977                           ;master_tx_write@i2c_pkt stored from wreg
  1978  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1979  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1980  03AC  00A4               	movwf	master_tx_write@i2c_pkt
  1981                           
  1982                           ;i2c_driver.c: 264: RBIE = 0;
  1983  03AD  118B               	bcf	11,3	;volatile
  1984                           
  1985                           ;i2c_driver.c: 265: SEN=1;
  1986  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1987  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1988  03B0  1411               	bsf	17,0	;volatile
  1989  03B1                     l1919:	
  1990                           ;i2c_driver.c: 268: {
  1991                           
  1992                           ;i2c_driver.c: 267: while(!i2c_pkt->ack)
  1993                           
  1994  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1995  03B2  0824               	movf	master_tx_write@i2c_pkt,w
  1996  03B3  3E02               	addlw	2
  1997  03B4  0084               	movwf	4
  1998  03B5  1383               	bcf	3,7	;select IRP bank0
  1999  03B6  0880               	movf	0,f
  2000  03B7  1903               	skipnz
  2001  03B8  2BB1               	goto	l1919
  2002                           
  2003                           ;i2c_driver.c: 271: }
  2004                           ;i2c_driver.c: 272: i2c_pkt->ack=0;
  2005  03B9  0824               	movf	master_tx_write@i2c_pkt,w
  2006  03BA  3E02               	addlw	2
  2007  03BB  0084               	movwf	4
  2008  03BC  0180               	clrf	0
  2009                           
  2010                           ;i2c_driver.c: 274: SSPBUF=(i2c_pkt->address<<1|0);
  2011  03BD  0824               	movf	master_tx_write@i2c_pkt,w
  2012  03BE  0084               	movwf	4
  2013  03BF  0800               	movf	0,w
  2014  03C0  00A3               	movwf	??_master_tx_write
  2015  03C1  0723               	addwf	??_master_tx_write,w
  2016  03C2  0093               	movwf	19	;volatile
  2017  03C3                     l1925:	
  2018                           ;i2c_driver.c: 275: while(!i2c_pkt->ack);
  2019                           
  2020  03C3  0824               	movf	master_tx_write@i2c_pkt,w
  2021  03C4  3E02               	addlw	2
  2022  03C5  0084               	movwf	4
  2023  03C6  0880               	movf	0,f
  2024  03C7  1903               	skipnz
  2025  03C8  2BC3               	goto	l1925
  2026                           
  2027                           ;i2c_driver.c: 276: i2c_pkt->ack=0;
  2028  03C9  0824               	movf	master_tx_write@i2c_pkt,w
  2029  03CA  3E02               	addlw	2
  2030  03CB  0084               	movwf	4
  2031  03CC  0180               	clrf	0
  2032                           
  2033                           ;i2c_driver.c: 277: SSPBUF=YEAR;
  2034  03CD  3006               	movlw	6
  2035  03CE  0093               	movwf	19	;volatile
  2036  03CF                     l1931:	
  2037                           ;i2c_driver.c: 280: while(!i2c_pkt->ack);
  2038                           
  2039  03CF  0824               	movf	master_tx_write@i2c_pkt,w
  2040  03D0  3E02               	addlw	2
  2041  03D1  0084               	movwf	4
  2042  03D2  0880               	movf	0,f
  2043  03D3  1903               	skipnz
  2044  03D4  2BCF               	goto	l1931
  2045                           
  2046                           ;i2c_driver.c: 281: i2c_pkt->ack=0;
  2047  03D5  0824               	movf	master_tx_write@i2c_pkt,w
  2048  03D6  3E02               	addlw	2
  2049  03D7  0084               	movwf	4
  2050  03D8  0180               	clrf	0
  2051                           
  2052                           ;i2c_driver.c: 282: SSPBUF=char2int(year);
  2053  03D9  306B               	movlw	_year& (0+255)
  2054  03DA  120A  118A  25CE  120A  118A  	fcall	_char2int
  2055  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2056  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2057  03E1  0093               	movwf	19	;volatile
  2058  03E2                     l1937:	
  2059                           ;i2c_driver.c: 284: while(!i2c_pkt->ack);
  2060                           
  2061  03E2  0824               	movf	master_tx_write@i2c_pkt,w
  2062  03E3  3E02               	addlw	2
  2063  03E4  0084               	movwf	4
  2064  03E5  1383               	bcf	3,7	;select IRP bank0
  2065  03E6  0880               	movf	0,f
  2066  03E7  1903               	skipnz
  2067  03E8  2BE2               	goto	l1937
  2068                           
  2069                           ;i2c_driver.c: 285: i2c_pkt->ack=0;
  2070  03E9  0824               	movf	master_tx_write@i2c_pkt,w
  2071  03EA  3E02               	addlw	2
  2072  03EB  0084               	movwf	4
  2073  03EC  0180               	clrf	0
  2074                           
  2075                           ;i2c_driver.c: 287: PEN=1;
  2076  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2077  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2078  03EF  1511               	bsf	17,2	;volatile
  2079  03F0                     l1943:	
  2080                           ;i2c_driver.c: 288: while(!i2c_pkt->ack);
  2081                           
  2082  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2083  03F1  0824               	movf	master_tx_write@i2c_pkt,w
  2084  03F2  3E02               	addlw	2
  2085  03F3  0084               	movwf	4
  2086  03F4  0880               	movf	0,f
  2087  03F5  1903               	skipnz
  2088  03F6  2BF0               	goto	l1943
  2089                           
  2090                           ;i2c_driver.c: 289: i2c_pkt->ack=0;
  2091  03F7  0824               	movf	master_tx_write@i2c_pkt,w
  2092  03F8  3E02               	addlw	2
  2093  03F9  0084               	movwf	4
  2094  03FA  0180               	clrf	0
  2095                           
  2096                           ;i2c_driver.c: 296: RBIE = 1;
  2097  03FB  158B               	bsf	11,3	;volatile
  2098                           
  2099                           ;i2c_driver.c: 297: return 0;
  2100  03FC  3000               	movlw	0
  2101  03FD  0008               	return
  2102  03FE                     __end_of_master_tx_write:	
  2103                           
  2104                           	psect	text7
  2105  05CE                     __ptext7:	
  2106 ;; *************** function _char2int *****************
  2107 ;; Defined at:
  2108 ;;		line 344 in file "i2c_driver.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  in              1    wreg     PTR unsigned char 
  2111 ;;		 -> year(2), 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  in              1    2[BANK0 ] PTR unsigned char 
  2114 ;;		 -> year(2), 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      unsigned char 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       0       0       0       0
  2125 ;;      Locals:         0       1       0       0       0
  2126 ;;      Temps:          0       2       0       0       0
  2127 ;;      Totals:         0       3       0       0       0
  2128 ;;Total ram usage:        3 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    1
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_master_tx_write
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _char2int
  2140  05CE                     _char2int:	
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in _char2int: [wreg-fsr0h+status,2+status,0]
  2144                           ;char2int@in stored from wreg
  2145  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2146  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2147  05D0  00A2               	movwf	char2int@in
  2148                           
  2149                           ;i2c_driver.c: 346: return (*(in) | *(in+1)<<4) ;
  2150  05D1  0822               	movf	char2int@in,w
  2151  05D2  0084               	movwf	4
  2152  05D3  1383               	bcf	3,7	;select IRP bank0
  2153  05D4  0800               	movf	0,w
  2154  05D5  00A0               	movwf	??_char2int
  2155  05D6  0A22               	incf	char2int@in,w
  2156  05D7  0084               	movwf	4
  2157  05D8  0800               	movf	0,w
  2158  05D9  00A1               	movwf	??_char2int+1
  2159  05DA  3003               	movlw	3
  2160  05DB                     u1135:	
  2161  05DB  1003               	clrc
  2162  05DC  0DA1               	rlf	??_char2int+1,f
  2163  05DD  3EFF               	addlw	-1
  2164  05DE  1D03               	skipz
  2165  05DF  2DDB               	goto	u1135
  2166  05E0  1003               	clrc
  2167  05E1  0D21               	rlf	??_char2int+1,w
  2168  05E2  0420               	iorwf	??_char2int,w
  2169  05E3  0008               	return
  2170  05E4                     __end_of_char2int:	
  2171                           
  2172                           	psect	text8
  2173  03FE                     __ptext8:	
  2174 ;; *************** function _master_tx *****************
  2175 ;; Defined at:
  2176 ;;		line 158 in file "i2c_driver.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  i2c_pkt         1    wreg     PTR struct packet
  2179 ;;		 -> i2c_pkt(3), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  i2c_pkt         1    1[BANK0 ] PTR struct packet
  2182 ;;		 -> i2c_pkt(3), 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      unsigned char 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       0       0       0       0
  2193 ;;      Locals:         0       1       0       0       0
  2194 ;;      Temps:          0       1       0       0       0
  2195 ;;      Totals:         0       2       0       0       0
  2196 ;;Total ram usage:        2 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _master_tx
  2208  03FE                     _master_tx:	
  2209                           
  2210                           ;incstack = 0
  2211                           ; Regs used in _master_tx: [wreg-fsr0h+status,2+status,0]
  2212                           ;master_tx@i2c_pkt stored from wreg
  2213  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2214  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0400  00A1               	movwf	master_tx@i2c_pkt
  2216                           
  2217                           ;i2c_driver.c: 160: RBIE = 0;
  2218  0401  118B               	bcf	11,3	;volatile
  2219                           
  2220                           ;i2c_driver.c: 161: SEN=1;
  2221  0402  1683               	bsf	3,5	;RP0=1, select bank1
  2222  0403  1303               	bcf	3,6	;RP1=0, select bank1
  2223  0404  1411               	bsf	17,0	;volatile
  2224  0405                     l1759:	
  2225                           ;i2c_driver.c: 164: {
  2226                           
  2227                           ;i2c_driver.c: 163: while(!i2c_pkt->ack)
  2228                           
  2229  0405  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0406  0821               	movf	master_tx@i2c_pkt,w
  2231  0407  3E02               	addlw	2
  2232  0408  0084               	movwf	4
  2233  0409  1383               	bcf	3,7	;select IRP bank0
  2234  040A  0880               	movf	0,f
  2235  040B  1903               	skipnz
  2236  040C  2C05               	goto	l1759
  2237                           
  2238                           ;i2c_driver.c: 167: }
  2239                           ;i2c_driver.c: 168: i2c_pkt->ack=0;
  2240  040D  0821               	movf	master_tx@i2c_pkt,w
  2241  040E  3E02               	addlw	2
  2242  040F  0084               	movwf	4
  2243  0410  0180               	clrf	0
  2244                           
  2245                           ;i2c_driver.c: 170: SSPBUF=(i2c_pkt->address<<1|0);
  2246  0411  0821               	movf	master_tx@i2c_pkt,w
  2247  0412  0084               	movwf	4
  2248  0413  0800               	movf	0,w
  2249  0414  00A0               	movwf	??_master_tx
  2250  0415  0720               	addwf	??_master_tx,w
  2251  0416  0093               	movwf	19	;volatile
  2252  0417                     l1765:	
  2253                           ;i2c_driver.c: 171: while(!i2c_pkt->ack);
  2254                           
  2255  0417  0821               	movf	master_tx@i2c_pkt,w
  2256  0418  3E02               	addlw	2
  2257  0419  0084               	movwf	4
  2258  041A  0880               	movf	0,f
  2259  041B  1903               	skipnz
  2260  041C  2C17               	goto	l1765
  2261                           
  2262                           ;i2c_driver.c: 172: i2c_pkt->ack=0;
  2263  041D  0821               	movf	master_tx@i2c_pkt,w
  2264  041E  3E02               	addlw	2
  2265  041F  0084               	movwf	4
  2266  0420  0180               	clrf	0
  2267                           
  2268                           ;i2c_driver.c: 173: SSPBUF=i2c_pkt->data;
  2269  0421  0A21               	incf	master_tx@i2c_pkt,w
  2270  0422  0084               	movwf	4
  2271  0423  0800               	movf	0,w
  2272  0424  0093               	movwf	19	;volatile
  2273  0425                     l1771:	
  2274                           ;i2c_driver.c: 175: while(!i2c_pkt->ack);
  2275                           
  2276  0425  0821               	movf	master_tx@i2c_pkt,w
  2277  0426  3E02               	addlw	2
  2278  0427  0084               	movwf	4
  2279  0428  0880               	movf	0,f
  2280  0429  1903               	skipnz
  2281  042A  2C25               	goto	l1771
  2282                           
  2283                           ;i2c_driver.c: 176: i2c_pkt->ack=0;
  2284  042B  0821               	movf	master_tx@i2c_pkt,w
  2285  042C  3E02               	addlw	2
  2286  042D  0084               	movwf	4
  2287  042E  0180               	clrf	0
  2288                           
  2289                           ;i2c_driver.c: 179: PEN=1;
  2290  042F  1683               	bsf	3,5	;RP0=1, select bank1
  2291  0430  1303               	bcf	3,6	;RP1=0, select bank1
  2292  0431  1511               	bsf	17,2	;volatile
  2293  0432                     l1777:	
  2294                           ;i2c_driver.c: 180: while(!i2c_pkt->ack);
  2295                           
  2296  0432  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0433  0821               	movf	master_tx@i2c_pkt,w
  2298  0434  3E02               	addlw	2
  2299  0435  0084               	movwf	4
  2300  0436  0880               	movf	0,f
  2301  0437  1903               	skipnz
  2302  0438  2C32               	goto	l1777
  2303                           
  2304                           ;i2c_driver.c: 181: i2c_pkt->ack=0;
  2305  0439  0821               	movf	master_tx@i2c_pkt,w
  2306  043A  3E02               	addlw	2
  2307  043B  0084               	movwf	4
  2308  043C  0180               	clrf	0
  2309                           
  2310                           ;i2c_driver.c: 188: RBIE = 1;
  2311  043D  158B               	bsf	11,3	;volatile
  2312  043E  0008               	return
  2313  043F                     __end_of_master_tx:	
  2314                           ;i2c_driver.c: 189: return 0;
  2315                           ;	Return value of _master_tx is never used
  2316                           
  2317                           
  2318                           	psect	text9
  2319  0355                     __ptext9:	
  2320 ;; *************** function _master_rx *****************
  2321 ;; Defined at:
  2322 ;;		line 191 in file "i2c_driver.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  i2c_pkt         1    wreg     PTR struct packet
  2325 ;;		 -> i2c_pkt(3), 
  2326 ;;  rx_time         1    0[BANK0 ] PTR unsigned char 
  2327 ;;		 -> NULL(0), local_time(7), 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  i2c_pkt         1    2[BANK0 ] PTR struct packet
  2330 ;;		 -> i2c_pkt(3), 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      unsigned char 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2340 ;;      Params:         0       1       0       0       0
  2341 ;;      Locals:         0       1       0       0       0
  2342 ;;      Temps:          0       1       0       0       0
  2343 ;;      Totals:         0       3       0       0       0
  2344 ;;Total ram usage:        3 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    1
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function _master_rx
  2356  0355                     _master_rx:	
  2357                           
  2358                           ;incstack = 0
  2359                           ; Regs used in _master_rx: [wreg-fsr0h+status,2+status,0]
  2360                           ;master_rx@i2c_pkt stored from wreg
  2361  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0357  00A2               	movwf	master_rx@i2c_pkt
  2364                           
  2365                           ;i2c_driver.c: 193: RBIE = 0;
  2366  0358  118B               	bcf	11,3	;volatile
  2367                           
  2368                           ;i2c_driver.c: 194: SEN=1;
  2369  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2370  035A  1303               	bcf	3,6	;RP1=0, select bank1
  2371  035B  1411               	bsf	17,0	;volatile
  2372  035C                     l1787:	
  2373                           ;i2c_driver.c: 196: {
  2374                           
  2375                           ;i2c_driver.c: 195: while(!i2c_pkt->ack)
  2376                           
  2377  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2378  035D  0822               	movf	master_rx@i2c_pkt,w
  2379  035E  3E02               	addlw	2
  2380  035F  0084               	movwf	4
  2381  0360  1383               	bcf	3,7	;select IRP bank0
  2382  0361  0880               	movf	0,f
  2383  0362  1903               	skipnz
  2384  0363  2B5C               	goto	l1787
  2385                           
  2386                           ;i2c_driver.c: 199: }
  2387                           ;i2c_driver.c: 200: i2c_pkt->ack=0;
  2388  0364  0822               	movf	master_rx@i2c_pkt,w
  2389  0365  3E02               	addlw	2
  2390  0366  0084               	movwf	4
  2391  0367  0180               	clrf	0
  2392                           
  2393                           ;i2c_driver.c: 202: SSPBUF=(i2c_pkt->address<<1|1);
  2394  0368  1403               	setc
  2395  0369  0822               	movf	master_rx@i2c_pkt,w
  2396  036A  0084               	movwf	4
  2397  036B  0D00               	rlf	0,w
  2398  036C  0093               	movwf	19	;volatile
  2399  036D                     l1793:	
  2400                           ;i2c_driver.c: 203: while(!i2c_pkt->ack);
  2401                           
  2402  036D  0822               	movf	master_rx@i2c_pkt,w
  2403  036E  3E02               	addlw	2
  2404  036F  0084               	movwf	4
  2405  0370  0880               	movf	0,f
  2406  0371  1903               	skipnz
  2407  0372  2B6D               	goto	l1793
  2408                           
  2409                           ;i2c_driver.c: 204: i2c_pkt->ack=0;
  2410  0373  0822               	movf	master_rx@i2c_pkt,w
  2411  0374  3E02               	addlw	2
  2412  0375  0084               	movwf	4
  2413  0376  0180               	clrf	0
  2414                           
  2415                           ;i2c_driver.c: 209: RCEN=1;
  2416  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2417  0378  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0379  1591               	bsf	17,3	;volatile
  2419  037A                     l1799:	
  2420                           ;i2c_driver.c: 210: while(!i2c_pkt->ack);
  2421                           
  2422  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2423  037B  0822               	movf	master_rx@i2c_pkt,w
  2424  037C  3E02               	addlw	2
  2425  037D  0084               	movwf	4
  2426  037E  0880               	movf	0,f
  2427  037F  1903               	skipnz
  2428  0380  2B7A               	goto	l1799
  2429                           
  2430                           ;i2c_driver.c: 211: i2c_pkt->ack=0;
  2431  0381  0822               	movf	master_rx@i2c_pkt,w
  2432  0382  3E02               	addlw	2
  2433  0383  0084               	movwf	4
  2434  0384  0180               	clrf	0
  2435                           
  2436                           ;i2c_driver.c: 212: *rx_time=SSPBUF;
  2437  0385  0813               	movf	19,w	;volatile
  2438  0386  00A1               	movwf	??_master_rx
  2439  0387  0820               	movf	master_rx@rx_time,w
  2440  0388  0084               	movwf	4
  2441  0389  0821               	movf	??_master_rx,w
  2442  038A  0080               	movwf	0
  2443                           
  2444                           ;i2c_driver.c: 214: ACKDT=1 ;
  2445  038B  1683               	bsf	3,5	;RP0=1, select bank1
  2446  038C  1303               	bcf	3,6	;RP1=0, select bank1
  2447  038D  1691               	bsf	17,5	;volatile
  2448                           
  2449                           ;i2c_driver.c: 215: ACKEN=1;
  2450  038E  1611               	bsf	17,4	;volatile
  2451  038F                     l1809:	
  2452                           ;i2c_driver.c: 216: while(!i2c_pkt->ack);
  2453                           
  2454  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2455  0390  0822               	movf	master_rx@i2c_pkt,w
  2456  0391  3E02               	addlw	2
  2457  0392  0084               	movwf	4
  2458  0393  0880               	movf	0,f
  2459  0394  1903               	skipnz
  2460  0395  2B8F               	goto	l1809
  2461                           
  2462                           ;i2c_driver.c: 217: i2c_pkt->ack=0;
  2463  0396  0822               	movf	master_rx@i2c_pkt,w
  2464  0397  3E02               	addlw	2
  2465  0398  0084               	movwf	4
  2466  0399  0180               	clrf	0
  2467                           
  2468                           ;i2c_driver.c: 227: PEN=1;
  2469  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2470  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2471  039C  1511               	bsf	17,2	;volatile
  2472  039D                     l1815:	
  2473                           ;i2c_driver.c: 228: while(!i2c_pkt->ack);
  2474                           
  2475  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2476  039E  0822               	movf	master_rx@i2c_pkt,w
  2477  039F  3E02               	addlw	2
  2478  03A0  0084               	movwf	4
  2479  03A1  0880               	movf	0,f
  2480  03A2  1903               	skipnz
  2481  03A3  2B9D               	goto	l1815
  2482                           
  2483                           ;i2c_driver.c: 229: i2c_pkt->ack=0;
  2484  03A4  0822               	movf	master_rx@i2c_pkt,w
  2485  03A5  3E02               	addlw	2
  2486  03A6  0084               	movwf	4
  2487  03A7  0180               	clrf	0
  2488                           
  2489                           ;i2c_driver.c: 236: RBIE = 1;
  2490  03A8  158B               	bsf	11,3	;volatile
  2491  03A9  0008               	return
  2492  03AA                     __end_of_master_rx:	
  2493                           ;i2c_driver.c: 237: return 0;
  2494                           ;	Return value of _master_rx is never used
  2495                           
  2496                           
  2497                           	psect	text10
  2498  0593                     __ptext10:	
  2499 ;; *************** function _lcd_init *****************
  2500 ;; Defined at:
  2501 ;;		line 17 in file "lcd_driver.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;		None               void
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         0       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0
  2518 ;;      Totals:         0       0       0       0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    3
  2522 ;; This function calls:
  2523 ;;		_lcd_cmnt
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function _lcd_init
  2531  0593                     _lcd_init:	
  2532                           
  2533                           ;lcd_driver.c: 19: TRISD=0X00;
  2534                           
  2535                           ;incstack = 0
  2536                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2537  0593  1683               	bsf	3,5	;RP0=1, select bank1
  2538  0594  1303               	bcf	3,6	;RP1=0, select bank1
  2539  0595  0188               	clrf	8	;volatile
  2540                           
  2541                           ;lcd_driver.c: 20: PORTD=0X00;
  2542  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0598  0188               	clrf	8	;volatile
  2545                           
  2546                           ;lcd_driver.c: 21: ADCON1=0X06;
  2547  0599  3006               	movlw	6
  2548  059A  1683               	bsf	3,5	;RP0=1, select bank1
  2549  059B  1303               	bcf	3,6	;RP1=0, select bank1
  2550  059C  009F               	movwf	31	;volatile
  2551                           
  2552                           ;lcd_driver.c: 23: lcd_cmnt(0x38);
  2553  059D  3038               	movlw	56
  2554  059E  120A  118A  25F6  120A  118A  	fcall	_lcd_cmnt
  2555                           
  2556                           ;lcd_driver.c: 24: lcd_cmnt(0x0c);
  2557  05A3  300C               	movlw	12
  2558  05A4  120A  118A  25F6  120A  118A  	fcall	_lcd_cmnt
  2559                           
  2560                           ;lcd_driver.c: 25: lcd_cmnt(0x01);
  2561  05A9  3001               	movlw	1
  2562  05AA  120A  118A  25F6  120A  118A  	fcall	_lcd_cmnt
  2563                           
  2564                           ;lcd_driver.c: 26: lcd_cmnt(0x80);
  2565  05AF  3080               	movlw	128
  2566  05B0  120A  118A  25F6   	fcall	_lcd_cmnt
  2567  05B3  0008               	return
  2568  05B4                     __end_of_lcd_init:	
  2569                           
  2570                           	psect	text11
  2571  05F6                     __ptext11:	
  2572 ;; *************** function _lcd_cmnt *****************
  2573 ;; Defined at:
  2574 ;;		line 28 in file "lcd_driver.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  cmnt            1    wreg     unsigned char 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  cmnt            1    7[BANK0 ] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;		None               void
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0, pclath, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2588 ;;      Params:         0       0       0       0       0
  2589 ;;      Locals:         0       1       0       0       0
  2590 ;;      Temps:          0       0       0       0       0
  2591 ;;      Totals:         0       1       0       0       0
  2592 ;;Total ram usage:        1 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    2
  2595 ;; This function calls:
  2596 ;;		_delay
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;;		_lcd_init
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           
  2604                           ;psect for function _lcd_cmnt
  2605  05F6                     _lcd_cmnt:	
  2606                           
  2607                           ;incstack = 0
  2608                           ; Regs used in _lcd_cmnt: [wreg+status,2+status,0+pclath+cstack]
  2609                           ;lcd_cmnt@cmnt stored from wreg
  2610  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  2611  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  2612  05F8  00A7               	movwf	lcd_cmnt@cmnt
  2613                           
  2614                           ;lcd_driver.c: 30: PORTD=cmnt;
  2615  05F9  0827               	movf	lcd_cmnt@cmnt,w
  2616  05FA  0088               	movwf	8	;volatile
  2617                           
  2618                           ;lcd_driver.c: 31: RE0=0;
  2619  05FB  1009               	bcf	9,0	;volatile
  2620                           
  2621                           ;lcd_driver.c: 32: RE1=1;delay(10);RE1=0; ;
  2622  05FC  1489               	bsf	9,1	;volatile
  2623  05FD  300A               	movlw	10
  2624  05FE  00A0               	movwf	delay@x
  2625  05FF  3000               	movlw	0
  2626  0600  00A1               	movwf	delay@x+1
  2627  0601  120A  118A  24B5   	fcall	_delay
  2628  0604  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0605  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0606  1089               	bcf	9,1	;volatile
  2631  0607  0008               	return
  2632  0608                     __end_of_lcd_cmnt:	
  2633                           
  2634                           	psect	text12
  2635  04B5                     __ptext12:	
  2636 ;; *************** function _delay *****************
  2637 ;; Defined at:
  2638 ;;		line 53 in file "lcd_driver.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  x               2    0[BANK0 ] int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  j               2    5[BANK0 ] int 
  2643 ;;  i               2    3[BANK0 ] int 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;		None               void
  2646 ;; Registers used:
  2647 ;;		wreg, status,2
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         0       2       0       0       0
  2654 ;;      Locals:         0       4       0       0       0
  2655 ;;      Temps:          0       1       0       0       0
  2656 ;;      Totals:         0       7       0       0       0
  2657 ;;Total ram usage:        7 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:    1
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;;		_lcd_cmnt
  2665 ;;		_lcd_data
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           
  2670                           ;psect for function _delay
  2671  04B5                     _delay:	
  2672                           
  2673                           ;lcd_driver.c: 55: int i,j;
  2674                           ;lcd_driver.c: 56: for(i=0;i<=x;i++)
  2675                           
  2676                           ;incstack = 0
  2677                           ; Regs used in _delay: [wreg+status,2]
  2678  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2679  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2680  04B7  01A3               	clrf	delay@i
  2681  04B8  01A4               	clrf	delay@i+1
  2682  04B9                     l296:	
  2683  04B9  0821               	movf	delay@x+1,w
  2684  04BA  3A80               	xorlw	128
  2685  04BB  00A2               	movwf	??_delay
  2686  04BC  0824               	movf	delay@i+1,w
  2687  04BD  3A80               	xorlw	128
  2688  04BE  0222               	subwf	??_delay,w
  2689  04BF  1D03               	skipz
  2690  04C0  2CC3               	goto	u1125
  2691  04C1  0823               	movf	delay@i,w
  2692  04C2  0220               	subwf	delay@x,w
  2693  04C3                     u1125:	
  2694  04C3  1C03               	btfss	3,0
  2695  04C4  0008               	return
  2696                           
  2697                           ;lcd_driver.c: 57: {
  2698                           ;lcd_driver.c: 58: for(j=0;j<=x;j++)
  2699  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2700  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2701  04C7  01A5               	clrf	delay@j
  2702  04C8  01A6               	clrf	delay@j+1
  2703  04C9                     l298:	
  2704  04C9  0821               	movf	delay@x+1,w
  2705  04CA  3A80               	xorlw	128
  2706  04CB  00A2               	movwf	??_delay
  2707  04CC  0826               	movf	delay@j+1,w
  2708  04CD  3A80               	xorlw	128
  2709  04CE  0222               	subwf	??_delay,w
  2710  04CF  1D03               	skipz
  2711  04D0  2CD3               	goto	u1115
  2712  04D1  0825               	movf	delay@j,w
  2713  04D2  0220               	subwf	delay@x,w
  2714  04D3                     u1115:	
  2715  04D3  1C03               	btfss	3,0
  2716  04D4  2CDE               	goto	l1659
  2717                           
  2718                           ;lcd_driver.c: 59: {}
  2719  04D5  3001               	movlw	1
  2720  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2721  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2722  04D8  07A5               	addwf	delay@j,f
  2723  04D9  1803               	skipnc
  2724  04DA  0AA6               	incf	delay@j+1,f
  2725  04DB  3000               	movlw	0
  2726  04DC  07A6               	addwf	delay@j+1,f
  2727  04DD  2CC9               	goto	l298
  2728  04DE                     l1659:	
  2729  04DE  3001               	movlw	1
  2730  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2731  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2732  04E1  07A3               	addwf	delay@i,f
  2733  04E2  1803               	skipnc
  2734  04E3  0AA4               	incf	delay@i+1,f
  2735  04E4  3000               	movlw	0
  2736  04E5  07A4               	addwf	delay@i+1,f
  2737  04E6  2CB9               	goto	l296
  2738  04E7                     __end_of_delay:	
  2739                           
  2740                           	psect	text13
  2741  0516                     __ptext13:	
  2742 ;; *************** function _inc_year *****************
  2743 ;; Defined at:
  2744 ;;		line 351 in file "i2c_driver.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  data_ptr        1    wreg     PTR unsigned char 
  2747 ;;		 -> year(2), 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  data_ptr        1    1[BANK0 ] PTR unsigned char 
  2750 ;;		 -> year(2), 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;		None               void
  2753 ;; Registers used:
  2754 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2760 ;;      Params:         0       0       0       0       0
  2761 ;;      Locals:         0       1       0       0       0
  2762 ;;      Temps:          0       1       0       0       0
  2763 ;;      Totals:         0       2       0       0       0
  2764 ;;Total ram usage:        2 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    1
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_main
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           
  2775                           ;psect for function _inc_year
  2776  0516                     _inc_year:	
  2777                           
  2778                           ;incstack = 0
  2779                           ; Regs used in _inc_year: [wreg-fsr0h+status,2+status,0]
  2780                           ;inc_year@data_ptr stored from wreg
  2781  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0517  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0518  00A1               	movwf	inc_year@data_ptr
  2784                           
  2785                           ;i2c_driver.c: 353: if(data_ptr[0]==9)
  2786  0519  0821               	movf	inc_year@data_ptr,w
  2787  051A  0084               	movwf	4
  2788  051B  1383               	bcf	3,7	;select IRP bank0
  2789  051C  0800               	movf	0,w
  2790  051D  3A09               	xorlw	9
  2791  051E  1D03               	skipz
  2792  051F  2D37               	goto	l1915
  2793                           
  2794                           ;i2c_driver.c: 354: {
  2795                           ;i2c_driver.c: 355: data_ptr[0]=0;
  2796  0520  0821               	movf	inc_year@data_ptr,w
  2797  0521  0084               	movwf	4
  2798  0522  0180               	clrf	0
  2799                           
  2800                           ;i2c_driver.c: 356: if(data_ptr[1]==9)
  2801  0523  0A21               	incf	inc_year@data_ptr,w
  2802  0524  0084               	movwf	4
  2803  0525  0800               	movf	0,w
  2804  0526  3A09               	xorlw	9
  2805  0527  1D03               	skipz
  2806  0528  2D2D               	goto	l1913
  2807                           
  2808                           ;i2c_driver.c: 357: {
  2809                           ;i2c_driver.c: 358: data_ptr[1]=0;
  2810  0529  0A21               	incf	inc_year@data_ptr,w
  2811  052A  0084               	movwf	4
  2812  052B  0180               	clrf	0
  2813                           
  2814                           ;i2c_driver.c: 360: }
  2815  052C  0008               	return
  2816  052D                     l1913:	
  2817                           
  2818                           ;i2c_driver.c: 361: else
  2819                           ;i2c_driver.c: 362: {
  2820                           ;i2c_driver.c: 363: data_ptr[1]= data_ptr[1]+1;
  2821  052D  0A21               	incf	inc_year@data_ptr,w
  2822  052E  0084               	movwf	4
  2823  052F  0800               	movf	0,w
  2824  0530  3E01               	addlw	1
  2825  0531  00A0               	movwf	??_inc_year
  2826  0532  0A21               	incf	inc_year@data_ptr,w
  2827  0533  0084               	movwf	4
  2828  0534  0820               	movf	??_inc_year,w
  2829  0535  0080               	movwf	0
  2830                           
  2831                           ;i2c_driver.c: 364: }
  2832                           ;i2c_driver.c: 365: }
  2833  0536  0008               	return
  2834  0537                     l1915:	
  2835                           
  2836                           ;i2c_driver.c: 366: else
  2837                           ;i2c_driver.c: 367: {
  2838                           ;i2c_driver.c: 368: data_ptr[0]=data_ptr[0]+1;
  2839  0537  0821               	movf	inc_year@data_ptr,w
  2840  0538  0084               	movwf	4
  2841  0539  0800               	movf	0,w
  2842  053A  3E01               	addlw	1
  2843  053B  00A0               	movwf	??_inc_year
  2844  053C  0821               	movf	inc_year@data_ptr,w
  2845  053D  0084               	movwf	4
  2846  053E  0820               	movf	??_inc_year,w
  2847  053F  0080               	movwf	0
  2848  0540  0008               	return
  2849  0541                     __end_of_inc_year:	
  2850                           
  2851                           	psect	text14
  2852  0619                     __ptext14:	
  2853 ;; *************** function _i2c_master_init *****************
  2854 ;; Defined at:
  2855 ;;		line 124 in file "i2c_driver.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;		None               void
  2862 ;; Registers used:
  2863 ;;		wreg
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0       0       0       0       0
  2870 ;;      Locals:         0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0
  2872 ;;      Totals:         0       0       0       0       0
  2873 ;;Total ram usage:        0 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    1
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_main
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           
  2884                           ;psect for function _i2c_master_init
  2885  0619                     _i2c_master_init:	
  2886                           
  2887                           ;i2c_driver.c: 127: TRISC3 = 1;
  2888                           
  2889                           ;incstack = 0
  2890                           ; Regs used in _i2c_master_init: [wreg]
  2891  0619  1683               	bsf	3,5	;RP0=1, select bank1
  2892  061A  1303               	bcf	3,6	;RP1=0, select bank1
  2893  061B  1587               	bsf	7,3	;volatile
  2894                           
  2895                           ;i2c_driver.c: 128: TRISC4 = 1;
  2896  061C  1607               	bsf	7,4	;volatile
  2897                           
  2898                           ;i2c_driver.c: 129: SSPADD = 0x28;
  2899  061D  3028               	movlw	40
  2900  061E  0093               	movwf	19	;volatile
  2901                           
  2902                           ;i2c_driver.c: 130: SSPSTAT |= 0x80;
  2903  061F  1794               	bsf	20,7	;volatile
  2904                           
  2905                           ;i2c_driver.c: 131: SSPCON = 0x28;
  2906  0620  3028               	movlw	40
  2907  0621  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0622  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0623  0094               	movwf	20	;volatile
  2910                           
  2911                           ;i2c_driver.c: 132: GIE = 1;
  2912  0624  178B               	bsf	11,7	;volatile
  2913                           
  2914                           ;i2c_driver.c: 133: PEIE = 1;
  2915  0625  170B               	bsf	11,6	;volatile
  2916                           
  2917                           ;i2c_driver.c: 134: SSPIE = 1;
  2918  0626  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0627  1303               	bcf	3,6	;RP1=0, select bank1
  2920  0628  158C               	bsf	12,3	;volatile
  2921  0629  0008               	return
  2922  062A                     __end_of_i2c_master_init:	
  2923                           
  2924                           	psect	text15
  2925  05B4                     __ptext15:	
  2926 ;; *************** function _hex2char *****************
  2927 ;; Defined at:
  2928 ;;		line 332 in file "i2c_driver.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  in              1    wreg     unsigned char 
  2931 ;;  out             1    0[BANK0 ] PTR unsigned char 
  2932 ;;		 -> year(2), month(2), date(2), sec(2), 
  2933 ;;		 -> min(2), hour(2), 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  in              1    3[BANK0 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;		None               void
  2938 ;; Registers used:
  2939 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         0       1       0       0       0
  2946 ;;      Locals:         0       1       0       0       0
  2947 ;;      Temps:          0       2       0       0       0
  2948 ;;      Totals:         0       4       0       0       0
  2949 ;;Total ram usage:        4 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_main
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function _hex2char
  2961  05B4                     _hex2char:	
  2962                           
  2963                           ;incstack = 0
  2964                           ; Regs used in _hex2char: [wreg-fsr0h+status,2+status,0]
  2965                           ;hex2char@in stored from wreg
  2966  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2967  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2968  05B6  00A3               	movwf	hex2char@in
  2969                           
  2970                           ;i2c_driver.c: 334: *out= in & 0x0f;
  2971  05B7  0823               	movf	hex2char@in,w
  2972  05B8  390F               	andlw	15
  2973  05B9  00A1               	movwf	??_hex2char
  2974  05BA  0820               	movf	hex2char@out,w
  2975  05BB  0084               	movwf	4
  2976  05BC  0821               	movf	??_hex2char,w
  2977  05BD  1383               	bcf	3,7	;select IRP bank0
  2978  05BE  0080               	movwf	0
  2979                           
  2980                           ;i2c_driver.c: 335: *(out+1)= in>>4;
  2981  05BF  0823               	movf	hex2char@in,w
  2982  05C0  00A1               	movwf	??_hex2char
  2983  05C1  3004               	movlw	4
  2984  05C2                     u1365:	
  2985  05C2  1003               	clrc
  2986  05C3  0CA1               	rrf	??_hex2char,f
  2987  05C4  3EFF               	addlw	-1
  2988  05C5  1D03               	skipz
  2989  05C6  2DC2               	goto	u1365
  2990  05C7  0821               	movf	??_hex2char,w
  2991  05C8  00A2               	movwf	??_hex2char+1
  2992  05C9  0A20               	incf	hex2char@out,w
  2993  05CA  0084               	movwf	4
  2994  05CB  0822               	movf	??_hex2char+1,w
  2995  05CC  0080               	movwf	0
  2996  05CD  0008               	return
  2997  05CE                     __end_of_hex2char:	
  2998                           
  2999                           	psect	text16
  3000  04E7                     __ptext16:	
  3001 ;; *************** function _dec_year *****************
  3002 ;; Defined at:
  3003 ;;		line 372 in file "i2c_driver.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  data_ptr        1    wreg     PTR unsigned char 
  3006 ;;		 -> year(2), 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  data_ptr        1    1[BANK0 ] PTR unsigned char 
  3009 ;;		 -> year(2), 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;		None               void
  3012 ;; Registers used:
  3013 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3019 ;;      Params:         0       0       0       0       0
  3020 ;;      Locals:         0       1       0       0       0
  3021 ;;      Temps:          0       1       0       0       0
  3022 ;;      Totals:         0       2       0       0       0
  3023 ;;Total ram usage:        2 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    1
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           
  3034                           ;psect for function _dec_year
  3035  04E7                     _dec_year:	
  3036                           
  3037                           ;incstack = 0
  3038                           ; Regs used in _dec_year: [wreg-fsr0h+status,2+status,0]
  3039                           ;dec_year@data_ptr stored from wreg
  3040  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  3041  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  3042  04E9  00A1               	movwf	dec_year@data_ptr
  3043                           
  3044                           ;i2c_driver.c: 374: if(data_ptr[0]==0)
  3045  04EA  0821               	movf	dec_year@data_ptr,w
  3046  04EB  0084               	movwf	4
  3047  04EC  1383               	bcf	3,7	;select IRP bank0
  3048  04ED  0880               	movf	0,f
  3049  04EE  1D03               	skipz
  3050  04EF  2D0C               	goto	l1903
  3051                           
  3052                           ;i2c_driver.c: 375: {
  3053                           ;i2c_driver.c: 376: data_ptr[0]=9;
  3054  04F0  3009               	movlw	9
  3055  04F1  00A0               	movwf	??_dec_year
  3056  04F2  0821               	movf	dec_year@data_ptr,w
  3057  04F3  0084               	movwf	4
  3058  04F4  0820               	movf	??_dec_year,w
  3059  04F5  0080               	movwf	0
  3060                           
  3061                           ;i2c_driver.c: 377: if(data_ptr[1]==0)
  3062  04F6  0A21               	incf	dec_year@data_ptr,w
  3063  04F7  0084               	movwf	4
  3064  04F8  0880               	movf	0,f
  3065  04F9  1D03               	skipz
  3066  04FA  2D02               	goto	l1901
  3067                           
  3068                           ;i2c_driver.c: 378: {
  3069                           ;i2c_driver.c: 379: data_ptr[1]=9;
  3070  04FB  3009               	movlw	9
  3071  04FC  00A0               	movwf	??_dec_year
  3072  04FD  0A21               	incf	dec_year@data_ptr,w
  3073  04FE  0084               	movwf	4
  3074  04FF  0820               	movf	??_dec_year,w
  3075  0500  0080               	movwf	0
  3076                           
  3077                           ;i2c_driver.c: 380: }
  3078  0501  0008               	return
  3079  0502                     l1901:	
  3080                           
  3081                           ;i2c_driver.c: 381: else
  3082                           ;i2c_driver.c: 382: {
  3083                           ;i2c_driver.c: 383: data_ptr[1]= data_ptr[1]-1;
  3084  0502  0A21               	incf	dec_year@data_ptr,w
  3085  0503  0084               	movwf	4
  3086  0504  0800               	movf	0,w
  3087  0505  3EFF               	addlw	255
  3088  0506  00A0               	movwf	??_dec_year
  3089  0507  0A21               	incf	dec_year@data_ptr,w
  3090  0508  0084               	movwf	4
  3091  0509  0820               	movf	??_dec_year,w
  3092  050A  0080               	movwf	0
  3093                           
  3094                           ;i2c_driver.c: 384: }
  3095                           ;i2c_driver.c: 385: }
  3096  050B  0008               	return
  3097  050C                     l1903:	
  3098                           
  3099                           ;i2c_driver.c: 386: else
  3100                           ;i2c_driver.c: 387: {
  3101                           ;i2c_driver.c: 388: data_ptr[0]=data_ptr[0]-1;
  3102  050C  0821               	movf	dec_year@data_ptr,w
  3103  050D  0084               	movwf	4
  3104  050E  0800               	movf	0,w
  3105  050F  3EFF               	addlw	255
  3106  0510  00A0               	movwf	??_dec_year
  3107  0511  0821               	movf	dec_year@data_ptr,w
  3108  0512  0084               	movwf	4
  3109  0513  0820               	movf	??_dec_year,w
  3110  0514  0080               	movwf	0
  3111  0515  0008               	return
  3112  0516                     __end_of_dec_year:	
  3113                           
  3114                           	psect	text17
  3115  0541                     __ptext17:	
  3116 ;; *************** function _interrupt_isr *****************
  3117 ;; Defined at:
  3118 ;;		line 300 in file "i2c_driver.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;		None               void
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3132 ;;      Params:         0       0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0
  3134 ;;      Temps:          6       0       0       0       0
  3135 ;;      Totals:         6       0       0       0       0
  3136 ;;Total ram usage:        6 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		Interrupt level 1
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           
  3146                           ;psect for function _interrupt_isr
  3147  0541                     _interrupt_isr:	
  3148                           
  3149                           ;i2c_driver.c: 303: if(SSPIF)
  3150  0541  1D8C               	btfss	12,3	;volatile
  3151  0542  2D46               	goto	i1l211
  3152                           
  3153                           ;i2c_driver.c: 304: {
  3154                           ;i2c_driver.c: 305: i2c_pkt.ack=1;
  3155  0543  01EF               	clrf	_i2c_pkt+2
  3156  0544  0AEF               	incf	_i2c_pkt+2,f
  3157                           
  3158                           ;i2c_driver.c: 308: SSPIF = 0;
  3159  0545  118C               	bcf	12,3	;volatile
  3160  0546                     i1l211:	
  3161                           
  3162                           ;i2c_driver.c: 311: }
  3163                           ;i2c_driver.c: 312: if(RBIF)
  3164  0546  1C0B               	btfss	11,0	;volatile
  3165  0547  2D61               	goto	i1l214
  3166                           
  3167                           ;i2c_driver.c: 313: {
  3168                           ;i2c_driver.c: 316: PORTA=2;
  3169  0548  3002               	movlw	2
  3170  0549  0085               	movwf	5	;volatile
  3171                           
  3172                           ;i2c_driver.c: 318: key_nav = ((0XF0&~PORTB)>>4);
  3173  054A  0906               	comf	6,w	;volatile
  3174  054B  00F6               	movwf	??_interrupt_isr
  3175  054C  3004               	movlw	4
  3176  054D                     u106_25:	
  3177  054D  1003               	clrc
  3178  054E  0CF6               	rrf	??_interrupt_isr,f
  3179  054F  3EFF               	addlw	-1
  3180  0550  1D03               	skipz
  3181  0551  2D4D               	goto	u106_25
  3182  0552  0876               	movf	??_interrupt_isr,w
  3183  0553  390F               	andlw	15
  3184  0554  00F7               	movwf	??_interrupt_isr+1
  3185  0555  0877               	movf	??_interrupt_isr+1,w
  3186  0556  00D6               	movwf	_key_nav
  3187                           
  3188                           ;i2c_driver.c: 321: if(RB4==0)
  3189  0557  1A06               	btfsc	6,4	;volatile
  3190  0558  2D60               	goto	i1l1633
  3191                           
  3192                           ;i2c_driver.c: 322: {
  3193                           ;i2c_driver.c: 323: flag=!flag;
  3194  0559  08D4               	movf	_flag,f
  3195  055A  3000               	movlw	0
  3196  055B  1903               	skipnz
  3197  055C  3001               	movlw	1
  3198  055D  00F6               	movwf	??_interrupt_isr
  3199  055E  0876               	movf	??_interrupt_isr,w
  3200  055F  00D4               	movwf	_flag
  3201  0560                     i1l1633:	
  3202                           
  3203                           ;i2c_driver.c: 324: }
  3204                           ;i2c_driver.c: 326: RBIF = 0;
  3205  0560  100B               	bcf	11,0	;volatile
  3206  0561                     i1l214:	
  3207  0561  087B               	movf	??_interrupt_isr+5,w
  3208  0562  00FF               	movwf	127
  3209  0563  087A               	movf	??_interrupt_isr+4,w
  3210  0564  008A               	movwf	10
  3211  0565  0879               	movf	??_interrupt_isr+3,w
  3212  0566  0084               	movwf	4
  3213  0567  0E78               	swapf	(??_interrupt_isr+2)^(0+-128),w
  3214  0568  0083               	movwf	3
  3215  0569  0EFE               	swapf	126,f
  3216  056A  0E7E               	swapf	126,w
  3217  056B  0009               	retfie
  3218  056C                     __end_of_interrupt_isr:	
  3219  007E                     btemp	set	126	;btemp
  3220  007E                     wtemp	set	126
  3221  007E                     wtemp0	set	126
  3222  0080                     wtemp1	set	128
  3223  0082                     wtemp2	set	130
  3224  0084                     wtemp3	set	132
  3225  0086                     wtemp4	set	134
  3226  0088                     wtemp5	set	136
  3227  007F                     wtemp6	set	127
  3228  007E                     ttemp	set	126
  3229  007E                     ttemp0	set	126
  3230  0081                     ttemp1	set	129
  3231  0084                     ttemp2	set	132
  3232  0087                     ttemp3	set	135
  3233  007F                     ttemp4	set	127
  3234  007E                     ltemp	set	126
  3235  007E                     ltemp0	set	126
  3236  0082                     ltemp1	set	130
  3237  0086                     ltemp2	set	134
  3238  0080                     ltemp3	set	128
  3239                           
  3240                           	psect	intentry
  3241  0004                     __pintentry:	
  3242                           ;incstack = 0
  3243                           ; Regs used in _interrupt_isr: [wreg+status,2+status,0]
  3244                           
  3245  0004                     interrupt_function:	
  3246  007E                     saved_w	set	btemp
  3247  0004  00FE               	movwf	btemp
  3248  0005  0E03               	swapf	3,w
  3249  0006  00F8               	movwf	??_interrupt_isr+2
  3250  0007  0804               	movf	4,w
  3251  0008  00F9               	movwf	??_interrupt_isr+3
  3252  0009  080A               	movf	10,w
  3253  000A  00FA               	movwf	??_interrupt_isr+4
  3254  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3255  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3256  000D  087F               	movf	btemp+1,w
  3257  000E  00FB               	movwf	??_interrupt_isr+5
  3258  000F  120A  118A  2D41   	ljmp	_interrupt_isr


Data Sizes:
    Strings     69
    Constant    10
    Data        7
    BSS         63
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     52      80
    BANK1            80      2      41
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_3(CODE[23]), STR_2(CODE[23]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> lcd_msg1(BANK1[16]), lcd_msg(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S266$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    uart_lcd_update@data	PTR unsigned char  size(1) Largest target is 16
		 -> lcd_msg1(BANK1[16]), lcd_msg(BANK1[16]), 

    dec_year@data_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), 

    inc_year@data_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), 

    char2int@in	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), 

    hex2char@out	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), sec(BANK0[2]), 
		 -> min(BANK0[2]), hour(BANK0[2]), 

    master_tx_write@i2c_pkt	PTR struct packet size(1) Largest target is 3
		 -> i2c_pkt(BANK0[3]), 

    master_rx@rx_time	PTR unsigned char  size(1) Largest target is 7
		 -> NULL(NULL[0]), local_time(BANK0[7]), 

    master_rx@i2c_pkt	PTR struct packet size(1) Largest target is 3
		 -> i2c_pkt(BANK0[3]), 

    master_tx@i2c_pkt	PTR struct packet size(1) Largest target is 3
		 -> i2c_pkt(BANK0[3]), 

    timer	PTR unsigned char  size(1) Largest target is 7
		 -> NULL(NULL[0]), local_time(BANK0[7]), 

    timer_ptr	PTR unsigned char [7] size(1) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), day(COMMON[1]), 
		 -> sec(BANK0[2]), min(BANK0[2]), hour(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _uart_lcd_update->_lcd_data
    _lcd_data->_delay
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _master_tx_write->_char2int
    _lcd_init->_lcd_cmnt
    _lcd_cmnt->_delay

Critical Paths under _interrupt_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    6052
                                             39 BANK0     13    13      0
                                              0 BANK1      2     2      0
                           _dec_year
                              _delay
                           _hex2char
                    _i2c_master_init
                           _inc_year
                           _lcd_cmnt
                           _lcd_init
                          _master_rx
                          _master_tx
                    _master_tx_write
                            _sprintf
                    _uart_lcd_update
 ---------------------------------------------------------------------------------
 (1) _uart_lcd_update                                      5     4      1     872
                                              8 BANK0      5     4      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             1     1      0     362
                                              7 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    12     13    1714
                                             14 BANK0     25    12     13
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     362
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _master_tx_write                                      2     2      0     463
                                              3 BANK0      2     2      0
                           _char2int
 ---------------------------------------------------------------------------------
 (2) _char2int                                             3     3      0      92
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _master_tx                                            2     2      0     340
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _master_rx                                            3     2      1     467
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     362
                           _lcd_cmnt
 ---------------------------------------------------------------------------------
 (2) _lcd_cmnt                                             1     1      0     362
                                              7 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                7     5      2     331
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _inc_year                                             2     2      0     278
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hex2char                                             4     3      1     514
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _dec_year                                             2     2      0     278
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupt_isr                                        6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dec_year
   _delay
   _hex2char
   _i2c_master_init
   _inc_year
   _lcd_cmnt
     _delay
   _lcd_init
     _lcd_cmnt
       _delay
   _master_rx
   _master_tx
   _master_tx_write
     _char2int
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _uart_lcd_update
     _lcd_data
       _delay

 _interrupt_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      2      29       7       51.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     34      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      85      12        0.0%
ABS                  0      0      85       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Jan 25 01:48:09 2018

              __CFG_CP$ON 0000                         pc 0002              lcd_data@data 0027  
   __end_of_interrupt_isr 056C               __CFG_CPD$ON 0000                        fsr 0004  
                     l296 04B9                       l298 04C9                       _GIE 005F  
                     _RB4 0034                       _RE0 0048                       _RE1 0049  
                     _PEN 048A                       _SEN 0488                       _day 0075  
                     _inc 0055                       _min 0065                       _sec 0069  
                     fsr0 0004                       indf 0000              __CFG_FOSC$LP 0000  
            lcd_cmnt@cmnt 0027              __CFG_LVP$OFF 0000                      l2021 0175  
                    l2041 01FD                      l2033 0195                      l2025 017C  
                    l2027 0182                      l2029 0185                      l2039 0196  
                    l1703 046D                      l1721 0495                      l1707 0478  
                    l1901 0502                      l1725 04A3                      l1903 050C  
                    l1815 039D                      l1719 0487                      l1913 052D  
                    l1809 038F                      l1729 04AE                      l1841 023D  
                    l1915 0537                      l1659 04DE                      l1771 0425  
                    l1931 03CF                      l1851 0254                      l1835 0227  
                    l1765 0417                      l1925 03C3                      l1759 0405  
                    l1943 03F0                      l1919 03B1                      l1695 0449  
                    l1863 027B                      l1855 025A                      l1793 036D  
                    l1777 0432                      l1937 03E2                      l1697 0457  
                    l1881 02D6                      l1787 035C                      l1891 0571  
                    l1877 028E                      l1869 028A                      l1799 037A  
                    l1879 0207                      l1975 005C                      l1993 0091  
                    l1985 0071                      STR_1 0310                      STR_2 0327  
                    STR_3 033E                      u1115 04D3                      u1125 04C3  
                    u1135 05DB                      u1225 048A                      u1155 044C  
                    u1245 049B                      u1405 0271                      u1175 0458  
                    u1255 04A4                      u1185 0464                      u1195 046E  
                    u1365 05C2                      u1455 057A             __CFG_DEBUG$ON 0000  
                    _PEIE 005E                      _RBIE 005B                      _RBIF 0058  
                    _RCEN 048B                      _RSEN 0489                      _date 0061  
                    _flag 0054                      _main 003B                      _hour 0063  
                    _year 006B                      btemp 007E                      ltemp 007E  
       ??_uart_lcd_update 0029                      start 0012                      ttemp 007E  
                    wtemp 007E                     ?_main 0076                     _ACKEN 048C  
                   _ACKDT 048D                     _BCLIE 046B             __CFG_WDTE$OFF 0000  
         __end_of___lwdiv 047F                     i1l211 0546                     i1l214 0561  
         __end_of___lwmod 04B5                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _TRISE 0089  
                   _SSPIF 0063                     _SSPEN 00A5             __CFG_WRT$HALF 0000  
           __CFG_PWRTE$ON 0000                     _delay 04B5           __end_of_dpowers 0310  
                   _month 0067                     _timer 0058                     main@i 00C8  
          __CFG_BOREN$OFF 0000                     pclath 000A                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __end_of_sprintf 02DB           __initialization 0015  
            __end_of_main 0200         ??_master_tx_write 0023                    ??_main 0047  
                  ?_delay 0020                    _ADCON1 009F                    i1l1633 0560  
                  u106_25 054D                    _INTCON 000B          __end_of_char2int 05E4  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013          __end_of_dec_year 0516  
        __end_of_hex2char 05CE          __end_of_lcd_data 05F6          __end_of_lcd_cmnt 0608  
        __end_of_lcd_init 05B4           _i2c_master_init 0619          __end_of_inc_year 0541  
               ??___lwdiv 0024                 ??___lwmod 002C                    delay@i 0023  
                  delay@j 0025                    delay@x 0020                    saved_w 007E  
               ??_sprintf 003B   __end_of__initialization 0037            __pcstackCOMMON 0076  
            __pidataBANK1 0632             __end_of_delay 04E7           _uart_lcd_update 056C  
                 ??_delay 0022    master_tx_write@i2c_pkt 0024                __pbssBANK0 0054  
              __pbssBANK1 00A0   __end_of_i2c_master_init 062A        __size_of_master_rx 0055  
      __size_of_master_tx 0041                __pmaintext 003B                __pintentry 0004  
               ?_char2int 0076                 ?_dec_year 0076                 ?_hex2char 0020  
        uart_lcd_update@i 002B                char2int@in 0022                 ?_lcd_data 0076  
               ?_lcd_cmnt 0076                 ?_lcd_init 0076                   _SSPSTAT 0094  
              __stringtab 0300                 ?_inc_year 0076    __size_of_interrupt_isr 002B  
         _master_tx_write 03AA                   _i2c_pkt 006D                   ___lwdiv 043F  
                 ___lwmod 047F                _local_time 005A                   _day_dec 0071  
 __end_of_uart_lcd_update 0593                   __ptext1 056C                   __ptext2 05E4  
                 __ptext3 0200                   __ptext4 047F                   __ptext5 043F  
                 __ptext6 03AA                   __ptext7 05CE                   __ptext8 03FE  
                 __ptext9 0355                   _lcd_msg 00A0                ??_char2int 0020  
                 _dpowers 0306                   _key_nav 0056                   _min_dec 0073  
              ??_dec_year 0020                   _sec_dec 0074         __end_of_master_rx 03AA  
       __end_of_master_tx 043F                ??_hex2char 0021                ??_lcd_data 0027  
                 _sprintf 0200                ??_lcd_cmnt 0027                hex2char@in 0023  
                 clrloop0 062B                ??_lcd_init 0028      end_of_initialization 0037  
              ??_inc_year 0020          ?_i2c_master_init 0076        uart_lcd_update@len 0028  
           _interrupt_isr 0541   __end_of_master_tx_write 03FE                main@status 00C7  
          ?_interrupt_isr 0076          ?_uart_lcd_update 0028       start_initialization 0015  
        master_rx@i2c_pkt 0022                init_fetch0 0608          master_tx@i2c_pkt 0021  
             __pdataBANK1 00C0               __pbssCOMMON 0070                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00C7         __size_of_char2int 0016  
     __end_of__stringdata 0355         __size_of_dec_year 002F          master_rx@rx_time 0020  
       __size_of_hex2char 001A          ?_master_tx_write 0076          dec_year@data_ptr 0021  
       __size_of_lcd_data 0012         __size_of_lcd_cmnt 0012         __size_of_lcd_init 0021  
             sprintf@_val 0041               sprintf@flag 003F               sprintf@prec 0040  
       __size_of_inc_year 002B                 __pnvBANK0 006D          ___lwdiv@dividend 0022  
         ??_interrupt_isr 0076                  ?___lwdiv 0020                  ?___lwmod 0028  
               __pstrings 0300          ___lwdiv@quotient 0026            __size_of_delay 0032  
                ?_sprintf 002E                 _master_rx 0355                 _master_tx 03FE  
       interrupt_function 0004                 clear_ram0 062A                 _month_dec 0057  
               _timer_ptr 00C0               __stringbase 0305               __stringdata 0310  
              ?_master_rx 0020                ?_master_tx 0076  __size_of_i2c_master_init 0011  
        __size_of___lwdiv 0040          __size_of___lwmod 0036        __end_of__stringtab 0306  
                _char2int 05CE                  _dec_year 04E7                  _date_dec 0070  
                _hex2char 05B4           ___lwdiv@divisor 0020           ___lwdiv@counter 0025  
                __ptext10 0593                  __ptext11 05F6                  __ptext12 04B5  
                __ptext13 0516                  __ptext14 0619                  __ptext15 05B4  
                __ptext16 04E7                  __ptext17 0541                  _lcd_data 05E4  
                _lcd_cmnt 05F6                  _lcd_msg1 00B0                  _lcd_init 0593  
        __size_of_sprintf 00DB                  _inc_year 0516             __size_of_main 01C5  
                _hour_dec 0072                  _year_dec 0059               hex2char@out 0020  
                init_ram0 060C  __size_of_uart_lcd_update 0027               ??_master_rx 0021  
             ??_master_tx 0020                  intlevel1 0000                 sprintf@ap 003E  
               sprintf@sp 0045          ___lwmod@dividend 002A                 stringcode 0300  
     uart_lcd_update@data 002A          inc_year@data_ptr 0021                _OPTION_REG 0081  
                sprintf@c 0046                  sprintf@f 002E           ___lwmod@divisor 0028  
         ___lwmod@counter 002D         ??_i2c_master_init 0020                  stringdir 0300  
                stringtab 0300  __size_of_master_tx_write 0054  
