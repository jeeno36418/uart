

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Dec 31 18:03:04 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000E                     	;# 
    45  000F                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001B                     	;# 
    60  001C                     	;# 
    61  001D                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  0081                     	;# 
    65  0085                     	;# 
    66  0086                     	;# 
    67  0087                     	;# 
    68  0088                     	;# 
    69  0089                     	;# 
    70  008C                     	;# 
    71  008D                     	;# 
    72  008E                     	;# 
    73  0091                     	;# 
    74  0092                     	;# 
    75  0093                     	;# 
    76  0094                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009E                     	;# 
    82  009F                     	;# 
    83  010C                     	;# 
    84  010D                     	;# 
    85  010E                     	;# 
    86  010F                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149                           
   150                           	psect	strings
   151  0302                     __pstrings:	
   152  0302                     stringtab:	
   153  0302                     __stringtab:	
   154  0302                     stringcode:	
   155                           ;	String table - string pointers are 1 byte each
   156                           
   157  0302                     stringdir:	
   158  0302  3003               	movlw	high stringdir
   159  0303  008A               	movwf	10
   160  0304  0804               	movf	4,w
   161  0305  0A84               	incf	4,f
   162  0306  0782               	addwf	2,f
   163  0307                     __stringbase:	
   164  0307  3400               	retlw	0
   165  0308                     __end_of__stringtab:	
   166  0308                     _dpowers:	
   167  0308  3401               	retlw	1
   168  0309  3400               	retlw	0
   169  030A  340A               	retlw	10
   170  030B  3400               	retlw	0
   171  030C  3464               	retlw	100
   172  030D  3400               	retlw	0
   173  030E  34E8               	retlw	232
   174  030F  3403               	retlw	3
   175  0310  3410               	retlw	16
   176  0311  3427               	retlw	39
   177  0312                     __end_of_dpowers:	
   178  0312                     __stringdata:	
   179  0312                     STR_1:	
   180  0312  3454               	retlw	84	;'T'
   181  0313  3469               	retlw	105	;'i'
   182  0314  346D               	retlw	109	;'m'
   183  0315  3465               	retlw	101	;'e'
   184  0316  343A               	retlw	58	;':'
   185  0317  3420               	retlw	32	;' '
   186  0318  3425               	retlw	37	;'%'
   187  0319  3464               	retlw	100	;'d'
   188  031A  3425               	retlw	37	;'%'
   189  031B  3464               	retlw	100	;'d'
   190  031C  342D               	retlw	45	;'-'
   191  031D  3425               	retlw	37	;'%'
   192  031E  3464               	retlw	100	;'d'
   193  031F  3425               	retlw	37	;'%'
   194  0320  3464               	retlw	100	;'d'
   195  0321  342D               	retlw	45	;'-'
   196  0322  3425               	retlw	37	;'%'
   197  0323  3464               	retlw	100	;'d'
   198  0324  3425               	retlw	37	;'%'
   199  0325  3464               	retlw	100	;'d'
   200  0326  3400               	retlw	0
   201  0327                     STR_2:	
   202  0327  3444               	retlw	68	;'D'
   203  0328  3461               	retlw	97	;'a'
   204  0329  3474               	retlw	116	;'t'
   205  032A  3465               	retlw	101	;'e'
   206  032B  343A               	retlw	58	;':'
   207  032C  3420               	retlw	32	;' '
   208  032D  3425               	retlw	37	;'%'
   209  032E  3464               	retlw	100	;'d'
   210  032F  3425               	retlw	37	;'%'
   211  0330  3464               	retlw	100	;'d'
   212  0331  342D               	retlw	45	;'-'
   213  0332  3425               	retlw	37	;'%'
   214  0333  3464               	retlw	100	;'d'
   215  0334  3425               	retlw	37	;'%'
   216  0335  3464               	retlw	100	;'d'
   217  0336  342D               	retlw	45	;'-'
   218  0337  3425               	retlw	37	;'%'
   219  0338  3464               	retlw	100	;'d'
   220  0339  3425               	retlw	37	;'%'
   221  033A  3464               	retlw	100	;'d'
   222  033B  3400               	retlw	0
   223  033C                     __end_of__stringdata:	
   224                           
   225                           ; #config settings
   226  0000                     
   227                           	psect	nvBANK0
   228  0065                     __pnvBANK0:	
   229  0065                     _i2c_pkt:	
   230  0065                     	ds	3
   231  000B                     _INTCON	set	11
   232  0008                     _PORTD	set	8
   233  0013                     _SSPBUF	set	19
   234  0014                     _SSPCON	set	20
   235  005F                     _GIE	set	95
   236  005E                     _PEIE	set	94
   237  0048                     _RE0	set	72
   238  0049                     _RE1	set	73
   239  00A5                     _SSPEN	set	165
   240  0063                     _SSPIF	set	99
   241  009F                     _ADCON1	set	159
   242  0093                     _SSPADD	set	147
   243  0091                     _SSPCON2	set	145
   244  0094                     _SSPSTAT	set	148
   245  0086                     _TRISB	set	134
   246  0088                     _TRISD	set	136
   247  0089                     _TRISE	set	137
   248  048D                     _ACKDT	set	1165
   249  048C                     _ACKEN	set	1164
   250  046B                     _BCLIE	set	1131
   251  048A                     _PEN	set	1162
   252  048B                     _RCEN	set	1163
   253  0489                     _RSEN	set	1161
   254  0488                     _SEN	set	1160
   255  0463                     _SSPIE	set	1123
   256  043B                     _TRISC3	set	1083
   257  043C                     _TRISC4	set	1084
   258                           
   259                           	psect	cinit
   260  0015                     start_initialization:	
   261  0015                     __initialization:	
   262                           
   263                           ; Clear objects allocated to COMMON
   264  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   265                           
   266                           ; Clear objects allocated to BANK0
   267  0016  1383               	bcf	3,7	;select IRP bank0
   268  0017  3051               	movlw	low __pbssBANK0
   269  0018  0084               	movwf	4
   270  0019  3065               	movlw	low (__pbssBANK0+20)
   271  001A  120A  118A  2449  120A  118A  	fcall	clear_ram0
   272                           
   273                           ; Clear objects allocated to BANK1
   274  001F  30A0               	movlw	low __pbssBANK1
   275  0020  0084               	movwf	4
   276  0021  30C0               	movlw	low (__pbssBANK1+32)
   277  0022  120A  118A  2449   	fcall	clear_ram0
   278  0025                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  0025                     __end_of__initialization:	
   282  0025  0183               	clrf	3
   283  0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286  0079                     __pbssCOMMON:	
   287  0079                     _day:	
   288  0079                     	ds	1
   289                           
   290                           	psect	bssBANK0
   291  0051                     __pbssBANK0:	
   292  0051                     _timer:	
   293  0051                     	ds	1
   294  0052                     _local_time:	
   295  0052                     	ds	7
   296  0059                     _date:	
   297  0059                     	ds	2
   298  005B                     _hour:	
   299  005B                     	ds	2
   300  005D                     _min:	
   301  005D                     	ds	2
   302  005F                     _month:	
   303  005F                     	ds	2
   304  0061                     _sec:	
   305  0061                     	ds	2
   306  0063                     _year:	
   307  0063                     	ds	2
   308                           
   309                           	psect	bssBANK1
   310  00A0                     __pbssBANK1:	
   311  00A0                     _lcd_msg:	
   312  00A0                     	ds	16
   313  00B0                     _lcd_msg1:	
   314  00B0                     	ds	16
   315                           
   316                           	psect	clrtext
   317  0449                     clear_ram0:	
   318                           ;	Called with FSR containing the base address, and
   319                           ;	W with the last address+1
   320                           
   321  0449  0064               	clrwdt	;clear the watchdog before getting into this loop
   322  044A                     clrloop0:	
   323  044A  0180               	clrf	0	;clear RAM location pointed to by FSR
   324  044B  0A84               	incf	4,f	;increment pointer
   325  044C  0604               	xorwf	4,w	;XOR with final address
   326  044D  1903               	btfsc	3,2	;have we reached the end yet?
   327  044E  3400               	retlw	0	;all done for this memory range, return
   328  044F  0604               	xorwf	4,w	;XOR again to restore value
   329  0450  2C4A               	goto	clrloop0	;do the next byte
   330                           
   331                           	psect	cstackCOMMON
   332  0070                     __pcstackCOMMON:	
   333  0070                     ?_lcd_init:	
   334  0070                     ?_i2c_master_init:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_lcd_cmnt:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_main:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_interrupt_isr:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ??_interrupt_isr:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_lcd_data:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_master_tx:	
   353                           ; 0 bytes @ 0x0
   354                           
   355                           
   356                           ; 1 bytes @ 0x0
   357  0070                     	ds	4
   358  0074                     ??_i2c_master_init:	
   359  0074                     ??_master_tx:	
   360                           ; 0 bytes @ 0x4
   361                           
   362  0074                     ?_int2char:	
   363                           ; 0 bytes @ 0x4
   364                           
   365  0074                     ?_delay:	
   366                           ; 0 bytes @ 0x4
   367                           
   368  0074                     ?_master_rx:	
   369                           ; 0 bytes @ 0x4
   370                           
   371  0074                     ?___lwdiv:	
   372                           ; 1 bytes @ 0x4
   373                           
   374  0074                     master_rx@rx_time:	
   375                           ; 2 bytes @ 0x4
   376                           
   377  0074                     int2char@out:	
   378                           ; 1 bytes @ 0x4
   379                           
   380  0074                     delay@x:	
   381                           ; 1 bytes @ 0x4
   382                           
   383  0074                     ___lwdiv@divisor:	
   384                           ; 2 bytes @ 0x4
   385                           
   386                           
   387                           ; 2 bytes @ 0x4
   388  0074                     	ds	1
   389  0075                     ??_master_rx:	
   390  0075                     ??_int2char:	
   391                           ; 0 bytes @ 0x5
   392                           
   393  0075                     master_tx@i2c_pkt:	
   394                           ; 0 bytes @ 0x5
   395                           
   396                           
   397                           ; 1 bytes @ 0x5
   398  0075                     	ds	1
   399  0076                     ??_delay:	
   400  0076                     master_rx@i2c_pkt:	
   401                           ; 0 bytes @ 0x6
   402                           
   403  0076                     ___lwdiv@dividend:	
   404                           ; 1 bytes @ 0x6
   405                           
   406                           
   407                           ; 2 bytes @ 0x6
   408  0076                     	ds	1
   409  0077                     ??_lcd_cmnt:	
   410  0077                     ??_lcd_data:	
   411                           ; 0 bytes @ 0x7
   412                           
   413  0077                     int2char@in:	
   414                           ; 0 bytes @ 0x7
   415                           
   416  0077                     lcd_cmnt@cmnt:	
   417                           ; 1 bytes @ 0x7
   418                           
   419  0077                     lcd_data@data:	
   420                           ; 1 bytes @ 0x7
   421                           
   422                           
   423                           ; 1 bytes @ 0x7
   424  0077                     	ds	1
   425  0078                     ??_lcd_init:	
   426  0078                     ?_uart_lcd_update:	
   427                           ; 0 bytes @ 0x8
   428                           
   429  0078                     ??___lwdiv:	
   430                           ; 0 bytes @ 0x8
   431                           
   432  0078                     uart_lcd_update@len:	
   433                           ; 0 bytes @ 0x8
   434                           
   435                           
   436                           ; 1 bytes @ 0x8
   437  0078                     	ds	1
   438                           
   439                           	psect	cstackBANK0
   440  0020                     __pcstackBANK0:	
   441  0020                     delay@i:	
   442  0020                     ___lwdiv@quotient:	
   443                           ; 2 bytes @ 0x0
   444                           
   445                           
   446                           ; 2 bytes @ 0x0
   447  0020                     	ds	2
   448  0022                     ___lwdiv@counter:	
   449  0022                     delay@j:	
   450                           ; 1 bytes @ 0x2
   451                           
   452                           
   453                           ; 2 bytes @ 0x2
   454  0022                     	ds	1
   455  0023                     ?___lwmod:	
   456  0023                     ___lwmod@divisor:	
   457                           ; 2 bytes @ 0x3
   458                           
   459                           
   460                           ; 2 bytes @ 0x3
   461  0023                     	ds	1
   462  0024                     ??_uart_lcd_update:	
   463                           
   464                           ; 0 bytes @ 0x4
   465  0024                     	ds	1
   466  0025                     uart_lcd_update@data:	
   467  0025                     ___lwmod@dividend:	
   468                           ; 1 bytes @ 0x5
   469                           
   470                           
   471                           ; 2 bytes @ 0x5
   472  0025                     	ds	1
   473  0026                     uart_lcd_update@i:	
   474                           
   475                           ; 2 bytes @ 0x6
   476  0026                     	ds	1
   477  0027                     ??___lwmod:	
   478                           
   479                           ; 0 bytes @ 0x7
   480  0027                     	ds	1
   481  0028                     ___lwmod@counter:	
   482                           
   483                           ; 1 bytes @ 0x8
   484  0028                     	ds	1
   485  0029                     ?_sprintf:	
   486  0029                     sprintf@f:	
   487                           ; 2 bytes @ 0x9
   488                           
   489                           
   490                           ; 1 bytes @ 0x9
   491  0029                     	ds	13
   492  0036                     ??_sprintf:	
   493                           
   494                           ; 0 bytes @ 0x16
   495  0036                     	ds	3
   496  0039                     sprintf@ap:	
   497                           
   498                           ; 1 bytes @ 0x19
   499  0039                     	ds	1
   500  003A                     sprintf@flag:	
   501                           
   502                           ; 1 bytes @ 0x1A
   503  003A                     	ds	1
   504  003B                     sprintf@prec:	
   505                           
   506                           ; 1 bytes @ 0x1B
   507  003B                     	ds	1
   508  003C                     sprintf@_val:	
   509                           
   510                           ; 4 bytes @ 0x1C
   511  003C                     	ds	4
   512  0040                     sprintf@sp:	
   513                           
   514                           ; 1 bytes @ 0x20
   515  0040                     	ds	1
   516  0041                     sprintf@c:	
   517                           
   518                           ; 1 bytes @ 0x21
   519  0041                     	ds	1
   520  0042                     ??_main:	
   521                           
   522                           ; 0 bytes @ 0x22
   523  0042                     	ds	13
   524  004F                     main@i:	
   525                           
   526                           ; 2 bytes @ 0x2F
   527  004F                     	ds	2
   528                           
   529                           	psect	maintext
   530  0029                     __pmaintext:	
   531 ;;
   532 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
   533 ;;
   534 ;; *************** function _main *****************
   535 ;; Defined at:
   536 ;;		line 21 in file "i2c_driver.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;  i               2   47[BANK0 ] int 
   541 ;; Return value:  Size  Location     Type
   542 ;;		None               void
   543 ;; Registers used:
   544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : 17F/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   550 ;;      Params:         0       0       0       0       0
   551 ;;      Locals:         0       2       0       0       0
   552 ;;      Temps:          0      13       0       0       0
   553 ;;      Totals:         0      15       0       0       0
   554 ;;Total ram usage:       15 bytes
   555 ;; Hardware stack levels required when called:    4
   556 ;; This function calls:
   557 ;;		_i2c_master_init
   558 ;;		_int2char
   559 ;;		_lcd_cmnt
   560 ;;		_lcd_init
   561 ;;		_master_rx
   562 ;;		_master_tx
   563 ;;		_sprintf
   564 ;;		_uart_lcd_update
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _main
   572  0029                     _main:	
   573                           
   574                           ;i2c_driver.c: 25: TRISD=0X00;
   575                           
   576                           ;incstack = 0
   577                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   578  0029  1683               	bsf	3,5	;RP0=1, select bank1
   579  002A  1303               	bcf	3,6	;RP1=0, select bank1
   580  002B  0188               	clrf	8	;volatile
   581                           
   582                           ;i2c_driver.c: 26: TRISE=0X00;
   583  002C  0189               	clrf	9	;volatile
   584                           
   585                           ;i2c_driver.c: 27: TRISB=0X01;
   586  002D  3001               	movlw	1
   587  002E  0086               	movwf	6	;volatile
   588                           
   589                           ;i2c_driver.c: 28: PORTD=0X00;
   590  002F  1283               	bcf	3,5	;RP0=0, select bank0
   591  0030  1303               	bcf	3,6	;RP1=0, select bank0
   592  0031  0188               	clrf	8	;volatile
   593                           
   594                           ;i2c_driver.c: 32: i2c_pkt.address=0x68;
   595  0032  3068               	movlw	104
   596  0033  00C2               	movwf	??_main
   597  0034  0842               	movf	??_main,w
   598  0035  00E5               	movwf	_i2c_pkt
   599                           
   600                           ;i2c_driver.c: 33: i2c_pkt.data=0x00;
   601  0036  01E6               	clrf	_i2c_pkt+1
   602                           
   603                           ;i2c_driver.c: 34: i2c_pkt.ack =0;
   604  0037  01E7               	clrf	_i2c_pkt+2
   605                           
   606                           ;i2c_driver.c: 36: lcd_init();
   607  0038  120A  118A  23CB  120A  118A  	fcall	_lcd_init
   608                           
   609                           ;i2c_driver.c: 37: i2c_master_init();
   610  003D  120A  118A  2428  120A  118A  	fcall	_i2c_master_init
   611  0042                     l1411:	
   612                           ;i2c_driver.c: 39: while(1)
   613                           
   614                           
   615                           ;i2c_driver.c: 40: {
   616                           ;i2c_driver.c: 41: int i;
   617                           ;i2c_driver.c: 44: {
   618                           ;i2c_driver.c: 45: master_tx(&i2c_pkt);
   619  0042  3065               	movlw	_i2c_pkt& (0+255)
   620  0043  120A  118A  22C3  120A  118A  	fcall	_master_tx
   621                           
   622                           ;i2c_driver.c: 46: for(i=0,timer=(int_u8 *)&local_time;i<7;i++,timer++)
   623  0048  1283               	bcf	3,5	;RP0=0, select bank0
   624  0049  1303               	bcf	3,6	;RP1=0, select bank0
   625  004A  01CF               	clrf	main@i
   626  004B  01D0               	clrf	main@i+1
   627  004C  3052               	movlw	_local_time& (0+255)
   628  004D  00C2               	movwf	??_main
   629  004E  0842               	movf	??_main,w
   630  004F  00D1               	movwf	_timer
   631  0050  0850               	movf	main@i+1,w
   632  0051  3A80               	xorlw	128
   633  0052  00FF               	movwf	127
   634  0053  3080               	movlw	128
   635  0054  027F               	subwf	127,w
   636  0055  1D03               	skipz
   637  0056  2859               	goto	u945
   638  0057  3007               	movlw	7
   639  0058  024F               	subwf	main@i,w
   640  0059                     u945:	
   641  0059  1803               	btfsc	3,0
   642  005A  287E               	goto	l1429
   643  005B                     l1421:	
   644                           
   645                           ;i2c_driver.c: 47: master_rx(&i2c_pkt,timer);
   646  005B  1283               	bcf	3,5	;RP0=0, select bank0
   647  005C  1303               	bcf	3,6	;RP1=0, select bank0
   648  005D  0851               	movf	_timer,w
   649  005E  00C2               	movwf	??_main
   650  005F  0842               	movf	??_main,w
   651  0060  00F4               	movwf	master_rx@rx_time
   652  0061  3065               	movlw	_i2c_pkt& (0+255)
   653  0062  120A  118A  2232  120A  118A  	fcall	_master_rx
   654  0067  3001               	movlw	1
   655  0068  1283               	bcf	3,5	;RP0=0, select bank0
   656  0069  1303               	bcf	3,6	;RP1=0, select bank0
   657  006A  07CF               	addwf	main@i,f
   658  006B  1803               	skipnc
   659  006C  0AD0               	incf	main@i+1,f
   660  006D  3000               	movlw	0
   661  006E  07D0               	addwf	main@i+1,f
   662  006F  3001               	movlw	1
   663  0070  00C2               	movwf	??_main
   664  0071  0842               	movf	??_main,w
   665  0072  07D1               	addwf	_timer,f
   666  0073  0850               	movf	main@i+1,w
   667  0074  3A80               	xorlw	128
   668  0075  00FF               	movwf	127
   669  0076  3080               	movlw	128
   670  0077  027F               	subwf	127,w
   671  0078  1D03               	skipz
   672  0079  287C               	goto	u955
   673  007A  3007               	movlw	7
   674  007B  024F               	subwf	main@i,w
   675  007C                     u955:	
   676  007C  1C03               	skipc
   677  007D  285B               	goto	l1421
   678  007E                     l1429:	
   679                           
   680                           ;i2c_driver.c: 50: int2char(local_time.HH,hour);
   681  007E  305B               	movlw	_hour& (0+255)
   682  007F  1283               	bcf	3,5	;RP0=0, select bank0
   683  0080  1303               	bcf	3,6	;RP1=0, select bank0
   684  0081  00C2               	movwf	??_main
   685  0082  0842               	movf	??_main,w
   686  0083  00F4               	movwf	int2char@out
   687  0084  0854               	movf	_local_time+2,w
   688  0085  120A  118A  23EC  120A  118A  	fcall	_int2char
   689                           
   690                           ;i2c_driver.c: 51: int2char(local_time.MM,min);
   691  008A  305D               	movlw	_min& (0+255)
   692  008B  1283               	bcf	3,5	;RP0=0, select bank0
   693  008C  1303               	bcf	3,6	;RP1=0, select bank0
   694  008D  00C2               	movwf	??_main
   695  008E  0842               	movf	??_main,w
   696  008F  00F4               	movwf	int2char@out
   697  0090  0853               	movf	_local_time+1,w
   698  0091  120A  118A  23EC  120A  118A  	fcall	_int2char
   699                           
   700                           ;i2c_driver.c: 52: int2char(local_time.SS,sec);
   701  0096  3061               	movlw	_sec& (0+255)
   702  0097  1283               	bcf	3,5	;RP0=0, select bank0
   703  0098  1303               	bcf	3,6	;RP1=0, select bank0
   704  0099  00C2               	movwf	??_main
   705  009A  0842               	movf	??_main,w
   706  009B  00F4               	movwf	int2char@out
   707  009C  0852               	movf	_local_time,w
   708  009D  120A  118A  23EC  120A  118A  	fcall	_int2char
   709                           
   710                           ;i2c_driver.c: 54: sprintf(lcd_msg,"Time: %d%d-%d%d-%d%d",hour[1],hour[0],min[1],min[0],
      +                          sec[1],sec[0]);
   711  00A2  300B               	movlw	(STR_1-__stringbase)& (0+255)
   712  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   713  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   714  00A5  00C2               	movwf	??_main
   715  00A6  0842               	movf	??_main,w
   716  00A7  00A9               	movwf	sprintf@f
   717  00A8  085C               	movf	_hour+1,w
   718  00A9  00C3               	movwf	??_main+1
   719  00AA  01C4               	clrf	??_main+2
   720  00AB  0843               	movf	??_main+1,w
   721  00AC  00AA               	movwf	?_sprintf+1
   722  00AD  0844               	movf	??_main+2,w
   723  00AE  00AB               	movwf	?_sprintf+2
   724  00AF  085B               	movf	_hour,w
   725  00B0  00C5               	movwf	??_main+3
   726  00B1  01C6               	clrf	??_main+4
   727  00B2  0845               	movf	??_main+3,w
   728  00B3  00AC               	movwf	?_sprintf+3
   729  00B4  0846               	movf	??_main+4,w
   730  00B5  00AD               	movwf	?_sprintf+4
   731  00B6  085E               	movf	_min+1,w
   732  00B7  00C7               	movwf	??_main+5
   733  00B8  01C8               	clrf	??_main+6
   734  00B9  0847               	movf	??_main+5,w
   735  00BA  00AE               	movwf	?_sprintf+5
   736  00BB  0848               	movf	??_main+6,w
   737  00BC  00AF               	movwf	?_sprintf+6
   738  00BD  085D               	movf	_min,w
   739  00BE  00C9               	movwf	??_main+7
   740  00BF  01CA               	clrf	??_main+8
   741  00C0  0849               	movf	??_main+7,w
   742  00C1  00B0               	movwf	?_sprintf+7
   743  00C2  084A               	movf	??_main+8,w
   744  00C3  00B1               	movwf	?_sprintf+8
   745  00C4  0862               	movf	_sec+1,w
   746  00C5  00CB               	movwf	??_main+9
   747  00C6  01CC               	clrf	??_main+10
   748  00C7  084B               	movf	??_main+9,w
   749  00C8  00B2               	movwf	?_sprintf+9
   750  00C9  084C               	movf	??_main+10,w
   751  00CA  00B3               	movwf	?_sprintf+10
   752  00CB  0861               	movf	_sec,w
   753  00CC  00CD               	movwf	??_main+11
   754  00CD  01CE               	clrf	??_main+12
   755  00CE  084D               	movf	??_main+11,w
   756  00CF  00B4               	movwf	?_sprintf+11
   757  00D0  084E               	movf	??_main+12,w
   758  00D1  00B5               	movwf	?_sprintf+12
   759  00D2  30A0               	movlw	_lcd_msg& (0+255)
   760  00D3  120A  118A  2157  120A  118A  	fcall	_sprintf
   761                           
   762                           ;i2c_driver.c: 55: lcd_cmnt(0x80);
   763  00D8  3080               	movlw	128
   764  00D9  120A  118A  2416  120A  118A  	fcall	_lcd_cmnt
   765                           
   766                           ;i2c_driver.c: 56: uart_lcd_update(lcd_msg,sizeof(lcd_msg));
   767  00DE  3010               	movlw	16
   768  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   769  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   770  00E1  00C2               	movwf	??_main
   771  00E2  0842               	movf	??_main,w
   772  00E3  00F8               	movwf	uart_lcd_update@len
   773  00E4  30A0               	movlw	_lcd_msg& (0+255)
   774  00E5  120A  118A  23A4  120A  118A  	fcall	_uart_lcd_update
   775                           
   776                           ;i2c_driver.c: 57: int2char(local_time.date,date);
   777  00EA  3059               	movlw	_date& (0+255)
   778  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   779  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   780  00ED  00C2               	movwf	??_main
   781  00EE  0842               	movf	??_main,w
   782  00EF  00F4               	movwf	int2char@out
   783  00F0  0856               	movf	_local_time+4,w
   784  00F1  120A  118A  23EC  120A  118A  	fcall	_int2char
   785                           
   786                           ;i2c_driver.c: 58: int2char(local_time.month,month);
   787  00F6  305F               	movlw	_month& (0+255)
   788  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   789  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   790  00F9  00C2               	movwf	??_main
   791  00FA  0842               	movf	??_main,w
   792  00FB  00F4               	movwf	int2char@out
   793  00FC  0857               	movf	_local_time+5,w
   794  00FD  120A  118A  23EC  120A  118A  	fcall	_int2char
   795                           
   796                           ;i2c_driver.c: 59: int2char(local_time.year,year);
   797  0102  3063               	movlw	_year& (0+255)
   798  0103  1283               	bcf	3,5	;RP0=0, select bank0
   799  0104  1303               	bcf	3,6	;RP1=0, select bank0
   800  0105  00C2               	movwf	??_main
   801  0106  0842               	movf	??_main,w
   802  0107  00F4               	movwf	int2char@out
   803  0108  0858               	movf	_local_time+6,w
   804  0109  120A  118A  23EC  120A  118A  	fcall	_int2char
   805                           
   806                           ;i2c_driver.c: 60: sprintf(lcd_msg1,"Date: %d%d-%d%d-%d%d",date[1],date[0],month[1],mont
      +                          h[0],year[1],year[0]);
   807  010E  3020               	movlw	(STR_2-__stringbase)& (0+255)
   808  010F  1283               	bcf	3,5	;RP0=0, select bank0
   809  0110  1303               	bcf	3,6	;RP1=0, select bank0
   810  0111  00C2               	movwf	??_main
   811  0112  0842               	movf	??_main,w
   812  0113  00A9               	movwf	sprintf@f
   813  0114  085A               	movf	_date+1,w
   814  0115  00C3               	movwf	??_main+1
   815  0116  01C4               	clrf	??_main+2
   816  0117  0843               	movf	??_main+1,w
   817  0118  00AA               	movwf	?_sprintf+1
   818  0119  0844               	movf	??_main+2,w
   819  011A  00AB               	movwf	?_sprintf+2
   820  011B  0859               	movf	_date,w
   821  011C  00C5               	movwf	??_main+3
   822  011D  01C6               	clrf	??_main+4
   823  011E  0845               	movf	??_main+3,w
   824  011F  00AC               	movwf	?_sprintf+3
   825  0120  0846               	movf	??_main+4,w
   826  0121  00AD               	movwf	?_sprintf+4
   827  0122  0860               	movf	_month+1,w
   828  0123  00C7               	movwf	??_main+5
   829  0124  01C8               	clrf	??_main+6
   830  0125  0847               	movf	??_main+5,w
   831  0126  00AE               	movwf	?_sprintf+5
   832  0127  0848               	movf	??_main+6,w
   833  0128  00AF               	movwf	?_sprintf+6
   834  0129  085F               	movf	_month,w
   835  012A  00C9               	movwf	??_main+7
   836  012B  01CA               	clrf	??_main+8
   837  012C  0849               	movf	??_main+7,w
   838  012D  00B0               	movwf	?_sprintf+7
   839  012E  084A               	movf	??_main+8,w
   840  012F  00B1               	movwf	?_sprintf+8
   841  0130  0864               	movf	_year+1,w
   842  0131  00CB               	movwf	??_main+9
   843  0132  01CC               	clrf	??_main+10
   844  0133  084B               	movf	??_main+9,w
   845  0134  00B2               	movwf	?_sprintf+9
   846  0135  084C               	movf	??_main+10,w
   847  0136  00B3               	movwf	?_sprintf+10
   848  0137  0863               	movf	_year,w
   849  0138  00CD               	movwf	??_main+11
   850  0139  01CE               	clrf	??_main+12
   851  013A  084D               	movf	??_main+11,w
   852  013B  00B4               	movwf	?_sprintf+11
   853  013C  084E               	movf	??_main+12,w
   854  013D  00B5               	movwf	?_sprintf+12
   855  013E  30B0               	movlw	_lcd_msg1& (0+255)
   856  013F  120A  118A  2157  120A  118A  	fcall	_sprintf
   857                           
   858                           ;i2c_driver.c: 61: lcd_cmnt(0xC0);
   859  0144  30C0               	movlw	192
   860  0145  120A  118A  2416  120A  118A  	fcall	_lcd_cmnt
   861                           
   862                           ;i2c_driver.c: 62: uart_lcd_update(lcd_msg1,sizeof(lcd_msg1));
   863  014A  3010               	movlw	16
   864  014B  1283               	bcf	3,5	;RP0=0, select bank0
   865  014C  1303               	bcf	3,6	;RP1=0, select bank0
   866  014D  00C2               	movwf	??_main
   867  014E  0842               	movf	??_main,w
   868  014F  00F8               	movwf	uart_lcd_update@len
   869  0150  30B0               	movlw	_lcd_msg1& (0+255)
   870  0151  120A  118A  23A4  120A  118A  	fcall	_uart_lcd_update
   871  0156  2842               	goto	l1411
   872  0157                     __end_of_main:	
   873                           
   874                           	psect	text1
   875  03A4                     __ptext1:	
   876 ;; *************** function _uart_lcd_update *****************
   877 ;; Defined at:
   878 ;;		line 43 in file "lcd_driver.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  data            1    wreg     PTR unsigned char 
   881 ;;		 -> lcd_msg1(16), lcd_msg(16), 
   882 ;;  len             1    8[COMMON] unsigned char 
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  data            1    5[BANK0 ] PTR unsigned char 
   885 ;;		 -> lcd_msg1(16), lcd_msg(16), 
   886 ;;  i               2    6[BANK0 ] int 
   887 ;; Return value:  Size  Location     Type
   888 ;;		None               void
   889 ;; Registers used:
   890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   896 ;;      Params:         1       0       0       0       0
   897 ;;      Locals:         0       3       0       0       0
   898 ;;      Temps:          0       1       0       0       0
   899 ;;      Totals:         1       4       0       0       0
   900 ;;Total ram usage:        5 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    3
   903 ;; This function calls:
   904 ;;		_lcd_data
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           
   911                           ;psect for function _uart_lcd_update
   912  03A4                     _uart_lcd_update:	
   913                           
   914                           ;incstack = 0
   915                           ; Regs used in _uart_lcd_update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   916                           ;uart_lcd_update@data stored from wreg
   917  03A4  1283               	bcf	3,5	;RP0=0, select bank0
   918  03A5  1303               	bcf	3,6	;RP1=0, select bank0
   919  03A6  00A5               	movwf	uart_lcd_update@data
   920                           
   921                           ;lcd_driver.c: 46: for(i=0;i<len;i++)
   922  03A7  01A6               	clrf	uart_lcd_update@i
   923  03A8  01A7               	clrf	uart_lcd_update@i+1
   924  03A9                     l1395:	
   925  03A9  0827               	movf	uart_lcd_update@i+1,w
   926  03AA  3A80               	xorlw	128
   927  03AB  00A4               	movwf	??_uart_lcd_update
   928  03AC  3080               	movlw	128
   929  03AD  0224               	subwf	??_uart_lcd_update,w
   930  03AE  1D03               	skipz
   931  03AF  2BB2               	goto	u935
   932  03B0  0878               	movf	uart_lcd_update@len,w
   933  03B1  0226               	subwf	uart_lcd_update@i,w
   934  03B2                     u935:	
   935  03B2  1803               	btfsc	3,0
   936  03B3  0008               	return
   937                           
   938                           ;lcd_driver.c: 47: {
   939                           ;lcd_driver.c: 48: lcd_data(*(data+i));
   940  03B4  1283               	bcf	3,5	;RP0=0, select bank0
   941  03B5  1303               	bcf	3,6	;RP1=0, select bank0
   942  03B6  0826               	movf	uart_lcd_update@i,w
   943  03B7  0725               	addwf	uart_lcd_update@data,w
   944  03B8  00A4               	movwf	??_uart_lcd_update
   945  03B9  0824               	movf	??_uart_lcd_update,w
   946  03BA  0084               	movwf	4
   947  03BB  1383               	bcf	3,7	;select IRP bank0
   948  03BC  0800               	movf	0,w
   949  03BD  120A  118A  2404  120A  118A  	fcall	_lcd_data
   950  03C2  3001               	movlw	1
   951  03C3  1283               	bcf	3,5	;RP0=0, select bank0
   952  03C4  1303               	bcf	3,6	;RP1=0, select bank0
   953  03C5  07A6               	addwf	uart_lcd_update@i,f
   954  03C6  1803               	skipnc
   955  03C7  0AA7               	incf	uart_lcd_update@i+1,f
   956  03C8  3000               	movlw	0
   957  03C9  07A7               	addwf	uart_lcd_update@i+1,f
   958  03CA  2BA9               	goto	l1395
   959  03CB                     __end_of_uart_lcd_update:	
   960                           
   961                           	psect	text2
   962  0404                     __ptext2:	
   963 ;; *************** function _lcd_data *****************
   964 ;; Defined at:
   965 ;;		line 35 in file "lcd_driver.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  data            1    wreg     unsigned char 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  data            1    7[COMMON] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;		None               void
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0, pclath, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   979 ;;      Params:         0       0       0       0       0
   980 ;;      Locals:         1       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0
   982 ;;      Totals:         1       0       0       0       0
   983 ;;Total ram usage:        1 bytes
   984 ;; Hardware stack levels used:    1
   985 ;; Hardware stack levels required when called:    2
   986 ;; This function calls:
   987 ;;		_delay
   988 ;; This function is called by:
   989 ;;		_uart_lcd_update
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           
   994                           ;psect for function _lcd_data
   995  0404                     _lcd_data:	
   996                           
   997                           ;incstack = 0
   998                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
   999                           ;lcd_data@data stored from wreg
  1000  0404  00F7               	movwf	lcd_data@data
  1001                           
  1002                           ;lcd_driver.c: 37: PORTD=data;
  1003  0405  0877               	movf	lcd_data@data,w
  1004  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0408  0088               	movwf	8	;volatile
  1007                           
  1008                           ;lcd_driver.c: 38: RE0=1;
  1009  0409  1409               	bsf	9,0	;volatile
  1010                           
  1011                           ;lcd_driver.c: 39: RE1=1;delay(10);RE1=0;;
  1012  040A  1489               	bsf	9,1	;volatile
  1013  040B  300A               	movlw	10
  1014  040C  00F4               	movwf	delay@x
  1015  040D  3000               	movlw	0
  1016  040E  00F5               	movwf	delay@x+1
  1017  040F  120A  118A  2372   	fcall	_delay
  1018  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0414  1089               	bcf	9,1	;volatile
  1021  0415  0008               	return
  1022  0416                     __end_of_lcd_data:	
  1023                           
  1024                           	psect	text3
  1025  0157                     __ptext3:	
  1026 ;; *************** function _sprintf *****************
  1027 ;; Defined at:
  1028 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  sp              1    wreg     PTR unsigned char 
  1031 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1032 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1033 ;;		 -> STR_2(21), STR_1(21), 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  1036 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1037 ;;  _val            4   28[BANK0 ] struct .
  1038 ;;  c               1   33[BANK0 ] char 
  1039 ;;  prec            1   27[BANK0 ] char 
  1040 ;;  flag            1   26[BANK0 ] unsigned char 
  1041 ;;  ap              1   25[BANK0 ] PTR void [1]
  1042 ;;		 -> ?_sprintf(2), 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2    9[BANK0 ] int 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0      13       0       0       0
  1053 ;;      Locals:         0       9       0       0       0
  1054 ;;      Temps:          0       3       0       0       0
  1055 ;;      Totals:         0      25       0       0       0
  1056 ;;Total ram usage:       25 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    2
  1059 ;; This function calls:
  1060 ;;		___lwdiv
  1061 ;;		___lwmod
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _sprintf
  1069  0157                     _sprintf:	
  1070                           
  1071                           ;incstack = 0
  1072                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1073                           ;sprintf@sp stored from wreg
  1074  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0159  00C0               	movwf	sprintf@sp
  1077                           
  1078                           ;doprnt.c: 494: va_list ap;
  1079                           ;doprnt.c: 499: signed char c;
  1080                           ;doprnt.c: 506: signed char prec;
  1081                           ;doprnt.c: 508: unsigned char flag;
  1082                           ;doprnt.c: 527: union {
  1083                           ;doprnt.c: 528: unsigned int _val;
  1084                           ;doprnt.c: 529: struct {
  1085                           ;doprnt.c: 530: const char * _cp;
  1086                           ;doprnt.c: 531: unsigned _len;
  1087                           ;doprnt.c: 532: } _str;
  1088                           ;doprnt.c: 533: } _val;
  1089                           ;doprnt.c: 542: *ap = __va_start();
  1090  015A  302A               	movlw	(?_sprintf+1)& (0+255)
  1091  015B  00B6               	movwf	??_sprintf
  1092  015C  0836               	movf	??_sprintf,w
  1093  015D  00B9               	movwf	sprintf@ap
  1094  015E                     l1383:	
  1095                           ;doprnt.c: 545: while(c = *f++) {
  1096                           
  1097  015E  3001               	movlw	1
  1098  015F  07A9               	addwf	sprintf@f,f
  1099  0160  30FF               	movlw	-1
  1100  0161  0729               	addwf	sprintf@f,w
  1101  0162  0084               	movwf	4
  1102  0163  120A  118A  2302  120A  118A  	fcall	stringdir
  1103  0168  00B6               	movwf	??_sprintf
  1104  0169  0836               	movf	??_sprintf,w
  1105  016A  00C1               	movwf	sprintf@c
  1106  016B  08C1               	movf	sprintf@c,f
  1107  016C  1903               	btfsc	3,2
  1108  016D  2A2D               	goto	l1385
  1109                           
  1110                           ;doprnt.c: 547: if(c != '%')
  1111  016E  0841               	movf	sprintf@c,w
  1112  016F  3A25               	xorlw	37
  1113  0170  1903               	skipnz
  1114  0171  297E               	goto	l1339
  1115                           
  1116                           ;doprnt.c: 549: {
  1117                           ;doprnt.c: 550: ((*sp++ = (c)));
  1118  0172  0841               	movf	sprintf@c,w
  1119  0173  00B6               	movwf	??_sprintf
  1120  0174  0840               	movf	sprintf@sp,w
  1121  0175  0084               	movwf	4
  1122  0176  0836               	movf	??_sprintf,w
  1123  0177  1383               	bcf	3,7	;select IRP bank0
  1124  0178  0080               	movwf	0
  1125  0179  3001               	movlw	1
  1126  017A  00B6               	movwf	??_sprintf
  1127  017B  0836               	movf	??_sprintf,w
  1128  017C  07C0               	addwf	sprintf@sp,f
  1129                           
  1130                           ;doprnt.c: 551: continue;
  1131  017D  295E               	goto	l1383
  1132  017E                     l1339:	
  1133                           
  1134                           ;doprnt.c: 552: }
  1135                           ;doprnt.c: 557: flag = 0;
  1136  017E  01BA               	clrf	sprintf@flag
  1137                           
  1138                           ;doprnt.c: 831: }
  1139                           
  1140                           ;doprnt.c: 822: continue;
  1141                           
  1142                           ;doprnt.c: 811: default:
  1143                           
  1144                           ;doprnt.c: 707: case 'i':
  1145                           ;doprnt.c: 708: break;
  1146                           
  1147                           ;doprnt.c: 706: case 'd':
  1148                           
  1149                           ;doprnt.c: 647: goto alldone;
  1150                           
  1151                           ;doprnt.c: 646: case 0:
  1152                           
  1153                           ;doprnt.c: 644: switch(c = *f++) {
  1154  017F  3001               	movlw	1
  1155  0180  07A9               	addwf	sprintf@f,f
  1156  0181  30FF               	movlw	-1
  1157  0182  0729               	addwf	sprintf@f,w
  1158  0183  0084               	movwf	4
  1159  0184  120A  118A  2302  120A  118A  	fcall	stringdir
  1160  0189  00C1               	movwf	sprintf@c
  1161                           
  1162                           ; Switch size 1, requested type "space"
  1163                           ; Number of cases is 3, Range of values is 0 to 105
  1164                           ; switch strategies available:
  1165                           ; Name         Instructions Cycles
  1166                           ; simple_byte           10     6 (average)
  1167                           ; jumptable            260     6 (fixed)
  1168                           ;	Chosen strategy is simple_byte
  1169  018A  3A00               	xorlw	0	; case 0
  1170  018B  1903               	skipnz
  1171  018C  2A2D               	goto	l1385
  1172  018D  3A64               	xorlw	100	; case 100
  1173  018E  1903               	skipnz
  1174  018F  2994               	goto	l1345
  1175  0190  3A0D               	xorlw	13	; case 105
  1176  0191  1903               	skipnz
  1177  0192  2994               	goto	l1345
  1178  0193  295E               	goto	l1383
  1179  0194                     l1345:	
  1180                           
  1181                           ;doprnt.c: 1262: {
  1182                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1183  0194  0839               	movf	sprintf@ap,w
  1184  0195  0084               	movwf	4
  1185  0196  1383               	bcf	3,7	;select IRP bank0
  1186  0197  0800               	movf	0,w
  1187  0198  00BC               	movwf	sprintf@_val
  1188  0199  0A84               	incf	4,f
  1189  019A  0800               	movf	0,w
  1190  019B  00BD               	movwf	sprintf@_val+1
  1191  019C  3002               	movlw	2
  1192  019D  00B6               	movwf	??_sprintf
  1193  019E  0836               	movf	??_sprintf,w
  1194  019F  07B9               	addwf	sprintf@ap,f
  1195                           
  1196                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  1197  01A0  1FBD               	btfss	sprintf@_val+1,7
  1198  01A1  29AB               	goto	l1355
  1199                           
  1200                           ;doprnt.c: 1271: flag |= 0x03;
  1201  01A2  3003               	movlw	3
  1202  01A3  00B6               	movwf	??_sprintf
  1203  01A4  0836               	movf	??_sprintf,w
  1204  01A5  04BA               	iorwf	sprintf@flag,f
  1205                           
  1206                           ;doprnt.c: 1272: _val._val = -_val._val;
  1207  01A6  09BC               	comf	sprintf@_val,f
  1208  01A7  09BD               	comf	sprintf@_val+1,f
  1209  01A8  0ABC               	incf	sprintf@_val,f
  1210  01A9  1903               	skipnz
  1211  01AA  0ABD               	incf	sprintf@_val+1,f
  1212  01AB                     l1355:	
  1213                           
  1214                           ;doprnt.c: 1273: }
  1215                           ;doprnt.c: 1275: }
  1216                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1217  01AB  01C1               	clrf	sprintf@c
  1218  01AC  0AC1               	incf	sprintf@c,f
  1219  01AD  0841               	movf	sprintf@c,w
  1220  01AE  3A05               	xorlw	5
  1221  01AF  1903               	btfsc	3,2
  1222  01B0  29D2               	goto	l1367
  1223  01B1                     l1359:	
  1224                           
  1225                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1226  01B1  0841               	movf	sprintf@c,w
  1227  01B2  00B6               	movwf	??_sprintf
  1228  01B3  0736               	addwf	??_sprintf,w
  1229  01B4  3E01               	addlw	low (_dpowers-__stringbase)
  1230  01B5  0084               	movwf	4
  1231  01B6  120A  118A  2302  120A  118A  	fcall	stringdir
  1232  01BB  00B7               	movwf	??_sprintf+1
  1233  01BC  120A  118A  2302  120A  118A  	fcall	stringdir
  1234  01C1  00B8               	movwf	??_sprintf+2
  1235  01C2  0838               	movf	??_sprintf+2,w
  1236  01C3  023D               	subwf	sprintf@_val+1,w
  1237  01C4  1D03               	skipz
  1238  01C5  29C8               	goto	u885
  1239  01C6  0837               	movf	??_sprintf+1,w
  1240  01C7  023C               	subwf	sprintf@_val,w
  1241  01C8                     u885:	
  1242  01C8  1C03               	btfss	3,0
  1243  01C9  29D2               	goto	l1367
  1244                           
  1245                           ;doprnt.c: 1316: break;
  1246  01CA  3001               	movlw	1
  1247  01CB  00B6               	movwf	??_sprintf
  1248  01CC  0836               	movf	??_sprintf,w
  1249  01CD  07C1               	addwf	sprintf@c,f
  1250  01CE  0841               	movf	sprintf@c,w
  1251  01CF  3A05               	xorlw	5
  1252  01D0  1D03               	skipz
  1253  01D1  29B1               	goto	l1359
  1254  01D2                     l1367:	
  1255                           
  1256                           ;doprnt.c: 1431: {
  1257                           ;doprnt.c: 1447: if(flag & 0x03)
  1258  01D2  083A               	movf	sprintf@flag,w
  1259  01D3  3903               	andlw	3
  1260  01D4  1903               	btfsc	3,2
  1261  01D5  29E1               	goto	l1373
  1262                           
  1263                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  1264  01D6  302D               	movlw	45
  1265  01D7  00B6               	movwf	??_sprintf
  1266  01D8  0840               	movf	sprintf@sp,w
  1267  01D9  0084               	movwf	4
  1268  01DA  0836               	movf	??_sprintf,w
  1269  01DB  1383               	bcf	3,7	;select IRP bank0
  1270  01DC  0080               	movwf	0
  1271  01DD  3001               	movlw	1
  1272  01DE  00B6               	movwf	??_sprintf
  1273  01DF  0836               	movf	??_sprintf,w
  1274  01E0  07C0               	addwf	sprintf@sp,f
  1275  01E1                     l1373:	
  1276                           
  1277                           ;doprnt.c: 1478: }
  1278                           ;doprnt.c: 1481: prec = c;
  1279  01E1  0841               	movf	sprintf@c,w
  1280  01E2  00B6               	movwf	??_sprintf
  1281  01E3  0836               	movf	??_sprintf,w
  1282  01E4  00BB               	movwf	sprintf@prec
  1283  01E5                     l1381:	
  1284                           ;doprnt.c: 1483: while(prec--) {
  1285                           
  1286  01E5  30FF               	movlw	-1
  1287  01E6  00B6               	movwf	??_sprintf
  1288  01E7  0836               	movf	??_sprintf,w
  1289  01E8  07BB               	addwf	sprintf@prec,f
  1290  01E9  083B               	movf	sprintf@prec,w
  1291  01EA  3AFF               	xorlw	-1
  1292  01EB  1903               	btfsc	3,2
  1293  01EC  295E               	goto	l1383
  1294                           
  1295                           ;doprnt.c: 1487: {
  1296                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  1297  01ED  300A               	movlw	10
  1298  01EE  00A3               	movwf	___lwmod@divisor
  1299  01EF  3000               	movlw	0
  1300  01F0  00A4               	movwf	___lwmod@divisor+1
  1301  01F1  083B               	movf	sprintf@prec,w
  1302  01F2  00B6               	movwf	??_sprintf
  1303  01F3  0736               	addwf	??_sprintf,w
  1304  01F4  3E01               	addlw	low (_dpowers-__stringbase)
  1305  01F5  0084               	movwf	4
  1306  01F6  120A  118A  2302  120A  118A  	fcall	stringdir
  1307  01FB  00F4               	movwf	___lwdiv@divisor
  1308  01FC  120A  118A  2302  120A  118A  	fcall	stringdir
  1309  0201  00F5               	movwf	___lwdiv@divisor+1
  1310  0202  083D               	movf	sprintf@_val+1,w
  1311  0203  01F7               	clrf	___lwdiv@dividend+1
  1312  0204  07F7               	addwf	___lwdiv@dividend+1,f
  1313  0205  083C               	movf	sprintf@_val,w
  1314  0206  01F6               	clrf	___lwdiv@dividend
  1315  0207  07F6               	addwf	___lwdiv@dividend,f
  1316  0208  120A  118A  2283  120A  118A  	fcall	___lwdiv
  1317  020D  0875               	movf	?___lwdiv+1,w
  1318  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1319  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0210  01A6               	clrf	___lwmod@dividend+1
  1321  0211  07A6               	addwf	___lwmod@dividend+1,f
  1322  0212  0874               	movf	?___lwdiv,w
  1323  0213  01A5               	clrf	___lwmod@dividend
  1324  0214  07A5               	addwf	___lwmod@dividend,f
  1325  0215  120A  118A  233C  120A  118A  	fcall	___lwmod
  1326  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1327  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1328  021C  0823               	movf	?___lwmod,w
  1329  021D  3E30               	addlw	48
  1330  021E  00B7               	movwf	??_sprintf+1
  1331  021F  0837               	movf	??_sprintf+1,w
  1332  0220  00C1               	movwf	sprintf@c
  1333                           
  1334                           ;doprnt.c: 1532: }
  1335                           ;doprnt.c: 1533: ((*sp++ = (c)));
  1336  0221  0841               	movf	sprintf@c,w
  1337  0222  00B6               	movwf	??_sprintf
  1338  0223  0840               	movf	sprintf@sp,w
  1339  0224  0084               	movwf	4
  1340  0225  0836               	movf	??_sprintf,w
  1341  0226  1383               	bcf	3,7	;select IRP bank0
  1342  0227  0080               	movwf	0
  1343  0228  3001               	movlw	1
  1344  0229  00B6               	movwf	??_sprintf
  1345  022A  0836               	movf	??_sprintf,w
  1346  022B  07C0               	addwf	sprintf@sp,f
  1347  022C  29E5               	goto	l1381
  1348  022D                     l1385:	
  1349                           ;doprnt.c: 1534: }
  1350                           ;doprnt.c: 1542: }
  1351                           ;doprnt.c: 1544: alldone:
  1352                           
  1353                           
  1354                           ;doprnt.c: 1547: *sp = 0;
  1355  022D  0840               	movf	sprintf@sp,w
  1356  022E  0084               	movwf	4
  1357  022F  1383               	bcf	3,7	;select IRP bank0
  1358  0230  0180               	clrf	0
  1359  0231  0008               	return
  1360  0232                     __end_of_sprintf:	
  1361                           ;doprnt.c: 1549: return 0;
  1362                           ;	Return value of _sprintf is never used
  1363                           
  1364                           
  1365                           	psect	text4
  1366  033C                     __ptext4:	
  1367 ;; *************** function ___lwmod *****************
  1368 ;; Defined at:
  1369 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  divisor         2    3[BANK0 ] unsigned int 
  1372 ;;  dividend        2    5[BANK0 ] unsigned int 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  counter         1    8[BANK0 ] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  2    3[BANK0 ] unsigned int 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         0       4       0       0       0
  1385 ;;      Locals:         0       1       0       0       0
  1386 ;;      Temps:          0       1       0       0       0
  1387 ;;      Totals:         0       6       0       0       0
  1388 ;;Total ram usage:        6 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_sprintf
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function ___lwmod
  1400  033C                     ___lwmod:	
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1404  033C  1283               	bcf	3,5	;RP0=0, select bank0
  1405  033D  1303               	bcf	3,6	;RP1=0, select bank0
  1406  033E  0824               	movf	___lwmod@divisor+1,w
  1407  033F  0423               	iorwf	___lwmod@divisor,w
  1408  0340  1903               	skipnz
  1409  0341  2B6B               	goto	l1327
  1410  0342  01A8               	clrf	___lwmod@counter
  1411  0343  0AA8               	incf	___lwmod@counter,f
  1412  0344                     l1317:	
  1413  0344  1BA4               	btfsc	___lwmod@divisor+1,7
  1414  0345  2B52               	goto	l1319
  1415  0346  3001               	movlw	1
  1416  0347                     u805:	
  1417  0347  1003               	clrc
  1418  0348  0DA3               	rlf	___lwmod@divisor,f
  1419  0349  0DA4               	rlf	___lwmod@divisor+1,f
  1420  034A  3EFF               	addlw	-1
  1421  034B  1D03               	skipz
  1422  034C  2B47               	goto	u805
  1423  034D  3001               	movlw	1
  1424  034E  00A7               	movwf	??___lwmod
  1425  034F  0827               	movf	??___lwmod,w
  1426  0350  07A8               	addwf	___lwmod@counter,f
  1427  0351  2B44               	goto	l1317
  1428  0352                     l1319:	
  1429  0352  0824               	movf	___lwmod@divisor+1,w
  1430  0353  0226               	subwf	___lwmod@dividend+1,w
  1431  0354  1D03               	skipz
  1432  0355  2B58               	goto	u825
  1433  0356  0823               	movf	___lwmod@divisor,w
  1434  0357  0225               	subwf	___lwmod@dividend,w
  1435  0358                     u825:	
  1436  0358  1C03               	skipc
  1437  0359  2B60               	goto	l1323
  1438  035A  0823               	movf	___lwmod@divisor,w
  1439  035B  02A5               	subwf	___lwmod@dividend,f
  1440  035C  0824               	movf	___lwmod@divisor+1,w
  1441  035D  1C03               	skipc
  1442  035E  03A6               	decf	___lwmod@dividend+1,f
  1443  035F  02A6               	subwf	___lwmod@dividend+1,f
  1444  0360                     l1323:	
  1445  0360  3001               	movlw	1
  1446  0361                     u835:	
  1447  0361  1003               	clrc
  1448  0362  0CA4               	rrf	___lwmod@divisor+1,f
  1449  0363  0CA3               	rrf	___lwmod@divisor,f
  1450  0364  3EFF               	addlw	-1
  1451  0365  1D03               	skipz
  1452  0366  2B61               	goto	u835
  1453  0367  3001               	movlw	1
  1454  0368  02A8               	subwf	___lwmod@counter,f
  1455  0369  1D03               	btfss	3,2
  1456  036A  2B52               	goto	l1319
  1457  036B                     l1327:	
  1458  036B  0826               	movf	___lwmod@dividend+1,w
  1459  036C  01A4               	clrf	?___lwmod+1
  1460  036D  07A4               	addwf	?___lwmod+1,f
  1461  036E  0825               	movf	___lwmod@dividend,w
  1462  036F  01A3               	clrf	?___lwmod
  1463  0370  07A3               	addwf	?___lwmod,f
  1464  0371  0008               	return
  1465  0372                     __end_of___lwmod:	
  1466                           
  1467                           	psect	text5
  1468  0283                     __ptext5:	
  1469 ;; *************** function ___lwdiv *****************
  1470 ;; Defined at:
  1471 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  divisor         2    4[COMMON] unsigned int 
  1474 ;;  dividend        2    6[COMMON] unsigned int 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  quotient        2    0[BANK0 ] unsigned int 
  1477 ;;  counter         1    2[BANK0 ] unsigned char 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  2    4[COMMON] unsigned int 
  1480 ;; Registers used:
  1481 ;;		wreg, status,2, status,0
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1487 ;;      Params:         4       0       0       0       0
  1488 ;;      Locals:         0       3       0       0       0
  1489 ;;      Temps:          1       0       0       0       0
  1490 ;;      Totals:         5       3       0       0       0
  1491 ;;Total ram usage:        8 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    1
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_sprintf
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function ___lwdiv
  1503  0283                     ___lwdiv:	
  1504                           
  1505                           ;incstack = 0
  1506                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1507  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0285  01A0               	clrf	___lwdiv@quotient
  1510  0286  01A1               	clrf	___lwdiv@quotient+1
  1511  0287  0875               	movf	___lwdiv@divisor+1,w
  1512  0288  0474               	iorwf	___lwdiv@divisor,w
  1513  0289  1903               	skipnz
  1514  028A  2ABC               	goto	l1073
  1515  028B  01A2               	clrf	___lwdiv@counter
  1516  028C  0AA2               	incf	___lwdiv@counter,f
  1517  028D                     l1061:	
  1518  028D  1BF5               	btfsc	___lwdiv@divisor+1,7
  1519  028E  2A9B               	goto	l1063
  1520  028F  3001               	movlw	1
  1521  0290                     u455:	
  1522  0290  1003               	clrc
  1523  0291  0DF4               	rlf	___lwdiv@divisor,f
  1524  0292  0DF5               	rlf	___lwdiv@divisor+1,f
  1525  0293  3EFF               	addlw	-1
  1526  0294  1D03               	skipz
  1527  0295  2A90               	goto	u455
  1528  0296  3001               	movlw	1
  1529  0297  00F8               	movwf	??___lwdiv
  1530  0298  0878               	movf	??___lwdiv,w
  1531  0299  07A2               	addwf	___lwdiv@counter,f
  1532  029A  2A8D               	goto	l1061
  1533  029B                     l1063:	
  1534  029B  3001               	movlw	1
  1535  029C                     u475:	
  1536  029C  1003               	clrc
  1537  029D  0DA0               	rlf	___lwdiv@quotient,f
  1538  029E  0DA1               	rlf	___lwdiv@quotient+1,f
  1539  029F  3EFF               	addlw	-1
  1540  02A0  1D03               	skipz
  1541  02A1  2A9C               	goto	u475
  1542  02A2  0875               	movf	___lwdiv@divisor+1,w
  1543  02A3  0277               	subwf	___lwdiv@dividend+1,w
  1544  02A4  1D03               	skipz
  1545  02A5  2AA8               	goto	u485
  1546  02A6  0874               	movf	___lwdiv@divisor,w
  1547  02A7  0276               	subwf	___lwdiv@dividend,w
  1548  02A8                     u485:	
  1549  02A8  1C03               	skipc
  1550  02A9  2AB1               	goto	l1069
  1551  02AA  0874               	movf	___lwdiv@divisor,w
  1552  02AB  02F6               	subwf	___lwdiv@dividend,f
  1553  02AC  0875               	movf	___lwdiv@divisor+1,w
  1554  02AD  1C03               	skipc
  1555  02AE  03F7               	decf	___lwdiv@dividend+1,f
  1556  02AF  02F7               	subwf	___lwdiv@dividend+1,f
  1557  02B0  1420               	bsf	___lwdiv@quotient,0
  1558  02B1                     l1069:	
  1559  02B1  3001               	movlw	1
  1560  02B2                     u495:	
  1561  02B2  1003               	clrc
  1562  02B3  0CF5               	rrf	___lwdiv@divisor+1,f
  1563  02B4  0CF4               	rrf	___lwdiv@divisor,f
  1564  02B5  3EFF               	addlw	-1
  1565  02B6  1D03               	skipz
  1566  02B7  2AB2               	goto	u495
  1567  02B8  3001               	movlw	1
  1568  02B9  02A2               	subwf	___lwdiv@counter,f
  1569  02BA  1D03               	btfss	3,2
  1570  02BB  2A9B               	goto	l1063
  1571  02BC                     l1073:	
  1572  02BC  0821               	movf	___lwdiv@quotient+1,w
  1573  02BD  01F5               	clrf	?___lwdiv+1
  1574  02BE  07F5               	addwf	?___lwdiv+1,f
  1575  02BF  0820               	movf	___lwdiv@quotient,w
  1576  02C0  01F4               	clrf	?___lwdiv
  1577  02C1  07F4               	addwf	?___lwdiv,f
  1578  02C2  0008               	return
  1579  02C3                     __end_of___lwdiv:	
  1580                           
  1581                           	psect	text6
  1582  02C3                     __ptext6:	
  1583 ;; *************** function _master_tx *****************
  1584 ;; Defined at:
  1585 ;;		line 108 in file "i2c_driver.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  i2c_pkt         1    wreg     PTR struct packet
  1588 ;;		 -> i2c_pkt(3), 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  i2c_pkt         1    5[COMMON] PTR struct packet
  1591 ;;		 -> i2c_pkt(3), 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      unsigned char 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       0       0       0       0
  1602 ;;      Locals:         1       0       0       0       0
  1603 ;;      Temps:          1       0       0       0       0
  1604 ;;      Totals:         2       0       0       0       0
  1605 ;;Total ram usage:        2 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    1
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_main
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _master_tx
  1617  02C3                     _master_tx:	
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in _master_tx: [wreg-fsr0h+status,2+status,0]
  1621                           ;master_tx@i2c_pkt stored from wreg
  1622  02C3  00F5               	movwf	master_tx@i2c_pkt
  1623                           
  1624                           ;i2c_driver.c: 110: SEN=1;
  1625  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  1626  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  1627  02C6  1411               	bsf	17,0	;volatile
  1628  02C7                     l1125:	
  1629                           ;i2c_driver.c: 112: {
  1630                           
  1631                           ;i2c_driver.c: 111: while(!i2c_pkt->ack)
  1632                           
  1633  02C7  0875               	movf	master_tx@i2c_pkt,w
  1634  02C8  3E02               	addlw	2
  1635  02C9  0084               	movwf	4
  1636  02CA  1383               	bcf	3,7	;select IRP bank0
  1637  02CB  0880               	movf	0,f
  1638  02CC  1903               	skipnz
  1639  02CD  2AC7               	goto	l1125
  1640                           
  1641                           ;i2c_driver.c: 115: }
  1642                           ;i2c_driver.c: 116: i2c_pkt->ack=0;
  1643  02CE  0875               	movf	master_tx@i2c_pkt,w
  1644  02CF  3E02               	addlw	2
  1645  02D0  0084               	movwf	4
  1646  02D1  0180               	clrf	0
  1647                           
  1648                           ;i2c_driver.c: 118: SSPBUF=(i2c_pkt->address<<1|0);
  1649  02D2  0875               	movf	master_tx@i2c_pkt,w
  1650  02D3  0084               	movwf	4
  1651  02D4  0800               	movf	0,w
  1652  02D5  00F4               	movwf	??_master_tx
  1653  02D6  0774               	addwf	??_master_tx,w
  1654  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1655  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1656  02D9  0093               	movwf	19	;volatile
  1657  02DA                     l1131:	
  1658                           ;i2c_driver.c: 119: while(!i2c_pkt->ack);
  1659                           
  1660  02DA  0875               	movf	master_tx@i2c_pkt,w
  1661  02DB  3E02               	addlw	2
  1662  02DC  0084               	movwf	4
  1663  02DD  0880               	movf	0,f
  1664  02DE  1903               	skipnz
  1665  02DF  2ADA               	goto	l1131
  1666                           
  1667                           ;i2c_driver.c: 120: i2c_pkt->ack=0;
  1668  02E0  0875               	movf	master_tx@i2c_pkt,w
  1669  02E1  3E02               	addlw	2
  1670  02E2  0084               	movwf	4
  1671  02E3  0180               	clrf	0
  1672                           
  1673                           ;i2c_driver.c: 121: SSPBUF=i2c_pkt->data;
  1674  02E4  0A75               	incf	master_tx@i2c_pkt,w
  1675  02E5  0084               	movwf	4
  1676  02E6  0800               	movf	0,w
  1677  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1678  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1679  02E9  0093               	movwf	19	;volatile
  1680  02EA                     l1137:	
  1681                           ;i2c_driver.c: 123: while(!i2c_pkt->ack);
  1682                           
  1683  02EA  0875               	movf	master_tx@i2c_pkt,w
  1684  02EB  3E02               	addlw	2
  1685  02EC  0084               	movwf	4
  1686  02ED  0880               	movf	0,f
  1687  02EE  1903               	skipnz
  1688  02EF  2AEA               	goto	l1137
  1689                           
  1690                           ;i2c_driver.c: 124: i2c_pkt->ack=0;
  1691  02F0  0875               	movf	master_tx@i2c_pkt,w
  1692  02F1  3E02               	addlw	2
  1693  02F2  0084               	movwf	4
  1694  02F3  0180               	clrf	0
  1695                           
  1696                           ;i2c_driver.c: 127: PEN=1;
  1697  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  1698  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  1699  02F6  1511               	bsf	17,2	;volatile
  1700  02F7                     l1143:	
  1701                           ;i2c_driver.c: 128: while(!i2c_pkt->ack);
  1702                           
  1703  02F7  0875               	movf	master_tx@i2c_pkt,w
  1704  02F8  3E02               	addlw	2
  1705  02F9  0084               	movwf	4
  1706  02FA  0880               	movf	0,f
  1707  02FB  1903               	skipnz
  1708  02FC  2AF7               	goto	l1143
  1709                           
  1710                           ;i2c_driver.c: 129: i2c_pkt->ack=0;
  1711  02FD  0875               	movf	master_tx@i2c_pkt,w
  1712  02FE  3E02               	addlw	2
  1713  02FF  0084               	movwf	4
  1714  0300  0180               	clrf	0
  1715  0301  0008               	return
  1716  0302                     __end_of_master_tx:	
  1717                           ;i2c_driver.c: 136: return 0;
  1718                           ;	Return value of _master_tx is never used
  1719                           
  1720                           
  1721                           	psect	text7
  1722  0232                     __ptext7:	
  1723 ;; *************** function _master_rx *****************
  1724 ;; Defined at:
  1725 ;;		line 138 in file "i2c_driver.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  i2c_pkt         1    wreg     PTR struct packet
  1728 ;;		 -> i2c_pkt(3), 
  1729 ;;  rx_time         1    4[COMMON] PTR unsigned char 
  1730 ;;		 -> NULL(0), local_time(7), 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  i2c_pkt         1    6[COMMON] PTR struct packet
  1733 ;;		 -> i2c_pkt(3), 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      unsigned char 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         1       0       0       0       0
  1744 ;;      Locals:         1       0       0       0       0
  1745 ;;      Temps:          1       0       0       0       0
  1746 ;;      Totals:         3       0       0       0       0
  1747 ;;Total ram usage:        3 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    1
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _master_rx
  1759  0232                     _master_rx:	
  1760                           
  1761                           ;incstack = 0
  1762                           ; Regs used in _master_rx: [wreg-fsr0h+status,2+status,0]
  1763                           ;master_rx@i2c_pkt stored from wreg
  1764  0232  00F6               	movwf	master_rx@i2c_pkt
  1765                           
  1766                           ;i2c_driver.c: 140: SEN=1;
  1767  0233  1683               	bsf	3,5	;RP0=1, select bank1
  1768  0234  1303               	bcf	3,6	;RP1=0, select bank1
  1769  0235  1411               	bsf	17,0	;volatile
  1770  0236                     l1151:	
  1771                           ;i2c_driver.c: 142: {
  1772                           
  1773                           ;i2c_driver.c: 141: while(!i2c_pkt->ack)
  1774                           
  1775  0236  0876               	movf	master_rx@i2c_pkt,w
  1776  0237  3E02               	addlw	2
  1777  0238  0084               	movwf	4
  1778  0239  1383               	bcf	3,7	;select IRP bank0
  1779  023A  0880               	movf	0,f
  1780  023B  1903               	skipnz
  1781  023C  2A36               	goto	l1151
  1782                           
  1783                           ;i2c_driver.c: 145: }
  1784                           ;i2c_driver.c: 146: i2c_pkt->ack=0;
  1785  023D  0876               	movf	master_rx@i2c_pkt,w
  1786  023E  3E02               	addlw	2
  1787  023F  0084               	movwf	4
  1788  0240  0180               	clrf	0
  1789                           
  1790                           ;i2c_driver.c: 148: SSPBUF=(i2c_pkt->address<<1|1);
  1791  0241  1403               	setc
  1792  0242  0876               	movf	master_rx@i2c_pkt,w
  1793  0243  0084               	movwf	4
  1794  0244  0D00               	rlf	0,w
  1795  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0247  0093               	movwf	19	;volatile
  1798  0248                     l1157:	
  1799                           ;i2c_driver.c: 149: while(!i2c_pkt->ack);
  1800                           
  1801  0248  0876               	movf	master_rx@i2c_pkt,w
  1802  0249  3E02               	addlw	2
  1803  024A  0084               	movwf	4
  1804  024B  0880               	movf	0,f
  1805  024C  1903               	skipnz
  1806  024D  2A48               	goto	l1157
  1807                           
  1808                           ;i2c_driver.c: 150: i2c_pkt->ack=0;
  1809  024E  0876               	movf	master_rx@i2c_pkt,w
  1810  024F  3E02               	addlw	2
  1811  0250  0084               	movwf	4
  1812  0251  0180               	clrf	0
  1813                           
  1814                           ;i2c_driver.c: 155: RCEN=1;
  1815  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1816  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1817  0254  1591               	bsf	17,3	;volatile
  1818  0255                     l1163:	
  1819                           ;i2c_driver.c: 156: while(!i2c_pkt->ack);
  1820                           
  1821  0255  0876               	movf	master_rx@i2c_pkt,w
  1822  0256  3E02               	addlw	2
  1823  0257  0084               	movwf	4
  1824  0258  0880               	movf	0,f
  1825  0259  1903               	skipnz
  1826  025A  2A55               	goto	l1163
  1827                           
  1828                           ;i2c_driver.c: 157: i2c_pkt->ack=0;
  1829  025B  0876               	movf	master_rx@i2c_pkt,w
  1830  025C  3E02               	addlw	2
  1831  025D  0084               	movwf	4
  1832  025E  0180               	clrf	0
  1833                           
  1834                           ;i2c_driver.c: 158: *rx_time=SSPBUF;
  1835  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1836  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1837  0261  0813               	movf	19,w	;volatile
  1838  0262  00F5               	movwf	??_master_rx
  1839  0263  0874               	movf	master_rx@rx_time,w
  1840  0264  0084               	movwf	4
  1841  0265  0875               	movf	??_master_rx,w
  1842  0266  0080               	movwf	0
  1843                           
  1844                           ;i2c_driver.c: 160: ACKDT=1 ;
  1845  0267  1683               	bsf	3,5	;RP0=1, select bank1
  1846  0268  1303               	bcf	3,6	;RP1=0, select bank1
  1847  0269  1691               	bsf	17,5	;volatile
  1848                           
  1849                           ;i2c_driver.c: 161: ACKEN=1;
  1850  026A  1611               	bsf	17,4	;volatile
  1851  026B                     l1173:	
  1852                           ;i2c_driver.c: 162: while(!i2c_pkt->ack);
  1853                           
  1854  026B  0876               	movf	master_rx@i2c_pkt,w
  1855  026C  3E02               	addlw	2
  1856  026D  0084               	movwf	4
  1857  026E  0880               	movf	0,f
  1858  026F  1903               	skipnz
  1859  0270  2A6B               	goto	l1173
  1860                           
  1861                           ;i2c_driver.c: 163: i2c_pkt->ack=0;
  1862  0271  0876               	movf	master_rx@i2c_pkt,w
  1863  0272  3E02               	addlw	2
  1864  0273  0084               	movwf	4
  1865  0274  0180               	clrf	0
  1866                           
  1867                           ;i2c_driver.c: 173: PEN=1;
  1868  0275  1683               	bsf	3,5	;RP0=1, select bank1
  1869  0276  1303               	bcf	3,6	;RP1=0, select bank1
  1870  0277  1511               	bsf	17,2	;volatile
  1871  0278                     l1179:	
  1872                           ;i2c_driver.c: 174: while(!i2c_pkt->ack);
  1873                           
  1874  0278  0876               	movf	master_rx@i2c_pkt,w
  1875  0279  3E02               	addlw	2
  1876  027A  0084               	movwf	4
  1877  027B  0880               	movf	0,f
  1878  027C  1903               	skipnz
  1879  027D  2A78               	goto	l1179
  1880                           
  1881                           ;i2c_driver.c: 175: i2c_pkt->ack=0;
  1882  027E  0876               	movf	master_rx@i2c_pkt,w
  1883  027F  3E02               	addlw	2
  1884  0280  0084               	movwf	4
  1885  0281  0180               	clrf	0
  1886  0282  0008               	return
  1887  0283                     __end_of_master_rx:	
  1888                           ;i2c_driver.c: 182: return 0;
  1889                           ;	Return value of _master_rx is never used
  1890                           
  1891                           
  1892                           	psect	text8
  1893  03CB                     __ptext8:	
  1894 ;; *************** function _lcd_init *****************
  1895 ;; Defined at:
  1896 ;;		line 17 in file "lcd_driver.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;		None               void
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0, pclath, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0
  1913 ;;      Totals:         0       0       0       0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    3
  1917 ;; This function calls:
  1918 ;;		_lcd_cmnt
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _lcd_init
  1926  03CB                     _lcd_init:	
  1927                           
  1928                           ;lcd_driver.c: 19: TRISD=0X00;
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1932  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  1933  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  1934  03CD  0188               	clrf	8	;volatile
  1935                           
  1936                           ;lcd_driver.c: 20: PORTD=0X00;
  1937  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1938  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1939  03D0  0188               	clrf	8	;volatile
  1940                           
  1941                           ;lcd_driver.c: 21: ADCON1=0X06;
  1942  03D1  3006               	movlw	6
  1943  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  1944  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  1945  03D4  009F               	movwf	31	;volatile
  1946                           
  1947                           ;lcd_driver.c: 23: lcd_cmnt(0x38);
  1948  03D5  3038               	movlw	56
  1949  03D6  120A  118A  2416  120A  118A  	fcall	_lcd_cmnt
  1950                           
  1951                           ;lcd_driver.c: 24: lcd_cmnt(0x0c);
  1952  03DB  300C               	movlw	12
  1953  03DC  120A  118A  2416  120A  118A  	fcall	_lcd_cmnt
  1954                           
  1955                           ;lcd_driver.c: 25: lcd_cmnt(0x01);
  1956  03E1  3001               	movlw	1
  1957  03E2  120A  118A  2416  120A  118A  	fcall	_lcd_cmnt
  1958                           
  1959                           ;lcd_driver.c: 26: lcd_cmnt(0x80);
  1960  03E7  3080               	movlw	128
  1961  03E8  120A  118A  2416   	fcall	_lcd_cmnt
  1962  03EB  0008               	return
  1963  03EC                     __end_of_lcd_init:	
  1964                           
  1965                           	psect	text9
  1966  0416                     __ptext9:	
  1967 ;; *************** function _lcd_cmnt *****************
  1968 ;; Defined at:
  1969 ;;		line 28 in file "lcd_driver.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  cmnt            1    wreg     unsigned char 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  cmnt            1    7[COMMON] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;		None               void
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, pclath, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1983 ;;      Params:         0       0       0       0       0
  1984 ;;      Locals:         1       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0
  1986 ;;      Totals:         1       0       0       0       0
  1987 ;;Total ram usage:        1 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    2
  1990 ;; This function calls:
  1991 ;;		_delay
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;;		_lcd_init
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           
  1999                           ;psect for function _lcd_cmnt
  2000  0416                     _lcd_cmnt:	
  2001                           
  2002                           ;incstack = 0
  2003                           ; Regs used in _lcd_cmnt: [wreg+status,2+status,0+pclath+cstack]
  2004                           ;lcd_cmnt@cmnt stored from wreg
  2005  0416  00F7               	movwf	lcd_cmnt@cmnt
  2006                           
  2007                           ;lcd_driver.c: 30: PORTD=cmnt;
  2008  0417  0877               	movf	lcd_cmnt@cmnt,w
  2009  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2011  041A  0088               	movwf	8	;volatile
  2012                           
  2013                           ;lcd_driver.c: 31: RE0=0;
  2014  041B  1009               	bcf	9,0	;volatile
  2015                           
  2016                           ;lcd_driver.c: 32: RE1=1;delay(10);RE1=0; ;
  2017  041C  1489               	bsf	9,1	;volatile
  2018  041D  300A               	movlw	10
  2019  041E  00F4               	movwf	delay@x
  2020  041F  3000               	movlw	0
  2021  0420  00F5               	movwf	delay@x+1
  2022  0421  120A  118A  2372   	fcall	_delay
  2023  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0426  1089               	bcf	9,1	;volatile
  2026  0427  0008               	return
  2027  0428                     __end_of_lcd_cmnt:	
  2028                           
  2029                           	psect	text10
  2030  0372                     __ptext10:	
  2031 ;; *************** function _delay *****************
  2032 ;; Defined at:
  2033 ;;		line 53 in file "lcd_driver.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  x               2    4[COMMON] int 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  j               2    2[BANK0 ] int 
  2038 ;;  i               2    0[BANK0 ] int 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;		None               void
  2041 ;; Registers used:
  2042 ;;		wreg, status,2
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         2       0       0       0       0
  2049 ;;      Locals:         0       4       0       0       0
  2050 ;;      Temps:          1       0       0       0       0
  2051 ;;      Totals:         3       4       0       0       0
  2052 ;;Total ram usage:        7 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_lcd_cmnt
  2059 ;;		_lcd_data
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _delay
  2065  0372                     _delay:	
  2066                           
  2067                           ;lcd_driver.c: 55: int i,j;
  2068                           ;lcd_driver.c: 56: for(i=0;i<=x;i++)
  2069                           
  2070                           ;incstack = 0
  2071                           ; Regs used in _delay: [wreg+status,2]
  2072  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2074  0374  01A0               	clrf	delay@i
  2075  0375  01A1               	clrf	delay@i+1
  2076  0376                     l204:	
  2077  0376  0875               	movf	delay@x+1,w
  2078  0377  3A80               	xorlw	128
  2079  0378  00F6               	movwf	??_delay
  2080  0379  0821               	movf	delay@i+1,w
  2081  037A  3A80               	xorlw	128
  2082  037B  0276               	subwf	??_delay,w
  2083  037C  1D03               	skipz
  2084  037D  2B80               	goto	u435
  2085  037E  0820               	movf	delay@i,w
  2086  037F  0274               	subwf	delay@x,w
  2087  0380                     u435:	
  2088  0380  1C03               	btfss	3,0
  2089  0381  0008               	return
  2090                           
  2091                           ;lcd_driver.c: 57: {
  2092                           ;lcd_driver.c: 58: for(j=0;j<=x;j++)
  2093  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0384  01A2               	clrf	delay@j
  2096  0385  01A3               	clrf	delay@j+1
  2097  0386                     l206:	
  2098  0386  0875               	movf	delay@x+1,w
  2099  0387  3A80               	xorlw	128
  2100  0388  00F6               	movwf	??_delay
  2101  0389  0823               	movf	delay@j+1,w
  2102  038A  3A80               	xorlw	128
  2103  038B  0276               	subwf	??_delay,w
  2104  038C  1D03               	skipz
  2105  038D  2B90               	goto	u425
  2106  038E  0822               	movf	delay@j,w
  2107  038F  0274               	subwf	delay@x,w
  2108  0390                     u425:	
  2109  0390  1C03               	btfss	3,0
  2110  0391  2B9B               	goto	l1029
  2111                           
  2112                           ;lcd_driver.c: 59: {}
  2113  0392  3001               	movlw	1
  2114  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2115  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2116  0395  07A2               	addwf	delay@j,f
  2117  0396  1803               	skipnc
  2118  0397  0AA3               	incf	delay@j+1,f
  2119  0398  3000               	movlw	0
  2120  0399  07A3               	addwf	delay@j+1,f
  2121  039A  2B86               	goto	l206
  2122  039B                     l1029:	
  2123  039B  3001               	movlw	1
  2124  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2125  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2126  039E  07A0               	addwf	delay@i,f
  2127  039F  1803               	skipnc
  2128  03A0  0AA1               	incf	delay@i+1,f
  2129  03A1  3000               	movlw	0
  2130  03A2  07A1               	addwf	delay@i+1,f
  2131  03A3  2B76               	goto	l204
  2132  03A4                     __end_of_delay:	
  2133                           
  2134                           	psect	text11
  2135  03EC                     __ptext11:	
  2136 ;; *************** function _int2char *****************
  2137 ;; Defined at:
  2138 ;;		line 222 in file "i2c_driver.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  in              1    wreg     unsigned char 
  2141 ;;  out             1    4[COMMON] PTR unsigned char 
  2142 ;;		 -> year(2), month(2), date(2), sec(2), 
  2143 ;;		 -> min(2), hour(2), 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  in              1    7[COMMON] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;		None               void
  2148 ;; Registers used:
  2149 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2155 ;;      Params:         1       0       0       0       0
  2156 ;;      Locals:         1       0       0       0       0
  2157 ;;      Temps:          2       0       0       0       0
  2158 ;;      Totals:         4       0       0       0       0
  2159 ;;Total ram usage:        4 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    1
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_main
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function _int2char
  2171  03EC                     _int2char:	
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _int2char: [wreg-fsr0h+status,2+status,0]
  2175                           ;int2char@in stored from wreg
  2176  03EC  00F7               	movwf	int2char@in
  2177                           
  2178                           ;i2c_driver.c: 224: *out= in & 0x0f;
  2179  03ED  0877               	movf	int2char@in,w
  2180  03EE  390F               	andlw	15
  2181  03EF  00F5               	movwf	??_int2char
  2182  03F0  0874               	movf	int2char@out,w
  2183  03F1  0084               	movwf	4
  2184  03F2  0875               	movf	??_int2char,w
  2185  03F3  1383               	bcf	3,7	;select IRP bank0
  2186  03F4  0080               	movwf	0
  2187                           
  2188                           ;i2c_driver.c: 225: *(out+1)= in>>4;
  2189  03F5  0877               	movf	int2char@in,w
  2190  03F6  00F5               	movwf	??_int2char
  2191  03F7  3004               	movlw	4
  2192  03F8                     u665:	
  2193  03F8  1003               	clrc
  2194  03F9  0CF5               	rrf	??_int2char,f
  2195  03FA  3EFF               	addlw	-1
  2196  03FB  1D03               	skipz
  2197  03FC  2BF8               	goto	u665
  2198  03FD  0875               	movf	??_int2char,w
  2199  03FE  00F6               	movwf	??_int2char+1
  2200  03FF  0A74               	incf	int2char@out,w
  2201  0400  0084               	movwf	4
  2202  0401  0876               	movf	??_int2char+1,w
  2203  0402  0080               	movwf	0
  2204  0403  0008               	return
  2205  0404                     __end_of_int2char:	
  2206                           
  2207                           	psect	text12
  2208  0428                     __ptext12:	
  2209 ;; *************** function _i2c_master_init *****************
  2210 ;; Defined at:
  2211 ;;		line 75 in file "i2c_driver.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;		None               void
  2218 ;; Registers used:
  2219 ;;		wreg
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0
  2228 ;;      Totals:         0       0       0       0       0
  2229 ;;Total ram usage:        0 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    1
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_main
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _i2c_master_init
  2241  0428                     _i2c_master_init:	
  2242                           
  2243                           ;i2c_driver.c: 78: TRISC3 = 1;
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in _i2c_master_init: [wreg]
  2247  0428  1683               	bsf	3,5	;RP0=1, select bank1
  2248  0429  1303               	bcf	3,6	;RP1=0, select bank1
  2249  042A  1587               	bsf	7,3	;volatile
  2250                           
  2251                           ;i2c_driver.c: 79: TRISC4 = 1;
  2252  042B  1607               	bsf	7,4	;volatile
  2253                           
  2254                           ;i2c_driver.c: 80: SSPADD = 0x28;
  2255  042C  3028               	movlw	40
  2256  042D  0093               	movwf	19	;volatile
  2257                           
  2258                           ;i2c_driver.c: 81: SSPSTAT |= 0x80;
  2259  042E  1794               	bsf	20,7	;volatile
  2260                           
  2261                           ;i2c_driver.c: 82: SSPCON = 0x28;
  2262  042F  3028               	movlw	40
  2263  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2265  0432  0094               	movwf	20	;volatile
  2266                           
  2267                           ;i2c_driver.c: 83: GIE = 1;
  2268  0433  178B               	bsf	11,7	;volatile
  2269                           
  2270                           ;i2c_driver.c: 84: PEIE = 1;
  2271  0434  170B               	bsf	11,6	;volatile
  2272                           
  2273                           ;i2c_driver.c: 85: SSPIE = 1;
  2274  0435  1683               	bsf	3,5	;RP0=1, select bank1
  2275  0436  1303               	bcf	3,6	;RP1=0, select bank1
  2276  0437  158C               	bsf	12,3	;volatile
  2277  0438  0008               	return
  2278  0439                     __end_of_i2c_master_init:	
  2279                           
  2280                           	psect	text13
  2281  0439                     __ptext13:	
  2282 ;; *************** function _interrupt_isr *****************
  2283 ;; Defined at:
  2284 ;;		line 208 in file "i2c_driver.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		None
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         0       0       0       0       0
  2299 ;;      Locals:         0       0       0       0       0
  2300 ;;      Temps:          4       0       0       0       0
  2301 ;;      Totals:         4       0       0       0       0
  2302 ;;Total ram usage:        4 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		Interrupt level 1
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _interrupt_isr
  2313  0439                     _interrupt_isr:	
  2314                           
  2315                           ;i2c_driver.c: 211: if(SSPIF)
  2316  0439  1D8C               	btfss	12,3	;volatile
  2317  043A  2C3E               	goto	i1l160
  2318                           
  2319                           ;i2c_driver.c: 212: {
  2320                           ;i2c_driver.c: 213: i2c_pkt.ack=1;
  2321  043B  01E7               	clrf	_i2c_pkt+2
  2322  043C  0AE7               	incf	_i2c_pkt+2,f
  2323                           
  2324                           ;i2c_driver.c: 216: SSPIF = 0;
  2325  043D  118C               	bcf	12,3	;volatile
  2326  043E                     i1l160:	
  2327  043E  0873               	movf	??_interrupt_isr+3,w
  2328  043F  00FF               	movwf	127
  2329  0440  0872               	movf	??_interrupt_isr+2,w
  2330  0441  008A               	movwf	10
  2331  0442  0871               	movf	??_interrupt_isr+1,w
  2332  0443  0084               	movwf	4
  2333  0444  0E70               	swapf	??_interrupt_isr^(0+-128),w
  2334  0445  0083               	movwf	3
  2335  0446  0EFE               	swapf	126,f
  2336  0447  0E7E               	swapf	126,w
  2337  0448  0009               	retfie
  2338  0449                     __end_of_interrupt_isr:	
  2339  007E                     btemp	set	126	;btemp
  2340  007E                     wtemp	set	126
  2341  007E                     wtemp0	set	126
  2342  0080                     wtemp1	set	128
  2343  0082                     wtemp2	set	130
  2344  0084                     wtemp3	set	132
  2345  0086                     wtemp4	set	134
  2346  0088                     wtemp5	set	136
  2347  007F                     wtemp6	set	127
  2348  007E                     ttemp	set	126
  2349  007E                     ttemp0	set	126
  2350  0081                     ttemp1	set	129
  2351  0084                     ttemp2	set	132
  2352  0087                     ttemp3	set	135
  2353  007F                     ttemp4	set	127
  2354  007E                     ltemp	set	126
  2355  007E                     ltemp0	set	126
  2356  0082                     ltemp1	set	130
  2357  0086                     ltemp2	set	134
  2358  0080                     ltemp3	set	128
  2359                           
  2360                           	psect	intentry
  2361  0004                     __pintentry:	
  2362                           ;incstack = 0
  2363                           ; Regs used in _interrupt_isr: []
  2364                           
  2365  0004                     interrupt_function:	
  2366  007E                     saved_w	set	btemp
  2367  0004  00FE               	movwf	btemp
  2368  0005  0E03               	swapf	3,w
  2369  0006  00F0               	movwf	??_interrupt_isr
  2370  0007  0804               	movf	4,w
  2371  0008  00F1               	movwf	??_interrupt_isr+1
  2372  0009  080A               	movf	10,w
  2373  000A  00F2               	movwf	??_interrupt_isr+2
  2374  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2375  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2376  000D  087F               	movf	btemp+1,w
  2377  000E  00F3               	movwf	??_interrupt_isr+3
  2378  000F  120A  118A  2C39   	ljmp	_interrupt_isr


Data Sizes:
    Strings     42
    Constant    10
    Data        0
    BSS         53
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     49      72
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> lcd_msg1(BANK1[16]), lcd_msg(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S202$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    uart_lcd_update@data	PTR unsigned char  size(1) Largest target is 16
		 -> lcd_msg1(BANK1[16]), lcd_msg(BANK1[16]), 

    int2char@out	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), sec(BANK0[2]), 
		 -> min(BANK0[2]), hour(BANK0[2]), 

    master_rx@rx_time	PTR unsigned char  size(1) Largest target is 7
		 -> NULL(NULL[0]), local_time(BANK0[7]), 

    master_rx@i2c_pkt	PTR struct packet size(1) Largest target is 3
		 -> i2c_pkt(BANK0[3]), 

    master_tx@i2c_pkt	PTR struct packet size(1) Largest target is 3
		 -> i2c_pkt(BANK0[3]), 

    timer	PTR unsigned char  size(1) Largest target is 7
		 -> NULL(NULL[0]), local_time(BANK0[7]), 


Critical Paths under _main in COMMON

    _main->_uart_lcd_update
    _uart_lcd_update->_lcd_data
    _lcd_data->_delay
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _lcd_init->_lcd_cmnt
    _lcd_cmnt->_delay

Critical Paths under _interrupt_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _lcd_data->_delay
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_cmnt->_delay

Critical Paths under _interrupt_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    3561
                                             34 BANK0     15    15      0
                    _i2c_master_init
                           _int2char
                           _lcd_cmnt
                           _lcd_init
                          _master_rx
                          _master_tx
                            _sprintf
                    _uart_lcd_update
 ---------------------------------------------------------------------------------
 (1) _uart_lcd_update                                      5     4      1     540
                                              8 COMMON     1     0      1
                                              4 BANK0      4     4      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             1     1      0     220
                                              7 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    12     13    1516
                                              9 BANK0     25    12     13
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     362
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _master_tx                                            2     2      0     247
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _master_rx                                            3     2      1     344
                                              4 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     220
                           _lcd_cmnt
 ---------------------------------------------------------------------------------
 (2) _lcd_cmnt                                             1     1      0     220
                                              7 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                7     5      2     198
                                              4 COMMON     3     1      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _int2char                                             4     3      1     406
                                              4 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupt_isr                                        4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_master_init
   _int2char
   _lcd_cmnt
     _delay
   _lcd_init
     _lcd_cmnt
       _delay
   _master_rx
   _master_tx
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _uart_lcd_update
     _lcd_data
       _delay

 _interrupt_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      72       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     31      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      72      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Dec 31 18:03:04 2017

              __CFG_CP$ON 0000                         pc 0002              lcd_data@data 0077  
   __end_of_interrupt_isr 0449               __CFG_CPD$ON 0000                        fsr 0004  
                     l204 0376                       l206 0386                       _GIE 005F  
                     _RE0 0048                       _RE1 0049                       _PEN 048A  
                     u425 0390                       u435 0380                       u455 0290  
                     u475 029C                       _SEN 0488                       u485 02A8  
                     u805 0347                       u495 02B2                       u665 03F8  
                     u825 0358                       u835 0361                       u935 03B2  
                     u945 0059                       u955 007C                       u885 01C8  
                     _day 0079                       _min 005D                       _sec 0061  
                     fsr0 0004                       indf 0000              __CFG_FOSC$LP 0000  
            lcd_cmnt@cmnt 0077               int2char@out 0074              __CFG_LVP$OFF 0000  
                    l1131 02DA                      l1029 039B                      l1125 02C7  
                    l1061 028D                      l1151 0236                      l1143 02F7  
                    l1063 029B                      l1137 02EA                      l1073 02BC  
                    l1163 0255                      l1323 0360                      l1411 0042  
                    l1173 026B                      l1157 0248                      l1069 02B1  
                    l1317 0344                      l1421 005B                      l1319 0352  
                    l1327 036B                      l1345 0194                      l1179 0278  
                    l1355 01AB                      l1339 017E                      l1381 01E5  
                    l1373 01E1                      l1429 007E                      l1367 01D2  
                    l1359 01B1                      l1383 015E                      l1385 022D  
                    l1395 03A9                      STR_1 0312                      STR_2 0327  
           __CFG_DEBUG$ON 0000                      _PEIE 005E                      _RCEN 048B  
                    _RSEN 0489                      _date 0059                      _main 0029  
                    _hour 005B                      _year 0063                      btemp 007E  
                    ltemp 007E         ??_uart_lcd_update 0024                      start 0012  
                    ttemp 007E                      wtemp 007E                     ?_main 0070  
                   _ACKEN 048C                     _ACKDT 048D                     _BCLIE 046B  
           __CFG_WDTE$OFF 0000           __end_of___lwdiv 02C3                     i1l160 043E  
         __end_of___lwmod 0372                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _TRISE 0089  
                   _SSPIF 0063                     _SSPEN 00A5             __CFG_WRT$HALF 0000  
           __CFG_PWRTE$ON 0000                     _delay 0372           __end_of_dpowers 0312  
                   _month 005F                     _timer 0051                     main@i 004F  
          __CFG_BOREN$OFF 0000                     pclath 000A                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __end_of_sprintf 0232           __initialization 0015  
            __end_of_main 0157                    ??_main 0042                    ?_delay 0074  
                  _ADCON1 009F                    _INTCON 000B                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of_lcd_data 0416          __end_of_lcd_cmnt 0428  
        __end_of_lcd_init 03EC          __end_of_int2char 0404           _i2c_master_init 0428  
               ??___lwdiv 0078                 ??___lwmod 0027                    delay@i 0020  
                  delay@j 0022                    delay@x 0074                    saved_w 007E  
               ??_sprintf 0036   __end_of__initialization 0025            __pcstackCOMMON 0070  
           __end_of_delay 03A4           _uart_lcd_update 03A4                   ??_delay 0076  
              __pbssBANK0 0051                __pbssBANK1 00A0   __end_of_i2c_master_init 0439  
      __size_of_master_rx 0051        __size_of_master_tx 003F                __pmaintext 0029  
              __pintentry 0004          uart_lcd_update@i 0026                   _SSPCON2 0091  
               ?_lcd_data 0070                 ?_lcd_cmnt 0070                 ?_lcd_init 0070  
               ?_int2char 0074                   _SSPSTAT 0094                __stringtab 0302  
  __size_of_interrupt_isr 0010                   _i2c_pkt 0065                   ___lwdiv 0283  
                 ___lwmod 033C                _local_time 0052   __end_of_uart_lcd_update 03CB  
                 __ptext1 03A4                   __ptext2 0404                   __ptext3 0157  
                 __ptext4 033C                   __ptext5 0283                   __ptext6 02C3  
                 __ptext7 0232                   __ptext8 03CB                   __ptext9 0416  
                 _lcd_msg 00A0                   _dpowers 0308         __end_of_master_rx 0283  
       __end_of_master_tx 0302                ??_lcd_data 0077                   _sprintf 0157  
              ??_lcd_cmnt 0077                   clrloop0 044A                ??_lcd_init 0078  
              ??_int2char 0075      end_of_initialization 0025          ?_i2c_master_init 0070  
      uart_lcd_update@len 0078             _interrupt_isr 0439                int2char@in 0077  
          ?_interrupt_isr 0070          ?_uart_lcd_update 0078       start_initialization 0015  
        master_rx@i2c_pkt 0076          master_tx@i2c_pkt 0075               __pbssCOMMON 0079  
               ___latbits 0002             __pcstackBANK0 0020       __end_of__stringdata 033C  
        master_rx@rx_time 0074         __size_of_lcd_data 0012         __size_of_lcd_cmnt 0012  
       __size_of_lcd_init 0021         __size_of_int2char 0018               sprintf@_val 003C  
             sprintf@flag 003A               sprintf@prec 003B                 __pnvBANK0 0065  
        ___lwdiv@dividend 0076           ??_interrupt_isr 0070                  ?___lwdiv 0074  
                ?___lwmod 0023                 __pstrings 0302          ___lwdiv@quotient 0020  
          __size_of_delay 0032                  ?_sprintf 0029                 _master_rx 0232  
               _master_tx 02C3         interrupt_function 0004                 clear_ram0 0449  
             __stringbase 0307               __stringdata 0312                ?_master_rx 0074  
              ?_master_tx 0070  __size_of_i2c_master_init 0011          __size_of___lwdiv 0040  
        __size_of___lwmod 0036        __end_of__stringtab 0308           ___lwdiv@divisor 0074  
         ___lwdiv@counter 0022                  __ptext10 0372                  __ptext11 03EC  
                __ptext12 0428                  __ptext13 0439                  _lcd_data 0404  
                _lcd_cmnt 0416                  _lcd_msg1 00B0                  _lcd_init 03CB  
                _int2char 03EC          __size_of_sprintf 00DB             __size_of_main 012E  
__size_of_uart_lcd_update 0027               ??_master_rx 0075               ??_master_tx 0074  
                intlevel1 0000                 sprintf@ap 0039                 sprintf@sp 0040  
        ___lwmod@dividend 0025                 stringcode 0302       uart_lcd_update@data 0025  
                sprintf@c 0041                  sprintf@f 0029           ___lwmod@divisor 0023  
         ___lwmod@counter 0028         ??_i2c_master_init 0074                  stringdir 0302  
                stringtab 0302  
