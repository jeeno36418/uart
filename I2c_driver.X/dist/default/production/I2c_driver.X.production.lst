

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Jan 18 11:18:58 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0008                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000E                     	;# 
    48  000F                     	;# 
    49  0010                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0014                     	;# 
    54  0015                     	;# 
    55  0015                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  0086                     	;# 
    70  0087                     	;# 
    71  0088                     	;# 
    72  0089                     	;# 
    73  008C                     	;# 
    74  008D                     	;# 
    75  008E                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152                           
   153                           	psect	strings
   154  0300                     __pstrings:	
   155  0300                     stringtab:	
   156  0300                     __stringtab:	
   157  0300                     stringcode:	
   158                           ;	String table - string pointers are 1 byte each
   159                           
   160  0300                     stringdir:	
   161  0300  3003               	movlw	high stringdir
   162  0301  008A               	movwf	10
   163  0302  0804               	movf	4,w
   164  0303  0A84               	incf	4,f
   165  0304  0782               	addwf	2,f
   166  0305                     __stringbase:	
   167  0305  3400               	retlw	0
   168  0306                     __end_of__stringtab:	
   169  0306                     _dpowers:	
   170  0306  3401               	retlw	1
   171  0307  3400               	retlw	0
   172  0308  340A               	retlw	10
   173  0309  3400               	retlw	0
   174  030A  3464               	retlw	100
   175  030B  3400               	retlw	0
   176  030C  34E8               	retlw	232
   177  030D  3403               	retlw	3
   178  030E  3410               	retlw	16
   179  030F  3427               	retlw	39
   180  0310                     __end_of_dpowers:	
   181  0310                     __stringdata:	
   182  0310                     STR_1:	
   183  0310  3454               	retlw	84	;'T'
   184  0311  3469               	retlw	105	;'i'
   185  0312  346D               	retlw	109	;'m'
   186  0313  3465               	retlw	101	;'e'
   187  0314  343A               	retlw	58	;':'
   188  0315  3420               	retlw	32	;' '
   189  0316  3425               	retlw	37	;'%'
   190  0317  3464               	retlw	100	;'d'
   191  0318  3425               	retlw	37	;'%'
   192  0319  3464               	retlw	100	;'d'
   193  031A  342D               	retlw	45	;'-'
   194  031B  3425               	retlw	37	;'%'
   195  031C  3464               	retlw	100	;'d'
   196  031D  3425               	retlw	37	;'%'
   197  031E  3464               	retlw	100	;'d'
   198  031F  342D               	retlw	45	;'-'
   199  0320  3425               	retlw	37	;'%'
   200  0321  3464               	retlw	100	;'d'
   201  0322  3425               	retlw	37	;'%'
   202  0323  3464               	retlw	100	;'d'
   203  0324  3420               	retlw	32	;' '
   204  0325  3420               	retlw	32	;' '
   205  0326  3400               	retlw	0
   206  0327                     STR_2:	
   207  0327  3444               	retlw	68	;'D'
   208  0328  3461               	retlw	97	;'a'
   209  0329  3474               	retlw	116	;'t'
   210  032A  3465               	retlw	101	;'e'
   211  032B  343A               	retlw	58	;':'
   212  032C  3420               	retlw	32	;' '
   213  032D  3425               	retlw	37	;'%'
   214  032E  3464               	retlw	100	;'d'
   215  032F  3425               	retlw	37	;'%'
   216  0330  3464               	retlw	100	;'d'
   217  0331  342D               	retlw	45	;'-'
   218  0332  3425               	retlw	37	;'%'
   219  0333  3464               	retlw	100	;'d'
   220  0334  3425               	retlw	37	;'%'
   221  0335  3464               	retlw	100	;'d'
   222  0336  342D               	retlw	45	;'-'
   223  0337  3425               	retlw	37	;'%'
   224  0338  3464               	retlw	100	;'d'
   225  0339  3425               	retlw	37	;'%'
   226  033A  3464               	retlw	100	;'d'
   227  033B  3420               	retlw	32	;' '
   228  033C  3420               	retlw	32	;' '
   229  033D  3400               	retlw	0
   230  033E                     STR_3:	
   231  033E  3444               	retlw	68	;'D'
   232  033F  3461               	retlw	97	;'a'
   233  0340  3474               	retlw	116	;'t'
   234  0341  3465               	retlw	101	;'e'
   235  0342  343A               	retlw	58	;':'
   236  0343  3420               	retlw	32	;' '
   237  0344  3425               	retlw	37	;'%'
   238  0345  3464               	retlw	100	;'d'
   239  0346  3425               	retlw	37	;'%'
   240  0347  3464               	retlw	100	;'d'
   241  0348  342D               	retlw	45	;'-'
   242  0349  3425               	retlw	37	;'%'
   243  034A  3464               	retlw	100	;'d'
   244  034B  3425               	retlw	37	;'%'
   245  034C  3464               	retlw	100	;'d'
   246  034D  342D               	retlw	45	;'-'
   247  034E  3425               	retlw	37	;'%'
   248  034F  3464               	retlw	100	;'d'
   249  0350  3425               	retlw	37	;'%'
   250  0351  3464               	retlw	100	;'d'
   251  0352  343C               	retlw	60	;'<'
   252  0353  342D               	retlw	45	;'-'
   253  0354  3400               	retlw	0
   254  0355                     __end_of__stringdata:	
   255                           
   256                           ; #config settings
   257  0000                     
   258                           	psect	nvBANK0
   259  006D                     __pnvBANK0:	
   260  006D                     _i2c_pkt:	
   261  006D                     	ds	3
   262  000B                     _INTCON	set	11
   263  0005                     _PORTA	set	5
   264  0008                     _PORTD	set	8
   265  0013                     _SSPBUF	set	19
   266  0014                     _SSPCON	set	20
   267  0006                     _PORTB	set	6
   268  005F                     _GIE	set	95
   269  005E                     _PEIE	set	94
   270  0034                     _RB4	set	52
   271  005B                     _RBIE	set	91
   272  0058                     _RBIF	set	88
   273  0048                     _RE0	set	72
   274  0049                     _RE1	set	73
   275  00A5                     _SSPEN	set	165
   276  0063                     _SSPIF	set	99
   277  009F                     _ADCON1	set	159
   278  0081                     _OPTION_REG	set	129
   279  0093                     _SSPADD	set	147
   280  0094                     _SSPSTAT	set	148
   281  0085                     _TRISA	set	133
   282  0086                     _TRISB	set	134
   283  0088                     _TRISD	set	136
   284  0089                     _TRISE	set	137
   285  048D                     _ACKDT	set	1165
   286  048C                     _ACKEN	set	1164
   287  046B                     _BCLIE	set	1131
   288  048A                     _PEN	set	1162
   289  048B                     _RCEN	set	1163
   290  0489                     _RSEN	set	1161
   291  0488                     _SEN	set	1160
   292  0463                     _SSPIE	set	1123
   293  043B                     _TRISC3	set	1083
   294  043C                     _TRISC4	set	1084
   295                           
   296                           	psect	cinit
   297  0015                     start_initialization:	
   298  0015                     __initialization:	
   299                           
   300                           ; Clear objects allocated to COMMON
   301  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   302  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   303  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   304  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   305  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   306  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   307                           
   308                           ; Clear objects allocated to BANK0
   309  001B  1383               	bcf	3,7	;select IRP bank0
   310  001C  3054               	movlw	low __pbssBANK0
   311  001D  0084               	movwf	4
   312  001E  306D               	movlw	low (__pbssBANK0+25)
   313  001F  120A  118A  25B8  120A  118A  	fcall	clear_ram0
   314                           
   315                           ; Clear objects allocated to BANK1
   316  0024  30A0               	movlw	low __pbssBANK1
   317  0025  0084               	movwf	4
   318  0026  30C0               	movlw	low (__pbssBANK1+32)
   319  0027  120A  118A  25B8   	fcall	clear_ram0
   320  002A                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323  002A                     __end_of__initialization:	
   324  002A  0183               	clrf	3
   325  002B  120A  118A  282E   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMMON
   328  0070                     __pbssCOMMON:	
   329  0070                     _date_dec:	
   330  0070                     	ds	1
   331  0071                     _day:	
   332  0071                     	ds	1
   333  0072                     _day_dec:	
   334  0072                     	ds	1
   335  0073                     _hour_dec:	
   336  0073                     	ds	1
   337  0074                     _min_dec:	
   338  0074                     	ds	1
   339  0075                     _sec_dec:	
   340  0075                     	ds	1
   341                           
   342                           	psect	bssBANK0
   343  0054                     __pbssBANK0:	
   344  0054                     _flag:	
   345  0054                     	ds	1
   346  0055                     _inc:	
   347  0055                     	ds	1
   348  0056                     _key_nav:	
   349  0056                     	ds	1
   350  0057                     _month_dec:	
   351  0057                     	ds	1
   352  0058                     _timer:	
   353  0058                     	ds	1
   354  0059                     _year_dec:	
   355  0059                     	ds	1
   356  005A                     _local_time:	
   357  005A                     	ds	7
   358  0061                     _date:	
   359  0061                     	ds	2
   360  0063                     _hour:	
   361  0063                     	ds	2
   362  0065                     _min:	
   363  0065                     	ds	2
   364  0067                     _month:	
   365  0067                     	ds	2
   366  0069                     _sec:	
   367  0069                     	ds	2
   368  006B                     _year:	
   369  006B                     	ds	2
   370                           
   371                           	psect	bssBANK1
   372  00A0                     __pbssBANK1:	
   373  00A0                     _lcd_msg:	
   374  00A0                     	ds	16
   375  00B0                     _lcd_msg1:	
   376  00B0                     	ds	16
   377                           
   378                           	psect	clrtext
   379  05B8                     clear_ram0:	
   380                           ;	Called with FSR containing the base address, and
   381                           ;	W with the last address+1
   382                           
   383  05B8  0064               	clrwdt	;clear the watchdog before getting into this loop
   384  05B9                     clrloop0:	
   385  05B9  0180               	clrf	0	;clear RAM location pointed to by FSR
   386  05BA  0A84               	incf	4,f	;increment pointer
   387  05BB  0604               	xorwf	4,w	;XOR with final address
   388  05BC  1903               	btfsc	3,2	;have we reached the end yet?
   389  05BD  3400               	retlw	0	;all done for this memory range, return
   390  05BE  0604               	xorwf	4,w	;XOR again to restore value
   391  05BF  2DB9               	goto	clrloop0	;do the next byte
   392                           
   393                           	psect	cstackBANK1
   394  00C0                     __pcstackBANK1:	
   395  00C0                     main@i:	
   396                           
   397                           ; 2 bytes @ 0x0
   398  00C0                     	ds	2
   399                           
   400                           	psect	cstackCOMMON
   401  0076                     __pcstackCOMMON:	
   402  0076                     ?_lcd_init:	
   403  0076                     ?_i2c_master_init:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0076                     ?_lcd_cmnt:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0076                     ?_inc_year:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0076                     ?_dec_year:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0076                     ?_main:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0076                     ?_interrupt_isr:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0076                     ??_interrupt_isr:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0076                     ?_lcd_data:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0076                     ?_master_tx:	
   428                           ; 0 bytes @ 0x0
   429                           
   430                           
   431                           ; 1 bytes @ 0x0
   432  0076                     	ds	6
   433                           
   434                           	psect	cstackBANK0
   435  0020                     __pcstackBANK0:	
   436  0020                     ??_i2c_master_init:	
   437  0020                     ??_master_tx:	
   438                           ; 0 bytes @ 0x0
   439                           
   440  0020                     ?_hex2char:	
   441                           ; 0 bytes @ 0x0
   442                           
   443  0020                     ?_delay:	
   444                           ; 0 bytes @ 0x0
   445                           
   446  0020                     ??_inc_year:	
   447                           ; 0 bytes @ 0x0
   448                           
   449  0020                     ??_dec_year:	
   450                           ; 0 bytes @ 0x0
   451                           
   452  0020                     ?_master_rx:	
   453                           ; 0 bytes @ 0x0
   454                           
   455  0020                     ?___lwdiv:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0020                     master_rx@rx_time:	
   459                           ; 2 bytes @ 0x0
   460                           
   461  0020                     hex2char@out:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0020                     delay@x:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0020                     ___lwdiv@divisor:	
   468                           ; 2 bytes @ 0x0
   469                           
   470                           
   471                           ; 2 bytes @ 0x0
   472  0020                     	ds	1
   473  0021                     ??_master_rx:	
   474  0021                     ??_hex2char:	
   475                           ; 0 bytes @ 0x1
   476                           
   477  0021                     master_tx@i2c_pkt:	
   478                           ; 0 bytes @ 0x1
   479                           
   480  0021                     inc_year@data_ptr:	
   481                           ; 1 bytes @ 0x1
   482                           
   483  0021                     dec_year@data_ptr:	
   484                           ; 1 bytes @ 0x1
   485                           
   486                           
   487                           ; 1 bytes @ 0x1
   488  0021                     	ds	1
   489  0022                     ??_delay:	
   490  0022                     master_rx@i2c_pkt:	
   491                           ; 0 bytes @ 0x2
   492                           
   493  0022                     ___lwdiv@dividend:	
   494                           ; 1 bytes @ 0x2
   495                           
   496                           
   497                           ; 2 bytes @ 0x2
   498  0022                     	ds	1
   499  0023                     hex2char@in:	
   500  0023                     delay@i:	
   501                           ; 1 bytes @ 0x3
   502                           
   503                           
   504                           ; 2 bytes @ 0x3
   505  0023                     	ds	1
   506  0024                     ??___lwdiv:	
   507                           
   508                           ; 0 bytes @ 0x4
   509  0024                     	ds	1
   510  0025                     ___lwdiv@counter:	
   511  0025                     delay@j:	
   512                           ; 1 bytes @ 0x5
   513                           
   514                           
   515                           ; 2 bytes @ 0x5
   516  0025                     	ds	1
   517  0026                     ___lwdiv@quotient:	
   518                           
   519                           ; 2 bytes @ 0x6
   520  0026                     	ds	1
   521  0027                     ??_lcd_cmnt:	
   522  0027                     ??_lcd_data:	
   523                           ; 0 bytes @ 0x7
   524                           
   525  0027                     lcd_cmnt@cmnt:	
   526                           ; 0 bytes @ 0x7
   527                           
   528  0027                     lcd_data@data:	
   529                           ; 1 bytes @ 0x7
   530                           
   531                           
   532                           ; 1 bytes @ 0x7
   533  0027                     	ds	1
   534  0028                     ??_lcd_init:	
   535  0028                     ?_uart_lcd_update:	
   536                           ; 0 bytes @ 0x8
   537                           
   538  0028                     ?___lwmod:	
   539                           ; 0 bytes @ 0x8
   540                           
   541  0028                     uart_lcd_update@len:	
   542                           ; 2 bytes @ 0x8
   543                           
   544  0028                     ___lwmod@divisor:	
   545                           ; 1 bytes @ 0x8
   546                           
   547                           
   548                           ; 2 bytes @ 0x8
   549  0028                     	ds	1
   550  0029                     ??_uart_lcd_update:	
   551                           
   552                           ; 0 bytes @ 0x9
   553  0029                     	ds	1
   554  002A                     uart_lcd_update@data:	
   555  002A                     ___lwmod@dividend:	
   556                           ; 1 bytes @ 0xA
   557                           
   558                           
   559                           ; 2 bytes @ 0xA
   560  002A                     	ds	1
   561  002B                     uart_lcd_update@i:	
   562                           
   563                           ; 2 bytes @ 0xB
   564  002B                     	ds	1
   565  002C                     ??___lwmod:	
   566                           
   567                           ; 0 bytes @ 0xC
   568  002C                     	ds	1
   569  002D                     ___lwmod@counter:	
   570                           
   571                           ; 1 bytes @ 0xD
   572  002D                     	ds	1
   573  002E                     ?_sprintf:	
   574  002E                     sprintf@f:	
   575                           ; 2 bytes @ 0xE
   576                           
   577                           
   578                           ; 1 bytes @ 0xE
   579  002E                     	ds	13
   580  003B                     ??_sprintf:	
   581                           
   582                           ; 0 bytes @ 0x1B
   583  003B                     	ds	3
   584  003E                     sprintf@ap:	
   585                           
   586                           ; 1 bytes @ 0x1E
   587  003E                     	ds	1
   588  003F                     sprintf@flag:	
   589                           
   590                           ; 1 bytes @ 0x1F
   591  003F                     	ds	1
   592  0040                     sprintf@prec:	
   593                           
   594                           ; 1 bytes @ 0x20
   595  0040                     	ds	1
   596  0041                     sprintf@_val:	
   597                           
   598                           ; 4 bytes @ 0x21
   599  0041                     	ds	4
   600  0045                     sprintf@sp:	
   601                           
   602                           ; 1 bytes @ 0x25
   603  0045                     	ds	1
   604  0046                     sprintf@c:	
   605                           
   606                           ; 1 bytes @ 0x26
   607  0046                     	ds	1
   608  0047                     ??_main:	
   609                           
   610                           ; 0 bytes @ 0x27
   611  0047                     	ds	13
   612                           
   613                           	psect	maintext
   614  002E                     __pmaintext:	
   615 ;;
   616 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
   617 ;;
   618 ;; *************** function _main *****************
   619 ;; Defined at:
   620 ;;		line 23 in file "i2c_driver.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  i               2    0[BANK1 ] int 
   625 ;; Return value:  Size  Location     Type
   626 ;;		None               void
   627 ;; Registers used:
   628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 17F/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       0       2       0       0
   636 ;;      Temps:          0      13       0       0       0
   637 ;;      Totals:         0      13       2       0       0
   638 ;;Total ram usage:       15 bytes
   639 ;; Hardware stack levels required when called:    4
   640 ;; This function calls:
   641 ;;		_dec_year
   642 ;;		_delay
   643 ;;		_hex2char
   644 ;;		_i2c_master_init
   645 ;;		_inc_year
   646 ;;		_lcd_cmnt
   647 ;;		_lcd_init
   648 ;;		_master_rx
   649 ;;		_master_tx
   650 ;;		_sprintf
   651 ;;		_uart_lcd_update
   652 ;; This function is called by:
   653 ;;		Startup code after reset
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _main
   659  002E                     _main:	
   660                           
   661                           ;i2c_driver.c: 27: TRISD=0X00;
   662                           
   663                           ;incstack = 0
   664                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   665  002E  1683               	bsf	3,5	;RP0=1, select bank1
   666  002F  1303               	bcf	3,6	;RP1=0, select bank1
   667  0030  0188               	clrf	8	;volatile
   668                           
   669                           ;i2c_driver.c: 28: TRISE=0X00;
   670  0031  0189               	clrf	9	;volatile
   671                           
   672                           ;i2c_driver.c: 29: TRISB=0XFF;
   673  0032  30FF               	movlw	255
   674  0033  0086               	movwf	6	;volatile
   675                           
   676                           ;i2c_driver.c: 30: TRISA=0X00;
   677  0034  0185               	clrf	5	;volatile
   678                           
   679                           ;i2c_driver.c: 31: PORTD=0X00;
   680  0035  1283               	bcf	3,5	;RP0=0, select bank0
   681  0036  1303               	bcf	3,6	;RP1=0, select bank0
   682  0037  0188               	clrf	8	;volatile
   683                           
   684                           ;i2c_driver.c: 32: RBIE=1;
   685  0038  158B               	bsf	11,3	;volatile
   686                           
   687                           ;i2c_driver.c: 33: OPTION_REG=0XB0;
   688  0039  30B0               	movlw	176
   689  003A  1683               	bsf	3,5	;RP0=1, select bank1
   690  003B  1303               	bcf	3,6	;RP1=0, select bank1
   691  003C  0081               	movwf	1	;volatile
   692                           
   693                           ;i2c_driver.c: 37: i2c_pkt.address=0x68;
   694  003D  3068               	movlw	104
   695  003E  1283               	bcf	3,5	;RP0=0, select bank0
   696  003F  1303               	bcf	3,6	;RP1=0, select bank0
   697  0040  00C7               	movwf	??_main
   698  0041  0847               	movf	??_main,w
   699  0042  00ED               	movwf	_i2c_pkt
   700                           
   701                           ;i2c_driver.c: 38: i2c_pkt.data=0x00;
   702  0043  01EE               	clrf	_i2c_pkt+1
   703                           
   704                           ;i2c_driver.c: 39: i2c_pkt.ack =0;
   705  0044  01EF               	clrf	_i2c_pkt+2
   706                           
   707                           ;i2c_driver.c: 41: lcd_init();
   708  0045  120A  118A  2548  120A  118A  	fcall	_lcd_init
   709                           
   710                           ;i2c_driver.c: 42: i2c_master_init();
   711  004A  120A  118A  25A7  120A  118A  	fcall	_i2c_master_init
   712  004F                     l1838:	
   713                           ;i2c_driver.c: 44: while(1)
   714                           
   715                           
   716                           ;i2c_driver.c: 45: {
   717                           ;i2c_driver.c: 47: int i;
   718                           ;i2c_driver.c: 50: master_tx(&i2c_pkt);
   719  004F  306D               	movlw	_i2c_pkt& (0+255)
   720  0050  120A  118A  23AA  120A  118A  	fcall	_master_tx
   721                           
   722                           ;i2c_driver.c: 51: for(i=0,timer=(int_u8 *)&local_time;i<7;i++,timer++)
   723  0055  1683               	bsf	3,5	;RP0=1, select bank1
   724  0056  1303               	bcf	3,6	;RP1=0, select bank1
   725  0057  01C0               	clrf	main@i^(0+128)
   726  0058  01C1               	clrf	(main@i+1)^(0+128)
   727  0059  305A               	movlw	_local_time& (0+255)
   728  005A  1283               	bcf	3,5	;RP0=0, select bank0
   729  005B  1303               	bcf	3,6	;RP1=0, select bank0
   730  005C  00C7               	movwf	??_main
   731  005D  0847               	movf	??_main,w
   732  005E  00D8               	movwf	_timer
   733  005F  1683               	bsf	3,5	;RP0=1, select bank1
   734  0060  1303               	bcf	3,6	;RP1=0, select bank1
   735  0061  0841               	movf	(main@i+1)^(0+128),w
   736  0062  3A80               	xorlw	128
   737  0063  00FF               	movwf	127
   738  0064  3080               	movlw	128
   739  0065  027F               	subwf	127,w
   740  0066  1D03               	skipz
   741  0067  286A               	goto	u1415
   742  0068  3007               	movlw	7
   743  0069  0240               	subwf	main@i^(0+128),w
   744  006A                     u1415:	
   745  006A  1803               	btfsc	3,0
   746  006B  2893               	goto	l1856
   747  006C                     l1848:	
   748                           
   749                           ;i2c_driver.c: 52: master_rx(&i2c_pkt,timer);
   750  006C  1283               	bcf	3,5	;RP0=0, select bank0
   751  006D  1303               	bcf	3,6	;RP1=0, select bank0
   752  006E  0858               	movf	_timer,w
   753  006F  00C7               	movwf	??_main
   754  0070  0847               	movf	??_main,w
   755  0071  00A0               	movwf	master_rx@rx_time
   756  0072  306D               	movlw	_i2c_pkt& (0+255)
   757  0073  120A  118A  2355  120A  118A  	fcall	_master_rx
   758  0078  3001               	movlw	1
   759  0079  1683               	bsf	3,5	;RP0=1, select bank1
   760  007A  1303               	bcf	3,6	;RP1=0, select bank1
   761  007B  07C0               	addwf	main@i^(0+128),f
   762  007C  1803               	skipnc
   763  007D  0AC1               	incf	(main@i+1)^(0+128),f
   764  007E  3000               	movlw	0
   765  007F  07C1               	addwf	(main@i+1)^(0+128),f
   766  0080  3001               	movlw	1
   767  0081  1283               	bcf	3,5	;RP0=0, select bank0
   768  0082  1303               	bcf	3,6	;RP1=0, select bank0
   769  0083  00C7               	movwf	??_main
   770  0084  0847               	movf	??_main,w
   771  0085  07D8               	addwf	_timer,f
   772  0086  1683               	bsf	3,5	;RP0=1, select bank1
   773  0087  1303               	bcf	3,6	;RP1=0, select bank1
   774  0088  0841               	movf	(main@i+1)^(0+128),w
   775  0089  3A80               	xorlw	128
   776  008A  00FF               	movwf	127
   777  008B  3080               	movlw	128
   778  008C  027F               	subwf	127,w
   779  008D  1D03               	skipz
   780  008E  2891               	goto	u1425
   781  008F  3007               	movlw	7
   782  0090  0240               	subwf	main@i^(0+128),w
   783  0091                     u1425:	
   784  0091  1C03               	skipc
   785  0092  286C               	goto	l1848
   786  0093                     l1856:	
   787                           
   788                           ;i2c_driver.c: 55: hex2char(local_time.HH,hour);
   789  0093  3063               	movlw	_hour& (0+255)
   790  0094  1283               	bcf	3,5	;RP0=0, select bank0
   791  0095  1303               	bcf	3,6	;RP1=0, select bank0
   792  0096  00C7               	movwf	??_main
   793  0097  0847               	movf	??_main,w
   794  0098  00A0               	movwf	hex2char@out
   795  0099  085C               	movf	_local_time+2,w
   796  009A  120A  118A  2569  120A  118A  	fcall	_hex2char
   797                           
   798                           ;i2c_driver.c: 56: hex2char(local_time.MM,min);
   799  009F  3065               	movlw	_min& (0+255)
   800  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   801  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   802  00A2  00C7               	movwf	??_main
   803  00A3  0847               	movf	??_main,w
   804  00A4  00A0               	movwf	hex2char@out
   805  00A5  085B               	movf	_local_time+1,w
   806  00A6  120A  118A  2569  120A  118A  	fcall	_hex2char
   807                           
   808                           ;i2c_driver.c: 57: hex2char(local_time.SS,sec);
   809  00AB  3069               	movlw	_sec& (0+255)
   810  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   811  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   812  00AE  00C7               	movwf	??_main
   813  00AF  0847               	movf	??_main,w
   814  00B0  00A0               	movwf	hex2char@out
   815  00B1  085A               	movf	_local_time,w
   816  00B2  120A  118A  2569  120A  118A  	fcall	_hex2char
   817                           
   818                           ;i2c_driver.c: 59: sprintf(lcd_msg,"Time: %d%d-%d%d-%d%d  ",hour[1],hour[0],min[1],min[0
      +                          ],sec[1],sec[0]);
   819  00B7  300B               	movlw	(STR_1-__stringbase)& (0+255)
   820  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   821  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   822  00BA  00C7               	movwf	??_main
   823  00BB  0847               	movf	??_main,w
   824  00BC  00AE               	movwf	sprintf@f
   825  00BD  0864               	movf	_hour+1,w
   826  00BE  00C8               	movwf	??_main+1
   827  00BF  01C9               	clrf	??_main+2
   828  00C0  0848               	movf	??_main+1,w
   829  00C1  00AF               	movwf	?_sprintf+1
   830  00C2  0849               	movf	??_main+2,w
   831  00C3  00B0               	movwf	?_sprintf+2
   832  00C4  0863               	movf	_hour,w
   833  00C5  00CA               	movwf	??_main+3
   834  00C6  01CB               	clrf	??_main+4
   835  00C7  084A               	movf	??_main+3,w
   836  00C8  00B1               	movwf	?_sprintf+3
   837  00C9  084B               	movf	??_main+4,w
   838  00CA  00B2               	movwf	?_sprintf+4
   839  00CB  0866               	movf	_min+1,w
   840  00CC  00CC               	movwf	??_main+5
   841  00CD  01CD               	clrf	??_main+6
   842  00CE  084C               	movf	??_main+5,w
   843  00CF  00B3               	movwf	?_sprintf+5
   844  00D0  084D               	movf	??_main+6,w
   845  00D1  00B4               	movwf	?_sprintf+6
   846  00D2  0865               	movf	_min,w
   847  00D3  00CE               	movwf	??_main+7
   848  00D4  01CF               	clrf	??_main+8
   849  00D5  084E               	movf	??_main+7,w
   850  00D6  00B5               	movwf	?_sprintf+7
   851  00D7  084F               	movf	??_main+8,w
   852  00D8  00B6               	movwf	?_sprintf+8
   853  00D9  086A               	movf	_sec+1,w
   854  00DA  00D0               	movwf	??_main+9
   855  00DB  01D1               	clrf	??_main+10
   856  00DC  0850               	movf	??_main+9,w
   857  00DD  00B7               	movwf	?_sprintf+9
   858  00DE  0851               	movf	??_main+10,w
   859  00DF  00B8               	movwf	?_sprintf+10
   860  00E0  0869               	movf	_sec,w
   861  00E1  00D2               	movwf	??_main+11
   862  00E2  01D3               	clrf	??_main+12
   863  00E3  0852               	movf	??_main+11,w
   864  00E4  00B9               	movwf	?_sprintf+11
   865  00E5  0853               	movf	??_main+12,w
   866  00E6  00BA               	movwf	?_sprintf+12
   867  00E7  30A0               	movlw	_lcd_msg& (0+255)
   868  00E8  120A  118A  21F1  120A  118A  	fcall	_sprintf
   869                           
   870                           ;i2c_driver.c: 60: lcd_cmnt(0x80);
   871  00ED  3080               	movlw	128
   872  00EE  120A  118A  2595  120A  118A  	fcall	_lcd_cmnt
   873                           
   874                           ;i2c_driver.c: 61: uart_lcd_update(lcd_msg,sizeof(lcd_msg));
   875  00F3  3010               	movlw	16
   876  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   877  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   878  00F6  00C7               	movwf	??_main
   879  00F7  0847               	movf	??_main,w
   880  00F8  00A8               	movwf	uart_lcd_update@len
   881  00F9  30A0               	movlw	_lcd_msg& (0+255)
   882  00FA  120A  118A  2521  120A  118A  	fcall	_uart_lcd_update
   883                           
   884                           ;i2c_driver.c: 62: hex2char(local_time.date,date);
   885  00FF  3061               	movlw	_date& (0+255)
   886  0100  1283               	bcf	3,5	;RP0=0, select bank0
   887  0101  1303               	bcf	3,6	;RP1=0, select bank0
   888  0102  00C7               	movwf	??_main
   889  0103  0847               	movf	??_main,w
   890  0104  00A0               	movwf	hex2char@out
   891  0105  085E               	movf	_local_time+4,w
   892  0106  120A  118A  2569  120A  118A  	fcall	_hex2char
   893                           
   894                           ;i2c_driver.c: 63: hex2char(local_time.month,month);
   895  010B  3067               	movlw	_month& (0+255)
   896  010C  1283               	bcf	3,5	;RP0=0, select bank0
   897  010D  1303               	bcf	3,6	;RP1=0, select bank0
   898  010E  00C7               	movwf	??_main
   899  010F  0847               	movf	??_main,w
   900  0110  00A0               	movwf	hex2char@out
   901  0111  085F               	movf	_local_time+5,w
   902  0112  120A  118A  2569  120A  118A  	fcall	_hex2char
   903                           
   904                           ;i2c_driver.c: 64: hex2char(local_time.year,year);
   905  0117  306B               	movlw	_year& (0+255)
   906  0118  1283               	bcf	3,5	;RP0=0, select bank0
   907  0119  1303               	bcf	3,6	;RP1=0, select bank0
   908  011A  00C7               	movwf	??_main
   909  011B  0847               	movf	??_main,w
   910  011C  00A0               	movwf	hex2char@out
   911  011D  0860               	movf	_local_time+6,w
   912  011E  120A  118A  2569  120A  118A  	fcall	_hex2char
   913                           
   914                           ;i2c_driver.c: 65: sprintf(lcd_msg1,"Date: %d%d-%d%d-%d%d  ",date[1],date[0],month[1],mo
      +                          nth[0],year[1],year[0]);
   915  0123  3022               	movlw	(STR_2-__stringbase)& (0+255)
   916  0124  1283               	bcf	3,5	;RP0=0, select bank0
   917  0125  1303               	bcf	3,6	;RP1=0, select bank0
   918  0126  00C7               	movwf	??_main
   919  0127  0847               	movf	??_main,w
   920  0128  00AE               	movwf	sprintf@f
   921  0129  0862               	movf	_date+1,w
   922  012A  00C8               	movwf	??_main+1
   923  012B  01C9               	clrf	??_main+2
   924  012C  0848               	movf	??_main+1,w
   925  012D  00AF               	movwf	?_sprintf+1
   926  012E  0849               	movf	??_main+2,w
   927  012F  00B0               	movwf	?_sprintf+2
   928  0130  0861               	movf	_date,w
   929  0131  00CA               	movwf	??_main+3
   930  0132  01CB               	clrf	??_main+4
   931  0133  084A               	movf	??_main+3,w
   932  0134  00B1               	movwf	?_sprintf+3
   933  0135  084B               	movf	??_main+4,w
   934  0136  00B2               	movwf	?_sprintf+4
   935  0137  0868               	movf	_month+1,w
   936  0138  00CC               	movwf	??_main+5
   937  0139  01CD               	clrf	??_main+6
   938  013A  084C               	movf	??_main+5,w
   939  013B  00B3               	movwf	?_sprintf+5
   940  013C  084D               	movf	??_main+6,w
   941  013D  00B4               	movwf	?_sprintf+6
   942  013E  0867               	movf	_month,w
   943  013F  00CE               	movwf	??_main+7
   944  0140  01CF               	clrf	??_main+8
   945  0141  084E               	movf	??_main+7,w
   946  0142  00B5               	movwf	?_sprintf+7
   947  0143  084F               	movf	??_main+8,w
   948  0144  00B6               	movwf	?_sprintf+8
   949  0145  086C               	movf	_year+1,w
   950  0146  00D0               	movwf	??_main+9
   951  0147  01D1               	clrf	??_main+10
   952  0148  0850               	movf	??_main+9,w
   953  0149  00B7               	movwf	?_sprintf+9
   954  014A  0851               	movf	??_main+10,w
   955  014B  00B8               	movwf	?_sprintf+10
   956  014C  086B               	movf	_year,w
   957  014D  00D2               	movwf	??_main+11
   958  014E  01D3               	clrf	??_main+12
   959  014F  0852               	movf	??_main+11,w
   960  0150  00B9               	movwf	?_sprintf+11
   961  0151  0853               	movf	??_main+12,w
   962  0152  00BA               	movwf	?_sprintf+12
   963  0153  30B0               	movlw	_lcd_msg1& (0+255)
   964  0154  120A  118A  21F1  120A  118A  	fcall	_sprintf
   965                           
   966                           ;i2c_driver.c: 66: lcd_cmnt(0xC0);
   967  0159  30C0               	movlw	192
   968  015A  120A  118A  2595  120A  118A  	fcall	_lcd_cmnt
   969                           
   970                           ;i2c_driver.c: 67: uart_lcd_update(lcd_msg1,sizeof(lcd_msg1));
   971  015F  3010               	movlw	16
   972  0160  1283               	bcf	3,5	;RP0=0, select bank0
   973  0161  1303               	bcf	3,6	;RP1=0, select bank0
   974  0162  00C7               	movwf	??_main
   975  0163  0847               	movf	??_main,w
   976  0164  00A8               	movwf	uart_lcd_update@len
   977  0165  30B0               	movlw	_lcd_msg1& (0+255)
   978  0166  120A  118A  2521  120A  118A  	fcall	_uart_lcd_update
   979                           
   980                           ;i2c_driver.c: 68: delay(100);
   981  016B  3064               	movlw	100
   982  016C  1283               	bcf	3,5	;RP0=0, select bank0
   983  016D  1303               	bcf	3,6	;RP1=0, select bank0
   984  016E  00A0               	movwf	delay@x
   985  016F  3000               	movlw	0
   986  0170  00A1               	movwf	delay@x+1
   987  0171  120A  118A  246A  120A  118A  	fcall	_delay
   988                           
   989                           ;i2c_driver.c: 71: while(flag)
   990  0176  2987               	goto	l1898
   991  0177                     l1884:	
   992                           ;i2c_driver.c: 90: {
   993                           ;i2c_driver.c: 93: case DOWN:
   994                           
   995                           ;i2c_driver.c: 89: switch(key_nav)
   996                           
   997                           
   998                           ;i2c_driver.c: 94: inc_year(year);
   999  0177  306B               	movlw	_year& (0+255)
  1000  0178  120A  118A  24CB  120A  118A  	fcall	_inc_year
  1001  017D  2984               	goto	l1890
  1002  017E                     l1888:	
  1003                           ;i2c_driver.c: 98: case UP:
  1004                           
  1005                           ;i2c_driver.c: 96: break;
  1006                           
  1007                           ;i2c_driver.c: 95: key_nav=0;
  1008                           
  1009                           
  1010                           ;i2c_driver.c: 99: dec_year(year);
  1011  017E  306B               	movlw	_year& (0+255)
  1012  017F  120A  118A  249C  120A  118A  	fcall	_dec_year
  1013  0184                     l1890:	
  1014                           
  1015                           ;i2c_driver.c: 100: key_nav=0;
  1016  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0185  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0186                     l1892:	
  1019                           ;i2c_driver.c: 103: case SET_KEY:
  1020                           
  1021                           ;i2c_driver.c: 101: break;
  1022                           
  1023                           
  1024                           ;i2c_driver.c: 105: key_nav=0;
  1025  0186  01D6               	clrf	_key_nav
  1026  0187                     l1898:	
  1027                           ;i2c_driver.c: 107: }
  1028                           
  1029                           ;i2c_driver.c: 106: break;
  1030                           
  1031  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0189  08D4               	movf	_flag,f
  1034  018A  1903               	btfsc	3,2
  1035  018B  29EE               	goto	l1900
  1036                           
  1037                           ;i2c_driver.c: 72: {
  1038                           ;i2c_driver.c: 81: uart_lcd_update(lcd_msg,sizeof(lcd_msg));
  1039  018C  3010               	movlw	16
  1040  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1041  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1042  018F  00C7               	movwf	??_main
  1043  0190  0847               	movf	??_main,w
  1044  0191  00A8               	movwf	uart_lcd_update@len
  1045  0192  30A0               	movlw	_lcd_msg& (0+255)
  1046  0193  120A  118A  2521  120A  118A  	fcall	_uart_lcd_update
  1047                           
  1048                           ;i2c_driver.c: 82: sprintf(lcd_msg1,"Date: %d%d-%d%d-%d%d<-",date[1],date[0],month[1],mo
      +                          nth[0],year[1],year[0]);
  1049  0198  3039               	movlw	(STR_3-__stringbase)& (0+255)
  1050  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1051  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1052  019B  00C7               	movwf	??_main
  1053  019C  0847               	movf	??_main,w
  1054  019D  00AE               	movwf	sprintf@f
  1055  019E  0862               	movf	_date+1,w
  1056  019F  00C8               	movwf	??_main+1
  1057  01A0  01C9               	clrf	??_main+2
  1058  01A1  0848               	movf	??_main+1,w
  1059  01A2  00AF               	movwf	?_sprintf+1
  1060  01A3  0849               	movf	??_main+2,w
  1061  01A4  00B0               	movwf	?_sprintf+2
  1062  01A5  0861               	movf	_date,w
  1063  01A6  00CA               	movwf	??_main+3
  1064  01A7  01CB               	clrf	??_main+4
  1065  01A8  084A               	movf	??_main+3,w
  1066  01A9  00B1               	movwf	?_sprintf+3
  1067  01AA  084B               	movf	??_main+4,w
  1068  01AB  00B2               	movwf	?_sprintf+4
  1069  01AC  0868               	movf	_month+1,w
  1070  01AD  00CC               	movwf	??_main+5
  1071  01AE  01CD               	clrf	??_main+6
  1072  01AF  084C               	movf	??_main+5,w
  1073  01B0  00B3               	movwf	?_sprintf+5
  1074  01B1  084D               	movf	??_main+6,w
  1075  01B2  00B4               	movwf	?_sprintf+6
  1076  01B3  0867               	movf	_month,w
  1077  01B4  00CE               	movwf	??_main+7
  1078  01B5  01CF               	clrf	??_main+8
  1079  01B6  084E               	movf	??_main+7,w
  1080  01B7  00B5               	movwf	?_sprintf+7
  1081  01B8  084F               	movf	??_main+8,w
  1082  01B9  00B6               	movwf	?_sprintf+8
  1083  01BA  086C               	movf	_year+1,w
  1084  01BB  00D0               	movwf	??_main+9
  1085  01BC  01D1               	clrf	??_main+10
  1086  01BD  0850               	movf	??_main+9,w
  1087  01BE  00B7               	movwf	?_sprintf+9
  1088  01BF  0851               	movf	??_main+10,w
  1089  01C0  00B8               	movwf	?_sprintf+10
  1090  01C1  086B               	movf	_year,w
  1091  01C2  00D2               	movwf	??_main+11
  1092  01C3  01D3               	clrf	??_main+12
  1093  01C4  0852               	movf	??_main+11,w
  1094  01C5  00B9               	movwf	?_sprintf+11
  1095  01C6  0853               	movf	??_main+12,w
  1096  01C7  00BA               	movwf	?_sprintf+12
  1097  01C8  30B0               	movlw	_lcd_msg1& (0+255)
  1098  01C9  120A  118A  21F1  120A  118A  	fcall	_sprintf
  1099                           
  1100                           ;i2c_driver.c: 83: lcd_cmnt(0xC0);
  1101  01CE  30C0               	movlw	192
  1102  01CF  120A  118A  2595  120A  118A  	fcall	_lcd_cmnt
  1103                           
  1104                           ;i2c_driver.c: 84: uart_lcd_update(lcd_msg1,sizeof(lcd_msg1));
  1105  01D4  3010               	movlw	16
  1106  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1107  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1108  01D7  00C7               	movwf	??_main
  1109  01D8  0847               	movf	??_main,w
  1110  01D9  00A8               	movwf	uart_lcd_update@len
  1111  01DA  30B0               	movlw	_lcd_msg1& (0+255)
  1112  01DB  120A  118A  2521  120A  118A  	fcall	_uart_lcd_update
  1113  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1114  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1115  01E2  0856               	movf	_key_nav,w
  1116                           
  1117                           ; Switch size 1, requested type "space"
  1118                           ; Number of cases is 3, Range of values is 2 to 8
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte           10     6 (average)
  1122                           ; direct_byte           32    11 (fixed)
  1123                           ; jumptable            263     9 (fixed)
  1124                           ;	Chosen strategy is simple_byte
  1125  01E3  3A02               	xorlw	2	; case 2
  1126  01E4  1903               	skipnz
  1127  01E5  2977               	goto	l1884
  1128  01E6  3A06               	xorlw	6	; case 4
  1129  01E7  1903               	skipnz
  1130  01E8  297E               	goto	l1888
  1131  01E9  3A0C               	xorlw	12	; case 8
  1132  01EA  1903               	skipnz
  1133  01EB  2986               	goto	l1892
  1134  01EC  2987               	goto	l1898
  1135  01ED  2987               	goto	l1898
  1136  01EE                     l1900:	
  1137                           
  1138                           ;i2c_driver.c: 109: }
  1139                           ;i2c_driver.c: 110: PORTA=1;
  1140  01EE  3001               	movlw	1
  1141  01EF  0085               	movwf	5	;volatile
  1142  01F0  284F               	goto	l1838
  1143  01F1                     __end_of_main:	
  1144                           
  1145                           	psect	text1
  1146  0521                     __ptext1:	
  1147 ;; *************** function _uart_lcd_update *****************
  1148 ;; Defined at:
  1149 ;;		line 43 in file "lcd_driver.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  data            1    wreg     PTR unsigned char 
  1152 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1153 ;;  len             1    8[BANK0 ] unsigned char 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  data            1   10[BANK0 ] PTR unsigned char 
  1156 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1157 ;;  i               2   11[BANK0 ] int 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;		None               void
  1160 ;; Registers used:
  1161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1167 ;;      Params:         0       1       0       0       0
  1168 ;;      Locals:         0       3       0       0       0
  1169 ;;      Temps:          0       1       0       0       0
  1170 ;;      Totals:         0       5       0       0       0
  1171 ;;Total ram usage:        5 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    3
  1174 ;; This function calls:
  1175 ;;		_lcd_data
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           
  1182                           ;psect for function _uart_lcd_update
  1183  0521                     _uart_lcd_update:	
  1184                           
  1185                           ;incstack = 0
  1186                           ; Regs used in _uart_lcd_update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1187                           ;uart_lcd_update@data stored from wreg
  1188  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0523  00AA               	movwf	uart_lcd_update@data
  1191                           
  1192                           ;lcd_driver.c: 46: for(i=0;i<len;i++)
  1193  0524  01AB               	clrf	uart_lcd_update@i
  1194  0525  01AC               	clrf	uart_lcd_update@i+1
  1195  0526                     l1790:	
  1196  0526  082C               	movf	uart_lcd_update@i+1,w
  1197  0527  3A80               	xorlw	128
  1198  0528  00A9               	movwf	??_uart_lcd_update
  1199  0529  3080               	movlw	128
  1200  052A  0229               	subwf	??_uart_lcd_update,w
  1201  052B  1D03               	skipz
  1202  052C  2D2F               	goto	u1365
  1203  052D  0828               	movf	uart_lcd_update@len,w
  1204  052E  022B               	subwf	uart_lcd_update@i,w
  1205  052F                     u1365:	
  1206  052F  1803               	btfsc	3,0
  1207  0530  0008               	return
  1208                           
  1209                           ;lcd_driver.c: 47: {
  1210                           ;lcd_driver.c: 48: lcd_data(*(data+i));
  1211  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0533  082B               	movf	uart_lcd_update@i,w
  1214  0534  072A               	addwf	uart_lcd_update@data,w
  1215  0535  00A9               	movwf	??_uart_lcd_update
  1216  0536  0829               	movf	??_uart_lcd_update,w
  1217  0537  0084               	movwf	4
  1218  0538  1383               	bcf	3,7	;select IRP bank0
  1219  0539  0800               	movf	0,w
  1220  053A  120A  118A  2583  120A  118A  	fcall	_lcd_data
  1221  053F  3001               	movlw	1
  1222  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0542  07AB               	addwf	uart_lcd_update@i,f
  1225  0543  1803               	skipnc
  1226  0544  0AAC               	incf	uart_lcd_update@i+1,f
  1227  0545  3000               	movlw	0
  1228  0546  07AC               	addwf	uart_lcd_update@i+1,f
  1229  0547  2D26               	goto	l1790
  1230  0548                     __end_of_uart_lcd_update:	
  1231                           
  1232                           	psect	text2
  1233  0583                     __ptext2:	
  1234 ;; *************** function _lcd_data *****************
  1235 ;; Defined at:
  1236 ;;		line 35 in file "lcd_driver.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  data            1    wreg     unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  data            1    7[BANK0 ] unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;		None               void
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       0       0       0       0
  1251 ;;      Locals:         0       1       0       0       0
  1252 ;;      Temps:          0       0       0       0       0
  1253 ;;      Totals:         0       1       0       0       0
  1254 ;;Total ram usage:        1 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    2
  1257 ;; This function calls:
  1258 ;;		_delay
  1259 ;; This function is called by:
  1260 ;;		_uart_lcd_update
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           
  1265                           ;psect for function _lcd_data
  1266  0583                     _lcd_data:	
  1267                           
  1268                           ;incstack = 0
  1269                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1270                           ;lcd_data@data stored from wreg
  1271  0583  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0584  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0585  00A7               	movwf	lcd_data@data
  1274                           
  1275                           ;lcd_driver.c: 37: PORTD=data;
  1276  0586  0827               	movf	lcd_data@data,w
  1277  0587  0088               	movwf	8	;volatile
  1278                           
  1279                           ;lcd_driver.c: 38: RE0=1;
  1280  0588  1409               	bsf	9,0	;volatile
  1281                           
  1282                           ;lcd_driver.c: 39: RE1=1;delay(10);RE1=0;;
  1283  0589  1489               	bsf	9,1	;volatile
  1284  058A  300A               	movlw	10
  1285  058B  00A0               	movwf	delay@x
  1286  058C  3000               	movlw	0
  1287  058D  00A1               	movwf	delay@x+1
  1288  058E  120A  118A  246A   	fcall	_delay
  1289  0591  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0592  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0593  1089               	bcf	9,1	;volatile
  1292  0594  0008               	return
  1293  0595                     __end_of_lcd_data:	
  1294                           
  1295                           	psect	text3
  1296  01F1                     __ptext3:	
  1297 ;; *************** function _sprintf *****************
  1298 ;; Defined at:
  1299 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  sp              1    wreg     PTR unsigned char 
  1302 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1303 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1304 ;;		 -> STR_3(23), STR_2(23), STR_1(23), 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  sp              1   37[BANK0 ] PTR unsigned char 
  1307 ;;		 -> lcd_msg1(16), lcd_msg(16), 
  1308 ;;  _val            4   33[BANK0 ] struct .
  1309 ;;  c               1   38[BANK0 ] char 
  1310 ;;  prec            1   32[BANK0 ] char 
  1311 ;;  flag            1   31[BANK0 ] unsigned char 
  1312 ;;  ap              1   30[BANK0 ] PTR void [1]
  1313 ;;		 -> ?_sprintf(2), 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  2   14[BANK0 ] int 
  1316 ;; Registers used:
  1317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         0      13       0       0       0
  1324 ;;      Locals:         0       9       0       0       0
  1325 ;;      Temps:          0       3       0       0       0
  1326 ;;      Totals:         0      25       0       0       0
  1327 ;;Total ram usage:       25 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    2
  1330 ;; This function calls:
  1331 ;;		___lwdiv
  1332 ;;		___lwmod
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _sprintf
  1340  01F1                     _sprintf:	
  1341                           
  1342                           ;incstack = 0
  1343                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1344                           ;sprintf@sp stored from wreg
  1345  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1346  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1347  01F3  00C5               	movwf	sprintf@sp
  1348                           
  1349                           ;doprnt.c: 494: va_list ap;
  1350                           ;doprnt.c: 499: signed char c;
  1351                           ;doprnt.c: 506: signed char prec;
  1352                           ;doprnt.c: 508: unsigned char flag;
  1353                           ;doprnt.c: 527: union {
  1354                           ;doprnt.c: 528: unsigned int _val;
  1355                           ;doprnt.c: 529: struct {
  1356                           ;doprnt.c: 530: const char * _cp;
  1357                           ;doprnt.c: 531: unsigned _len;
  1358                           ;doprnt.c: 532: } _str;
  1359                           ;doprnt.c: 533: } _val;
  1360                           ;doprnt.c: 542: *ap = __va_start();
  1361  01F4  302F               	movlw	(?_sprintf+1)& (0+255)
  1362  01F5  00BB               	movwf	??_sprintf
  1363  01F6  083B               	movf	??_sprintf,w
  1364  01F7  00BE               	movwf	sprintf@ap
  1365  01F8                     l1778:	
  1366                           ;doprnt.c: 545: while(c = *f++) {
  1367                           
  1368  01F8  3001               	movlw	1
  1369  01F9  07AE               	addwf	sprintf@f,f
  1370  01FA  30FF               	movlw	-1
  1371  01FB  072E               	addwf	sprintf@f,w
  1372  01FC  0084               	movwf	4
  1373  01FD  120A  118A  2300  120A  118A  	fcall	stringdir
  1374  0202  00BB               	movwf	??_sprintf
  1375  0203  083B               	movf	??_sprintf,w
  1376  0204  00C6               	movwf	sprintf@c
  1377  0205  08C6               	movf	sprintf@c,f
  1378  0206  1903               	btfsc	3,2
  1379  0207  2AC7               	goto	l1780
  1380                           
  1381                           ;doprnt.c: 547: if(c != '%')
  1382  0208  0846               	movf	sprintf@c,w
  1383  0209  3A25               	xorlw	37
  1384  020A  1903               	skipnz
  1385  020B  2A18               	goto	l1734
  1386                           
  1387                           ;doprnt.c: 549: {
  1388                           ;doprnt.c: 550: ((*sp++ = (c)));
  1389  020C  0846               	movf	sprintf@c,w
  1390  020D  00BB               	movwf	??_sprintf
  1391  020E  0845               	movf	sprintf@sp,w
  1392  020F  0084               	movwf	4
  1393  0210  083B               	movf	??_sprintf,w
  1394  0211  1383               	bcf	3,7	;select IRP bank0
  1395  0212  0080               	movwf	0
  1396  0213  3001               	movlw	1
  1397  0214  00BB               	movwf	??_sprintf
  1398  0215  083B               	movf	??_sprintf,w
  1399  0216  07C5               	addwf	sprintf@sp,f
  1400                           
  1401                           ;doprnt.c: 551: continue;
  1402  0217  29F8               	goto	l1778
  1403  0218                     l1734:	
  1404                           
  1405                           ;doprnt.c: 552: }
  1406                           ;doprnt.c: 557: flag = 0;
  1407  0218  01BF               	clrf	sprintf@flag
  1408                           
  1409                           ;doprnt.c: 831: }
  1410                           
  1411                           ;doprnt.c: 822: continue;
  1412                           
  1413                           ;doprnt.c: 811: default:
  1414                           
  1415                           ;doprnt.c: 707: case 'i':
  1416                           ;doprnt.c: 708: break;
  1417                           
  1418                           ;doprnt.c: 706: case 'd':
  1419                           
  1420                           ;doprnt.c: 647: goto alldone;
  1421                           
  1422                           ;doprnt.c: 646: case 0:
  1423                           
  1424                           ;doprnt.c: 644: switch(c = *f++) {
  1425  0219  3001               	movlw	1
  1426  021A  07AE               	addwf	sprintf@f,f
  1427  021B  30FF               	movlw	-1
  1428  021C  072E               	addwf	sprintf@f,w
  1429  021D  0084               	movwf	4
  1430  021E  120A  118A  2300  120A  118A  	fcall	stringdir
  1431  0223  00C6               	movwf	sprintf@c
  1432                           
  1433                           ; Switch size 1, requested type "space"
  1434                           ; Number of cases is 3, Range of values is 0 to 105
  1435                           ; switch strategies available:
  1436                           ; Name         Instructions Cycles
  1437                           ; simple_byte           10     6 (average)
  1438                           ; jumptable            260     6 (fixed)
  1439                           ;	Chosen strategy is simple_byte
  1440  0224  3A00               	xorlw	0	; case 0
  1441  0225  1903               	skipnz
  1442  0226  2AC7               	goto	l1780
  1443  0227  3A64               	xorlw	100	; case 100
  1444  0228  1903               	skipnz
  1445  0229  2A2E               	goto	l1740
  1446  022A  3A0D               	xorlw	13	; case 105
  1447  022B  1903               	skipnz
  1448  022C  2A2E               	goto	l1740
  1449  022D  29F8               	goto	l1778
  1450  022E                     l1740:	
  1451                           
  1452                           ;doprnt.c: 1262: {
  1453                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1454  022E  083E               	movf	sprintf@ap,w
  1455  022F  0084               	movwf	4
  1456  0230  1383               	bcf	3,7	;select IRP bank0
  1457  0231  0800               	movf	0,w
  1458  0232  00C1               	movwf	sprintf@_val
  1459  0233  0A84               	incf	4,f
  1460  0234  0800               	movf	0,w
  1461  0235  00C2               	movwf	sprintf@_val+1
  1462  0236  3002               	movlw	2
  1463  0237  00BB               	movwf	??_sprintf
  1464  0238  083B               	movf	??_sprintf,w
  1465  0239  07BE               	addwf	sprintf@ap,f
  1466                           
  1467                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  1468  023A  1FC2               	btfss	sprintf@_val+1,7
  1469  023B  2A45               	goto	l1750
  1470                           
  1471                           ;doprnt.c: 1271: flag |= 0x03;
  1472  023C  3003               	movlw	3
  1473  023D  00BB               	movwf	??_sprintf
  1474  023E  083B               	movf	??_sprintf,w
  1475  023F  04BF               	iorwf	sprintf@flag,f
  1476                           
  1477                           ;doprnt.c: 1272: _val._val = -_val._val;
  1478  0240  09C1               	comf	sprintf@_val,f
  1479  0241  09C2               	comf	sprintf@_val+1,f
  1480  0242  0AC1               	incf	sprintf@_val,f
  1481  0243  1903               	skipnz
  1482  0244  0AC2               	incf	sprintf@_val+1,f
  1483  0245                     l1750:	
  1484                           
  1485                           ;doprnt.c: 1273: }
  1486                           ;doprnt.c: 1275: }
  1487                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1488  0245  01C6               	clrf	sprintf@c
  1489  0246  0AC6               	incf	sprintf@c,f
  1490  0247  0846               	movf	sprintf@c,w
  1491  0248  3A05               	xorlw	5
  1492  0249  1903               	btfsc	3,2
  1493  024A  2A6C               	goto	l1762
  1494  024B                     l1754:	
  1495                           
  1496                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1497  024B  0846               	movf	sprintf@c,w
  1498  024C  00BB               	movwf	??_sprintf
  1499  024D  073B               	addwf	??_sprintf,w
  1500  024E  3E01               	addlw	low (_dpowers-__stringbase)
  1501  024F  0084               	movwf	4
  1502  0250  120A  118A  2300  120A  118A  	fcall	stringdir
  1503  0255  00BC               	movwf	??_sprintf+1
  1504  0256  120A  118A  2300  120A  118A  	fcall	stringdir
  1505  025B  00BD               	movwf	??_sprintf+2
  1506  025C  083D               	movf	??_sprintf+2,w
  1507  025D  0242               	subwf	sprintf@_val+1,w
  1508  025E  1D03               	skipz
  1509  025F  2A62               	goto	u1315
  1510  0260  083C               	movf	??_sprintf+1,w
  1511  0261  0241               	subwf	sprintf@_val,w
  1512  0262                     u1315:	
  1513  0262  1C03               	btfss	3,0
  1514  0263  2A6C               	goto	l1762
  1515                           
  1516                           ;doprnt.c: 1316: break;
  1517  0264  3001               	movlw	1
  1518  0265  00BB               	movwf	??_sprintf
  1519  0266  083B               	movf	??_sprintf,w
  1520  0267  07C6               	addwf	sprintf@c,f
  1521  0268  0846               	movf	sprintf@c,w
  1522  0269  3A05               	xorlw	5
  1523  026A  1D03               	skipz
  1524  026B  2A4B               	goto	l1754
  1525  026C                     l1762:	
  1526                           
  1527                           ;doprnt.c: 1431: {
  1528                           ;doprnt.c: 1447: if(flag & 0x03)
  1529  026C  083F               	movf	sprintf@flag,w
  1530  026D  3903               	andlw	3
  1531  026E  1903               	btfsc	3,2
  1532  026F  2A7B               	goto	l1768
  1533                           
  1534                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  1535  0270  302D               	movlw	45
  1536  0271  00BB               	movwf	??_sprintf
  1537  0272  0845               	movf	sprintf@sp,w
  1538  0273  0084               	movwf	4
  1539  0274  083B               	movf	??_sprintf,w
  1540  0275  1383               	bcf	3,7	;select IRP bank0
  1541  0276  0080               	movwf	0
  1542  0277  3001               	movlw	1
  1543  0278  00BB               	movwf	??_sprintf
  1544  0279  083B               	movf	??_sprintf,w
  1545  027A  07C5               	addwf	sprintf@sp,f
  1546  027B                     l1768:	
  1547                           
  1548                           ;doprnt.c: 1478: }
  1549                           ;doprnt.c: 1481: prec = c;
  1550  027B  0846               	movf	sprintf@c,w
  1551  027C  00BB               	movwf	??_sprintf
  1552  027D  083B               	movf	??_sprintf,w
  1553  027E  00C0               	movwf	sprintf@prec
  1554  027F                     l1776:	
  1555                           ;doprnt.c: 1483: while(prec--) {
  1556                           
  1557  027F  30FF               	movlw	-1
  1558  0280  00BB               	movwf	??_sprintf
  1559  0281  083B               	movf	??_sprintf,w
  1560  0282  07C0               	addwf	sprintf@prec,f
  1561  0283  0840               	movf	sprintf@prec,w
  1562  0284  3AFF               	xorlw	-1
  1563  0285  1903               	btfsc	3,2
  1564  0286  29F8               	goto	l1778
  1565                           
  1566                           ;doprnt.c: 1487: {
  1567                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  1568  0287  300A               	movlw	10
  1569  0288  00A8               	movwf	___lwmod@divisor
  1570  0289  3000               	movlw	0
  1571  028A  00A9               	movwf	___lwmod@divisor+1
  1572  028B  0840               	movf	sprintf@prec,w
  1573  028C  00BB               	movwf	??_sprintf
  1574  028D  073B               	addwf	??_sprintf,w
  1575  028E  3E01               	addlw	low (_dpowers-__stringbase)
  1576  028F  0084               	movwf	4
  1577  0290  120A  118A  2300  120A  118A  	fcall	stringdir
  1578  0295  00A0               	movwf	___lwdiv@divisor
  1579  0296  120A  118A  2300  120A  118A  	fcall	stringdir
  1580  029B  00A1               	movwf	___lwdiv@divisor+1
  1581  029C  0842               	movf	sprintf@_val+1,w
  1582  029D  01A3               	clrf	___lwdiv@dividend+1
  1583  029E  07A3               	addwf	___lwdiv@dividend+1,f
  1584  029F  0841               	movf	sprintf@_val,w
  1585  02A0  01A2               	clrf	___lwdiv@dividend
  1586  02A1  07A2               	addwf	___lwdiv@dividend,f
  1587  02A2  120A  118A  23F4  120A  118A  	fcall	___lwdiv
  1588  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1589  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1590  02A9  0821               	movf	?___lwdiv+1,w
  1591  02AA  01AB               	clrf	___lwmod@dividend+1
  1592  02AB  07AB               	addwf	___lwmod@dividend+1,f
  1593  02AC  0820               	movf	?___lwdiv,w
  1594  02AD  01AA               	clrf	___lwmod@dividend
  1595  02AE  07AA               	addwf	___lwmod@dividend,f
  1596  02AF  120A  118A  2434  120A  118A  	fcall	___lwmod
  1597  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1598  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1599  02B6  0828               	movf	?___lwmod,w
  1600  02B7  3E30               	addlw	48
  1601  02B8  00BC               	movwf	??_sprintf+1
  1602  02B9  083C               	movf	??_sprintf+1,w
  1603  02BA  00C6               	movwf	sprintf@c
  1604                           
  1605                           ;doprnt.c: 1532: }
  1606                           ;doprnt.c: 1533: ((*sp++ = (c)));
  1607  02BB  0846               	movf	sprintf@c,w
  1608  02BC  00BB               	movwf	??_sprintf
  1609  02BD  0845               	movf	sprintf@sp,w
  1610  02BE  0084               	movwf	4
  1611  02BF  083B               	movf	??_sprintf,w
  1612  02C0  1383               	bcf	3,7	;select IRP bank0
  1613  02C1  0080               	movwf	0
  1614  02C2  3001               	movlw	1
  1615  02C3  00BB               	movwf	??_sprintf
  1616  02C4  083B               	movf	??_sprintf,w
  1617  02C5  07C5               	addwf	sprintf@sp,f
  1618  02C6  2A7F               	goto	l1776
  1619  02C7                     l1780:	
  1620                           ;doprnt.c: 1534: }
  1621                           ;doprnt.c: 1542: }
  1622                           ;doprnt.c: 1544: alldone:
  1623                           
  1624                           
  1625                           ;doprnt.c: 1547: *sp = 0;
  1626  02C7  0845               	movf	sprintf@sp,w
  1627  02C8  0084               	movwf	4
  1628  02C9  1383               	bcf	3,7	;select IRP bank0
  1629  02CA  0180               	clrf	0
  1630  02CB  0008               	return
  1631  02CC                     __end_of_sprintf:	
  1632                           ;doprnt.c: 1549: return 0;
  1633                           ;	Return value of _sprintf is never used
  1634                           
  1635                           
  1636                           	psect	text4
  1637  0434                     __ptext4:	
  1638 ;; *************** function ___lwmod *****************
  1639 ;; Defined at:
  1640 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  divisor         2    8[BANK0 ] unsigned int 
  1643 ;;  dividend        2   10[BANK0 ] unsigned int 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  counter         1   13[BANK0 ] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  2    8[BANK0 ] unsigned int 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1655 ;;      Params:         0       4       0       0       0
  1656 ;;      Locals:         0       1       0       0       0
  1657 ;;      Temps:          0       1       0       0       0
  1658 ;;      Totals:         0       6       0       0       0
  1659 ;;Total ram usage:        6 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_sprintf
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           
  1670                           ;psect for function ___lwmod
  1671  0434                     ___lwmod:	
  1672                           
  1673                           ;incstack = 0
  1674                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1675  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0436  0829               	movf	___lwmod@divisor+1,w
  1678  0437  0428               	iorwf	___lwmod@divisor,w
  1679  0438  1903               	skipnz
  1680  0439  2C63               	goto	l1624
  1681  043A  01AD               	clrf	___lwmod@counter
  1682  043B  0AAD               	incf	___lwmod@counter,f
  1683  043C                     l1614:	
  1684  043C  1BA9               	btfsc	___lwmod@divisor+1,7
  1685  043D  2C4A               	goto	l1616
  1686  043E  3001               	movlw	1
  1687  043F                     u1125:	
  1688  043F  1003               	clrc
  1689  0440  0DA8               	rlf	___lwmod@divisor,f
  1690  0441  0DA9               	rlf	___lwmod@divisor+1,f
  1691  0442  3EFF               	addlw	-1
  1692  0443  1D03               	skipz
  1693  0444  2C3F               	goto	u1125
  1694  0445  3001               	movlw	1
  1695  0446  00AC               	movwf	??___lwmod
  1696  0447  082C               	movf	??___lwmod,w
  1697  0448  07AD               	addwf	___lwmod@counter,f
  1698  0449  2C3C               	goto	l1614
  1699  044A                     l1616:	
  1700  044A  0829               	movf	___lwmod@divisor+1,w
  1701  044B  022B               	subwf	___lwmod@dividend+1,w
  1702  044C  1D03               	skipz
  1703  044D  2C50               	goto	u1145
  1704  044E  0828               	movf	___lwmod@divisor,w
  1705  044F  022A               	subwf	___lwmod@dividend,w
  1706  0450                     u1145:	
  1707  0450  1C03               	skipc
  1708  0451  2C58               	goto	l1620
  1709  0452  0828               	movf	___lwmod@divisor,w
  1710  0453  02AA               	subwf	___lwmod@dividend,f
  1711  0454  0829               	movf	___lwmod@divisor+1,w
  1712  0455  1C03               	skipc
  1713  0456  03AB               	decf	___lwmod@dividend+1,f
  1714  0457  02AB               	subwf	___lwmod@dividend+1,f
  1715  0458                     l1620:	
  1716  0458  3001               	movlw	1
  1717  0459                     u1155:	
  1718  0459  1003               	clrc
  1719  045A  0CA9               	rrf	___lwmod@divisor+1,f
  1720  045B  0CA8               	rrf	___lwmod@divisor,f
  1721  045C  3EFF               	addlw	-1
  1722  045D  1D03               	skipz
  1723  045E  2C59               	goto	u1155
  1724  045F  3001               	movlw	1
  1725  0460  02AD               	subwf	___lwmod@counter,f
  1726  0461  1D03               	btfss	3,2
  1727  0462  2C4A               	goto	l1616
  1728  0463                     l1624:	
  1729  0463  082B               	movf	___lwmod@dividend+1,w
  1730  0464  01A9               	clrf	?___lwmod+1
  1731  0465  07A9               	addwf	?___lwmod+1,f
  1732  0466  082A               	movf	___lwmod@dividend,w
  1733  0467  01A8               	clrf	?___lwmod
  1734  0468  07A8               	addwf	?___lwmod,f
  1735  0469  0008               	return
  1736  046A                     __end_of___lwmod:	
  1737                           
  1738                           	psect	text5
  1739  03F4                     __ptext5:	
  1740 ;; *************** function ___lwdiv *****************
  1741 ;; Defined at:
  1742 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  divisor         2    0[BANK0 ] unsigned int 
  1745 ;;  dividend        2    2[BANK0 ] unsigned int 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  quotient        2    6[BANK0 ] unsigned int 
  1748 ;;  counter         1    5[BANK0 ] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  2    0[BANK0 ] unsigned int 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1758 ;;      Params:         0       4       0       0       0
  1759 ;;      Locals:         0       3       0       0       0
  1760 ;;      Temps:          0       1       0       0       0
  1761 ;;      Totals:         0       8       0       0       0
  1762 ;;Total ram usage:        8 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_sprintf
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function ___lwdiv
  1774  03F4                     ___lwdiv:	
  1775                           
  1776                           ;incstack = 0
  1777                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1778  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1779  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1780  03F6  01A6               	clrf	___lwdiv@quotient
  1781  03F7  01A7               	clrf	___lwdiv@quotient+1
  1782  03F8  0821               	movf	___lwdiv@divisor+1,w
  1783  03F9  0420               	iorwf	___lwdiv@divisor,w
  1784  03FA  1903               	skipnz
  1785  03FB  2C2D               	goto	l1602
  1786  03FC  01A5               	clrf	___lwdiv@counter
  1787  03FD  0AA5               	incf	___lwdiv@counter,f
  1788  03FE                     l1590:	
  1789  03FE  1BA1               	btfsc	___lwdiv@divisor+1,7
  1790  03FF  2C0C               	goto	l1592
  1791  0400  3001               	movlw	1
  1792  0401                     u1055:	
  1793  0401  1003               	clrc
  1794  0402  0DA0               	rlf	___lwdiv@divisor,f
  1795  0403  0DA1               	rlf	___lwdiv@divisor+1,f
  1796  0404  3EFF               	addlw	-1
  1797  0405  1D03               	skipz
  1798  0406  2C01               	goto	u1055
  1799  0407  3001               	movlw	1
  1800  0408  00A4               	movwf	??___lwdiv
  1801  0409  0824               	movf	??___lwdiv,w
  1802  040A  07A5               	addwf	___lwdiv@counter,f
  1803  040B  2BFE               	goto	l1590
  1804  040C                     l1592:	
  1805  040C  3001               	movlw	1
  1806  040D                     u1075:	
  1807  040D  1003               	clrc
  1808  040E  0DA6               	rlf	___lwdiv@quotient,f
  1809  040F  0DA7               	rlf	___lwdiv@quotient+1,f
  1810  0410  3EFF               	addlw	-1
  1811  0411  1D03               	skipz
  1812  0412  2C0D               	goto	u1075
  1813  0413  0821               	movf	___lwdiv@divisor+1,w
  1814  0414  0223               	subwf	___lwdiv@dividend+1,w
  1815  0415  1D03               	skipz
  1816  0416  2C19               	goto	u1085
  1817  0417  0820               	movf	___lwdiv@divisor,w
  1818  0418  0222               	subwf	___lwdiv@dividend,w
  1819  0419                     u1085:	
  1820  0419  1C03               	skipc
  1821  041A  2C22               	goto	l1598
  1822  041B  0820               	movf	___lwdiv@divisor,w
  1823  041C  02A2               	subwf	___lwdiv@dividend,f
  1824  041D  0821               	movf	___lwdiv@divisor+1,w
  1825  041E  1C03               	skipc
  1826  041F  03A3               	decf	___lwdiv@dividend+1,f
  1827  0420  02A3               	subwf	___lwdiv@dividend+1,f
  1828  0421  1426               	bsf	___lwdiv@quotient,0
  1829  0422                     l1598:	
  1830  0422  3001               	movlw	1
  1831  0423                     u1095:	
  1832  0423  1003               	clrc
  1833  0424  0CA1               	rrf	___lwdiv@divisor+1,f
  1834  0425  0CA0               	rrf	___lwdiv@divisor,f
  1835  0426  3EFF               	addlw	-1
  1836  0427  1D03               	skipz
  1837  0428  2C23               	goto	u1095
  1838  0429  3001               	movlw	1
  1839  042A  02A5               	subwf	___lwdiv@counter,f
  1840  042B  1D03               	btfss	3,2
  1841  042C  2C0C               	goto	l1592
  1842  042D                     l1602:	
  1843  042D  0827               	movf	___lwdiv@quotient+1,w
  1844  042E  01A1               	clrf	?___lwdiv+1
  1845  042F  07A1               	addwf	?___lwdiv+1,f
  1846  0430  0826               	movf	___lwdiv@quotient,w
  1847  0431  01A0               	clrf	?___lwdiv
  1848  0432  07A0               	addwf	?___lwdiv,f
  1849  0433  0008               	return
  1850  0434                     __end_of___lwdiv:	
  1851                           
  1852                           	psect	text6
  1853  03AA                     __ptext6:	
  1854 ;; *************** function _master_tx *****************
  1855 ;; Defined at:
  1856 ;;		line 155 in file "i2c_driver.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  i2c_pkt         1    wreg     PTR struct packet
  1859 ;;		 -> i2c_pkt(3), 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  i2c_pkt         1    1[BANK0 ] PTR struct packet
  1862 ;;		 -> i2c_pkt(3), 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      unsigned char 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1872 ;;      Params:         0       0       0       0       0
  1873 ;;      Locals:         0       1       0       0       0
  1874 ;;      Temps:          0       1       0       0       0
  1875 ;;      Totals:         0       2       0       0       0
  1876 ;;Total ram usage:        2 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _master_tx
  1888  03AA                     _master_tx:	
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _master_tx: [wreg-fsr0h+status,2+status,0]
  1892                           ;master_tx@i2c_pkt stored from wreg
  1893  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1894  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1895  03AC  00A1               	movwf	master_tx@i2c_pkt
  1896                           
  1897                           ;i2c_driver.c: 157: RBIE = 0;
  1898  03AD  118B               	bcf	11,3	;volatile
  1899                           
  1900                           ;i2c_driver.c: 158: SEN=1;
  1901  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1902  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1903  03B0  1411               	bsf	17,0	;volatile
  1904                           
  1905                           ;i2c_driver.c: 159: if(i2c_pkt->data!=0)
  1906  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1907  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1908  03B3  0A21               	incf	master_tx@i2c_pkt,w
  1909  03B4  0084               	movwf	4
  1910  03B5  1383               	bcf	3,7	;select IRP bank0
  1911  03B6  0880               	movf	0,f
  1912  03B7  1903               	skipnz
  1913  03B8  2BBC               	goto	l1658
  1914                           
  1915                           ;i2c_driver.c: 160: {
  1916                           ;i2c_driver.c: 161: i2c_pkt->data = 0;
  1917  03B9  0A21               	incf	master_tx@i2c_pkt,w
  1918  03BA  0084               	movwf	4
  1919  03BB  0180               	clrf	0
  1920  03BC                     l1658:	
  1921                           ;i2c_driver.c: 164: {
  1922                           
  1923                           ;i2c_driver.c: 162: }
  1924                           ;i2c_driver.c: 163: while(!i2c_pkt->ack)
  1925                           
  1926  03BC  0821               	movf	master_tx@i2c_pkt,w
  1927  03BD  3E02               	addlw	2
  1928  03BE  0084               	movwf	4
  1929  03BF  0880               	movf	0,f
  1930  03C0  1903               	skipnz
  1931  03C1  2BBC               	goto	l1658
  1932                           
  1933                           ;i2c_driver.c: 167: }
  1934                           ;i2c_driver.c: 168: i2c_pkt->ack=0;
  1935  03C2  0821               	movf	master_tx@i2c_pkt,w
  1936  03C3  3E02               	addlw	2
  1937  03C4  0084               	movwf	4
  1938  03C5  0180               	clrf	0
  1939                           
  1940                           ;i2c_driver.c: 170: SSPBUF=(i2c_pkt->address<<1|0);
  1941  03C6  0821               	movf	master_tx@i2c_pkt,w
  1942  03C7  0084               	movwf	4
  1943  03C8  0800               	movf	0,w
  1944  03C9  00A0               	movwf	??_master_tx
  1945  03CA  0720               	addwf	??_master_tx,w
  1946  03CB  0093               	movwf	19	;volatile
  1947  03CC                     l1664:	
  1948                           ;i2c_driver.c: 171: while(!i2c_pkt->ack);
  1949                           
  1950  03CC  0821               	movf	master_tx@i2c_pkt,w
  1951  03CD  3E02               	addlw	2
  1952  03CE  0084               	movwf	4
  1953  03CF  0880               	movf	0,f
  1954  03D0  1903               	skipnz
  1955  03D1  2BCC               	goto	l1664
  1956                           
  1957                           ;i2c_driver.c: 172: i2c_pkt->ack=0;
  1958  03D2  0821               	movf	master_tx@i2c_pkt,w
  1959  03D3  3E02               	addlw	2
  1960  03D4  0084               	movwf	4
  1961  03D5  0180               	clrf	0
  1962                           
  1963                           ;i2c_driver.c: 173: SSPBUF=i2c_pkt->data;
  1964  03D6  0A21               	incf	master_tx@i2c_pkt,w
  1965  03D7  0084               	movwf	4
  1966  03D8  0800               	movf	0,w
  1967  03D9  0093               	movwf	19	;volatile
  1968  03DA                     l1670:	
  1969                           ;i2c_driver.c: 175: while(!i2c_pkt->ack);
  1970                           
  1971  03DA  0821               	movf	master_tx@i2c_pkt,w
  1972  03DB  3E02               	addlw	2
  1973  03DC  0084               	movwf	4
  1974  03DD  0880               	movf	0,f
  1975  03DE  1903               	skipnz
  1976  03DF  2BDA               	goto	l1670
  1977                           
  1978                           ;i2c_driver.c: 176: i2c_pkt->ack=0;
  1979  03E0  0821               	movf	master_tx@i2c_pkt,w
  1980  03E1  3E02               	addlw	2
  1981  03E2  0084               	movwf	4
  1982  03E3  0180               	clrf	0
  1983                           
  1984                           ;i2c_driver.c: 179: PEN=1;
  1985  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  1986  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  1987  03E6  1511               	bsf	17,2	;volatile
  1988  03E7                     l1676:	
  1989                           ;i2c_driver.c: 180: while(!i2c_pkt->ack);
  1990                           
  1991  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  1992  03E8  0821               	movf	master_tx@i2c_pkt,w
  1993  03E9  3E02               	addlw	2
  1994  03EA  0084               	movwf	4
  1995  03EB  0880               	movf	0,f
  1996  03EC  1903               	skipnz
  1997  03ED  2BE7               	goto	l1676
  1998                           
  1999                           ;i2c_driver.c: 181: i2c_pkt->ack=0;
  2000  03EE  0821               	movf	master_tx@i2c_pkt,w
  2001  03EF  3E02               	addlw	2
  2002  03F0  0084               	movwf	4
  2003  03F1  0180               	clrf	0
  2004                           
  2005                           ;i2c_driver.c: 188: RBIE = 1;
  2006  03F2  158B               	bsf	11,3	;volatile
  2007  03F3  0008               	return
  2008  03F4                     __end_of_master_tx:	
  2009                           ;i2c_driver.c: 189: return 0;
  2010                           ;	Return value of _master_tx is never used
  2011                           
  2012                           
  2013                           	psect	text7
  2014  0355                     __ptext7:	
  2015 ;; *************** function _master_rx *****************
  2016 ;; Defined at:
  2017 ;;		line 191 in file "i2c_driver.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  i2c_pkt         1    wreg     PTR struct packet
  2020 ;;		 -> i2c_pkt(3), 
  2021 ;;  rx_time         1    0[BANK0 ] PTR unsigned char 
  2022 ;;		 -> NULL(0), local_time(7), 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  i2c_pkt         1    2[BANK0 ] PTR struct packet
  2025 ;;		 -> i2c_pkt(3), 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      unsigned char 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2035 ;;      Params:         0       1       0       0       0
  2036 ;;      Locals:         0       1       0       0       0
  2037 ;;      Temps:          0       1       0       0       0
  2038 ;;      Totals:         0       3       0       0       0
  2039 ;;Total ram usage:        3 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    1
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _master_rx
  2051  0355                     _master_rx:	
  2052                           
  2053                           ;incstack = 0
  2054                           ; Regs used in _master_rx: [wreg-fsr0h+status,2+status,0]
  2055                           ;master_rx@i2c_pkt stored from wreg
  2056  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0357  00A2               	movwf	master_rx@i2c_pkt
  2059                           
  2060                           ;i2c_driver.c: 193: RBIE = 0;
  2061  0358  118B               	bcf	11,3	;volatile
  2062                           
  2063                           ;i2c_driver.c: 194: SEN=1;
  2064  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2065  035A  1303               	bcf	3,6	;RP1=0, select bank1
  2066  035B  1411               	bsf	17,0	;volatile
  2067  035C                     l1686:	
  2068                           ;i2c_driver.c: 196: {
  2069                           
  2070                           ;i2c_driver.c: 195: while(!i2c_pkt->ack)
  2071                           
  2072  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2073  035D  0822               	movf	master_rx@i2c_pkt,w
  2074  035E  3E02               	addlw	2
  2075  035F  0084               	movwf	4
  2076  0360  1383               	bcf	3,7	;select IRP bank0
  2077  0361  0880               	movf	0,f
  2078  0362  1903               	skipnz
  2079  0363  2B5C               	goto	l1686
  2080                           
  2081                           ;i2c_driver.c: 199: }
  2082                           ;i2c_driver.c: 200: i2c_pkt->ack=0;
  2083  0364  0822               	movf	master_rx@i2c_pkt,w
  2084  0365  3E02               	addlw	2
  2085  0366  0084               	movwf	4
  2086  0367  0180               	clrf	0
  2087                           
  2088                           ;i2c_driver.c: 202: SSPBUF=(i2c_pkt->address<<1|1);
  2089  0368  1403               	setc
  2090  0369  0822               	movf	master_rx@i2c_pkt,w
  2091  036A  0084               	movwf	4
  2092  036B  0D00               	rlf	0,w
  2093  036C  0093               	movwf	19	;volatile
  2094  036D                     l1692:	
  2095                           ;i2c_driver.c: 203: while(!i2c_pkt->ack);
  2096                           
  2097  036D  0822               	movf	master_rx@i2c_pkt,w
  2098  036E  3E02               	addlw	2
  2099  036F  0084               	movwf	4
  2100  0370  0880               	movf	0,f
  2101  0371  1903               	skipnz
  2102  0372  2B6D               	goto	l1692
  2103                           
  2104                           ;i2c_driver.c: 204: i2c_pkt->ack=0;
  2105  0373  0822               	movf	master_rx@i2c_pkt,w
  2106  0374  3E02               	addlw	2
  2107  0375  0084               	movwf	4
  2108  0376  0180               	clrf	0
  2109                           
  2110                           ;i2c_driver.c: 209: RCEN=1;
  2111  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2112  0378  1303               	bcf	3,6	;RP1=0, select bank1
  2113  0379  1591               	bsf	17,3	;volatile
  2114  037A                     l1698:	
  2115                           ;i2c_driver.c: 210: while(!i2c_pkt->ack);
  2116                           
  2117  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2118  037B  0822               	movf	master_rx@i2c_pkt,w
  2119  037C  3E02               	addlw	2
  2120  037D  0084               	movwf	4
  2121  037E  0880               	movf	0,f
  2122  037F  1903               	skipnz
  2123  0380  2B7A               	goto	l1698
  2124                           
  2125                           ;i2c_driver.c: 211: i2c_pkt->ack=0;
  2126  0381  0822               	movf	master_rx@i2c_pkt,w
  2127  0382  3E02               	addlw	2
  2128  0383  0084               	movwf	4
  2129  0384  0180               	clrf	0
  2130                           
  2131                           ;i2c_driver.c: 212: *rx_time=SSPBUF;
  2132  0385  0813               	movf	19,w	;volatile
  2133  0386  00A1               	movwf	??_master_rx
  2134  0387  0820               	movf	master_rx@rx_time,w
  2135  0388  0084               	movwf	4
  2136  0389  0821               	movf	??_master_rx,w
  2137  038A  0080               	movwf	0
  2138                           
  2139                           ;i2c_driver.c: 214: ACKDT=1 ;
  2140  038B  1683               	bsf	3,5	;RP0=1, select bank1
  2141  038C  1303               	bcf	3,6	;RP1=0, select bank1
  2142  038D  1691               	bsf	17,5	;volatile
  2143                           
  2144                           ;i2c_driver.c: 215: ACKEN=1;
  2145  038E  1611               	bsf	17,4	;volatile
  2146  038F                     l1708:	
  2147                           ;i2c_driver.c: 216: while(!i2c_pkt->ack);
  2148                           
  2149  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0390  0822               	movf	master_rx@i2c_pkt,w
  2151  0391  3E02               	addlw	2
  2152  0392  0084               	movwf	4
  2153  0393  0880               	movf	0,f
  2154  0394  1903               	skipnz
  2155  0395  2B8F               	goto	l1708
  2156                           
  2157                           ;i2c_driver.c: 217: i2c_pkt->ack=0;
  2158  0396  0822               	movf	master_rx@i2c_pkt,w
  2159  0397  3E02               	addlw	2
  2160  0398  0084               	movwf	4
  2161  0399  0180               	clrf	0
  2162                           
  2163                           ;i2c_driver.c: 227: PEN=1;
  2164  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2165  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2166  039C  1511               	bsf	17,2	;volatile
  2167  039D                     l1714:	
  2168                           ;i2c_driver.c: 228: while(!i2c_pkt->ack);
  2169                           
  2170  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2171  039E  0822               	movf	master_rx@i2c_pkt,w
  2172  039F  3E02               	addlw	2
  2173  03A0  0084               	movwf	4
  2174  03A1  0880               	movf	0,f
  2175  03A2  1903               	skipnz
  2176  03A3  2B9D               	goto	l1714
  2177                           
  2178                           ;i2c_driver.c: 229: i2c_pkt->ack=0;
  2179  03A4  0822               	movf	master_rx@i2c_pkt,w
  2180  03A5  3E02               	addlw	2
  2181  03A6  0084               	movwf	4
  2182  03A7  0180               	clrf	0
  2183                           
  2184                           ;i2c_driver.c: 236: RBIE = 1;
  2185  03A8  158B               	bsf	11,3	;volatile
  2186  03A9  0008               	return
  2187  03AA                     __end_of_master_rx:	
  2188                           ;i2c_driver.c: 237: return 0;
  2189                           ;	Return value of _master_rx is never used
  2190                           
  2191                           
  2192                           	psect	text8
  2193  0548                     __ptext8:	
  2194 ;; *************** function _lcd_init *****************
  2195 ;; Defined at:
  2196 ;;		line 17 in file "lcd_driver.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;		None               void
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0, pclath, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         0       0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0
  2213 ;;      Totals:         0       0       0       0       0
  2214 ;;Total ram usage:        0 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    3
  2217 ;; This function calls:
  2218 ;;		_lcd_cmnt
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           
  2225                           ;psect for function _lcd_init
  2226  0548                     _lcd_init:	
  2227                           
  2228                           ;lcd_driver.c: 19: TRISD=0X00;
  2229                           
  2230                           ;incstack = 0
  2231                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2232  0548  1683               	bsf	3,5	;RP0=1, select bank1
  2233  0549  1303               	bcf	3,6	;RP1=0, select bank1
  2234  054A  0188               	clrf	8	;volatile
  2235                           
  2236                           ;lcd_driver.c: 20: PORTD=0X00;
  2237  054B  1283               	bcf	3,5	;RP0=0, select bank0
  2238  054C  1303               	bcf	3,6	;RP1=0, select bank0
  2239  054D  0188               	clrf	8	;volatile
  2240                           
  2241                           ;lcd_driver.c: 21: ADCON1=0X06;
  2242  054E  3006               	movlw	6
  2243  054F  1683               	bsf	3,5	;RP0=1, select bank1
  2244  0550  1303               	bcf	3,6	;RP1=0, select bank1
  2245  0551  009F               	movwf	31	;volatile
  2246                           
  2247                           ;lcd_driver.c: 23: lcd_cmnt(0x38);
  2248  0552  3038               	movlw	56
  2249  0553  120A  118A  2595  120A  118A  	fcall	_lcd_cmnt
  2250                           
  2251                           ;lcd_driver.c: 24: lcd_cmnt(0x0c);
  2252  0558  300C               	movlw	12
  2253  0559  120A  118A  2595  120A  118A  	fcall	_lcd_cmnt
  2254                           
  2255                           ;lcd_driver.c: 25: lcd_cmnt(0x01);
  2256  055E  3001               	movlw	1
  2257  055F  120A  118A  2595  120A  118A  	fcall	_lcd_cmnt
  2258                           
  2259                           ;lcd_driver.c: 26: lcd_cmnt(0x80);
  2260  0564  3080               	movlw	128
  2261  0565  120A  118A  2595   	fcall	_lcd_cmnt
  2262  0568  0008               	return
  2263  0569                     __end_of_lcd_init:	
  2264                           
  2265                           	psect	text9
  2266  0595                     __ptext9:	
  2267 ;; *************** function _lcd_cmnt *****************
  2268 ;; Defined at:
  2269 ;;		line 28 in file "lcd_driver.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  cmnt            1    wreg     unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  cmnt            1    7[BANK0 ] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;		None               void
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       0       0       0       0
  2284 ;;      Locals:         0       1       0       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         0       1       0       0       0
  2287 ;;Total ram usage:        1 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    2
  2290 ;; This function calls:
  2291 ;;		_delay
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;;		_lcd_init
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function _lcd_cmnt
  2300  0595                     _lcd_cmnt:	
  2301                           
  2302                           ;incstack = 0
  2303                           ; Regs used in _lcd_cmnt: [wreg+status,2+status,0+pclath+cstack]
  2304                           ;lcd_cmnt@cmnt stored from wreg
  2305  0595  1283               	bcf	3,5	;RP0=0, select bank0
  2306  0596  1303               	bcf	3,6	;RP1=0, select bank0
  2307  0597  00A7               	movwf	lcd_cmnt@cmnt
  2308                           
  2309                           ;lcd_driver.c: 30: PORTD=cmnt;
  2310  0598  0827               	movf	lcd_cmnt@cmnt,w
  2311  0599  0088               	movwf	8	;volatile
  2312                           
  2313                           ;lcd_driver.c: 31: RE0=0;
  2314  059A  1009               	bcf	9,0	;volatile
  2315                           
  2316                           ;lcd_driver.c: 32: RE1=1;delay(10);RE1=0; ;
  2317  059B  1489               	bsf	9,1	;volatile
  2318  059C  300A               	movlw	10
  2319  059D  00A0               	movwf	delay@x
  2320  059E  3000               	movlw	0
  2321  059F  00A1               	movwf	delay@x+1
  2322  05A0  120A  118A  246A   	fcall	_delay
  2323  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2324  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2325  05A5  1089               	bcf	9,1	;volatile
  2326  05A6  0008               	return
  2327  05A7                     __end_of_lcd_cmnt:	
  2328                           
  2329                           	psect	text10
  2330  046A                     __ptext10:	
  2331 ;; *************** function _delay *****************
  2332 ;; Defined at:
  2333 ;;		line 53 in file "lcd_driver.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  x               2    0[BANK0 ] int 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  j               2    5[BANK0 ] int 
  2338 ;;  i               2    3[BANK0 ] int 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;		None               void
  2341 ;; Registers used:
  2342 ;;		wreg, status,2
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         0       2       0       0       0
  2349 ;;      Locals:         0       4       0       0       0
  2350 ;;      Temps:          0       1       0       0       0
  2351 ;;      Totals:         0       7       0       0       0
  2352 ;;Total ram usage:        7 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;;		_lcd_cmnt
  2360 ;;		_lcd_data
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           
  2365                           ;psect for function _delay
  2366  046A                     _delay:	
  2367                           
  2368                           ;lcd_driver.c: 55: int i,j;
  2369                           ;lcd_driver.c: 56: for(i=0;i<=x;i++)
  2370                           
  2371                           ;incstack = 0
  2372                           ; Regs used in _delay: [wreg+status,2]
  2373  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2374  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2375  046C  01A3               	clrf	delay@i
  2376  046D  01A4               	clrf	delay@i+1
  2377  046E                     l273:	
  2378  046E  0821               	movf	delay@x+1,w
  2379  046F  3A80               	xorlw	128
  2380  0470  00A2               	movwf	??_delay
  2381  0471  0824               	movf	delay@i+1,w
  2382  0472  3A80               	xorlw	128
  2383  0473  0222               	subwf	??_delay,w
  2384  0474  1D03               	skipz
  2385  0475  2C78               	goto	u1035
  2386  0476  0823               	movf	delay@i,w
  2387  0477  0220               	subwf	delay@x,w
  2388  0478                     u1035:	
  2389  0478  1C03               	btfss	3,0
  2390  0479  0008               	return
  2391                           
  2392                           ;lcd_driver.c: 57: {
  2393                           ;lcd_driver.c: 58: for(j=0;j<=x;j++)
  2394  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2395  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2396  047C  01A5               	clrf	delay@j
  2397  047D  01A6               	clrf	delay@j+1
  2398  047E                     l275:	
  2399  047E  0821               	movf	delay@x+1,w
  2400  047F  3A80               	xorlw	128
  2401  0480  00A2               	movwf	??_delay
  2402  0481  0826               	movf	delay@j+1,w
  2403  0482  3A80               	xorlw	128
  2404  0483  0222               	subwf	??_delay,w
  2405  0484  1D03               	skipz
  2406  0485  2C88               	goto	u1025
  2407  0486  0825               	movf	delay@j,w
  2408  0487  0220               	subwf	delay@x,w
  2409  0488                     u1025:	
  2410  0488  1C03               	btfss	3,0
  2411  0489  2C93               	goto	l1558
  2412                           
  2413                           ;lcd_driver.c: 59: {}
  2414  048A  3001               	movlw	1
  2415  048B  1283               	bcf	3,5	;RP0=0, select bank0
  2416  048C  1303               	bcf	3,6	;RP1=0, select bank0
  2417  048D  07A5               	addwf	delay@j,f
  2418  048E  1803               	skipnc
  2419  048F  0AA6               	incf	delay@j+1,f
  2420  0490  3000               	movlw	0
  2421  0491  07A6               	addwf	delay@j+1,f
  2422  0492  2C7E               	goto	l275
  2423  0493                     l1558:	
  2424  0493  3001               	movlw	1
  2425  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0496  07A3               	addwf	delay@i,f
  2428  0497  1803               	skipnc
  2429  0498  0AA4               	incf	delay@i+1,f
  2430  0499  3000               	movlw	0
  2431  049A  07A4               	addwf	delay@i+1,f
  2432  049B  2C6E               	goto	l273
  2433  049C                     __end_of_delay:	
  2434                           
  2435                           	psect	text11
  2436  04CB                     __ptext11:	
  2437 ;; *************** function _inc_year *****************
  2438 ;; Defined at:
  2439 ;;		line 314 in file "i2c_driver.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  data_ptr        1    wreg     PTR unsigned char 
  2442 ;;		 -> year(2), 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  data_ptr        1    1[BANK0 ] PTR unsigned char 
  2445 ;;		 -> year(2), 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;		None               void
  2448 ;; Registers used:
  2449 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       0       0       0       0
  2456 ;;      Locals:         0       1       0       0       0
  2457 ;;      Temps:          0       1       0       0       0
  2458 ;;      Totals:         0       2       0       0       0
  2459 ;;Total ram usage:        2 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    1
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_main
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _inc_year
  2471  04CB                     _inc_year:	
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _inc_year: [wreg-fsr0h+status,2+status,0]
  2475                           ;inc_year@data_ptr stored from wreg
  2476  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2477  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2478  04CD  00A1               	movwf	inc_year@data_ptr
  2479                           
  2480                           ;i2c_driver.c: 316: if(data_ptr[0]==9)
  2481  04CE  0821               	movf	inc_year@data_ptr,w
  2482  04CF  0084               	movwf	4
  2483  04D0  1383               	bcf	3,7	;select IRP bank0
  2484  04D1  0800               	movf	0,w
  2485  04D2  3A09               	xorlw	9
  2486  04D3  1D03               	skipz
  2487  04D4  2CEC               	goto	l1802
  2488                           
  2489                           ;i2c_driver.c: 317: {
  2490                           ;i2c_driver.c: 318: data_ptr[0]=0;
  2491  04D5  0821               	movf	inc_year@data_ptr,w
  2492  04D6  0084               	movwf	4
  2493  04D7  0180               	clrf	0
  2494                           
  2495                           ;i2c_driver.c: 319: if(data_ptr[1]==9)
  2496  04D8  0A21               	incf	inc_year@data_ptr,w
  2497  04D9  0084               	movwf	4
  2498  04DA  0800               	movf	0,w
  2499  04DB  3A09               	xorlw	9
  2500  04DC  1D03               	skipz
  2501  04DD  2CE2               	goto	l1800
  2502                           
  2503                           ;i2c_driver.c: 320: {
  2504                           ;i2c_driver.c: 321: data_ptr[1]=0;
  2505  04DE  0A21               	incf	inc_year@data_ptr,w
  2506  04DF  0084               	movwf	4
  2507  04E0  0180               	clrf	0
  2508                           
  2509                           ;i2c_driver.c: 323: }
  2510  04E1  0008               	return
  2511  04E2                     l1800:	
  2512                           
  2513                           ;i2c_driver.c: 324: else
  2514                           ;i2c_driver.c: 325: {
  2515                           ;i2c_driver.c: 326: data_ptr[1]= data_ptr[1]+1;
  2516  04E2  0A21               	incf	inc_year@data_ptr,w
  2517  04E3  0084               	movwf	4
  2518  04E4  0800               	movf	0,w
  2519  04E5  3E01               	addlw	1
  2520  04E6  00A0               	movwf	??_inc_year
  2521  04E7  0A21               	incf	inc_year@data_ptr,w
  2522  04E8  0084               	movwf	4
  2523  04E9  0820               	movf	??_inc_year,w
  2524  04EA  0080               	movwf	0
  2525                           
  2526                           ;i2c_driver.c: 327: }
  2527                           ;i2c_driver.c: 328: }
  2528  04EB  0008               	return
  2529  04EC                     l1802:	
  2530                           
  2531                           ;i2c_driver.c: 329: else
  2532                           ;i2c_driver.c: 330: {
  2533                           ;i2c_driver.c: 331: data_ptr[0]=data_ptr[0]+1;
  2534  04EC  0821               	movf	inc_year@data_ptr,w
  2535  04ED  0084               	movwf	4
  2536  04EE  0800               	movf	0,w
  2537  04EF  3E01               	addlw	1
  2538  04F0  00A0               	movwf	??_inc_year
  2539  04F1  0821               	movf	inc_year@data_ptr,w
  2540  04F2  0084               	movwf	4
  2541  04F3  0820               	movf	??_inc_year,w
  2542  04F4  0080               	movwf	0
  2543  04F5  0008               	return
  2544  04F6                     __end_of_inc_year:	
  2545                           
  2546                           	psect	text12
  2547  05A7                     __ptext12:	
  2548 ;; *************** function _i2c_master_init *****************
  2549 ;; Defined at:
  2550 ;;		line 121 in file "i2c_driver.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;		None               void
  2557 ;; Registers used:
  2558 ;;		wreg
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564 ;;      Params:         0       0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0
  2567 ;;      Totals:         0       0       0       0       0
  2568 ;;Total ram usage:        0 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    1
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_main
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function _i2c_master_init
  2580  05A7                     _i2c_master_init:	
  2581                           
  2582                           ;i2c_driver.c: 124: TRISC3 = 1;
  2583                           
  2584                           ;incstack = 0
  2585                           ; Regs used in _i2c_master_init: [wreg]
  2586  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  2587  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  2588  05A9  1587               	bsf	7,3	;volatile
  2589                           
  2590                           ;i2c_driver.c: 125: TRISC4 = 1;
  2591  05AA  1607               	bsf	7,4	;volatile
  2592                           
  2593                           ;i2c_driver.c: 126: SSPADD = 0x28;
  2594  05AB  3028               	movlw	40
  2595  05AC  0093               	movwf	19	;volatile
  2596                           
  2597                           ;i2c_driver.c: 127: SSPSTAT |= 0x80;
  2598  05AD  1794               	bsf	20,7	;volatile
  2599                           
  2600                           ;i2c_driver.c: 128: SSPCON = 0x28;
  2601  05AE  3028               	movlw	40
  2602  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  2603  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  2604  05B1  0094               	movwf	20	;volatile
  2605                           
  2606                           ;i2c_driver.c: 129: GIE = 1;
  2607  05B2  178B               	bsf	11,7	;volatile
  2608                           
  2609                           ;i2c_driver.c: 130: PEIE = 1;
  2610  05B3  170B               	bsf	11,6	;volatile
  2611                           
  2612                           ;i2c_driver.c: 131: SSPIE = 1;
  2613  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  2614  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  2615  05B6  158C               	bsf	12,3	;volatile
  2616  05B7  0008               	return
  2617  05B8                     __end_of_i2c_master_init:	
  2618                           
  2619                           	psect	text13
  2620  0569                     __ptext13:	
  2621 ;; *************** function _hex2char *****************
  2622 ;; Defined at:
  2623 ;;		line 295 in file "i2c_driver.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  in              1    wreg     unsigned char 
  2626 ;;  out             1    0[BANK0 ] PTR unsigned char 
  2627 ;;		 -> year(2), month(2), date(2), sec(2), 
  2628 ;;		 -> min(2), hour(2), 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  in              1    3[BANK0 ] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;		None               void
  2633 ;; Registers used:
  2634 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       1       0       0       0
  2641 ;;      Locals:         0       1       0       0       0
  2642 ;;      Temps:          0       2       0       0       0
  2643 ;;      Totals:         0       4       0       0       0
  2644 ;;Total ram usage:        4 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    1
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _hex2char
  2656  0569                     _hex2char:	
  2657                           
  2658                           ;incstack = 0
  2659                           ; Regs used in _hex2char: [wreg-fsr0h+status,2+status,0]
  2660                           ;hex2char@in stored from wreg
  2661  0569  1283               	bcf	3,5	;RP0=0, select bank0
  2662  056A  1303               	bcf	3,6	;RP1=0, select bank0
  2663  056B  00A3               	movwf	hex2char@in
  2664                           
  2665                           ;i2c_driver.c: 297: *out= in & 0x0f;
  2666  056C  0823               	movf	hex2char@in,w
  2667  056D  390F               	andlw	15
  2668  056E  00A1               	movwf	??_hex2char
  2669  056F  0820               	movf	hex2char@out,w
  2670  0570  0084               	movwf	4
  2671  0571  0821               	movf	??_hex2char,w
  2672  0572  1383               	bcf	3,7	;select IRP bank0
  2673  0573  0080               	movwf	0
  2674                           
  2675                           ;i2c_driver.c: 298: *(out+1)= in>>4;
  2676  0574  0823               	movf	hex2char@in,w
  2677  0575  00A1               	movwf	??_hex2char
  2678  0576  3004               	movlw	4
  2679  0577                     u1275:	
  2680  0577  1003               	clrc
  2681  0578  0CA1               	rrf	??_hex2char,f
  2682  0579  3EFF               	addlw	-1
  2683  057A  1D03               	skipz
  2684  057B  2D77               	goto	u1275
  2685  057C  0821               	movf	??_hex2char,w
  2686  057D  00A2               	movwf	??_hex2char+1
  2687  057E  0A20               	incf	hex2char@out,w
  2688  057F  0084               	movwf	4
  2689  0580  0822               	movf	??_hex2char+1,w
  2690  0581  0080               	movwf	0
  2691  0582  0008               	return
  2692  0583                     __end_of_hex2char:	
  2693                           
  2694                           	psect	text14
  2695  049C                     __ptext14:	
  2696 ;; *************** function _dec_year *****************
  2697 ;; Defined at:
  2698 ;;		line 335 in file "i2c_driver.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  data_ptr        1    wreg     PTR unsigned char 
  2701 ;;		 -> year(2), 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  data_ptr        1    1[BANK0 ] PTR unsigned char 
  2704 ;;		 -> year(2), 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;		None               void
  2707 ;; Registers used:
  2708 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2714 ;;      Params:         0       0       0       0       0
  2715 ;;      Locals:         0       1       0       0       0
  2716 ;;      Temps:          0       1       0       0       0
  2717 ;;      Totals:         0       2       0       0       0
  2718 ;;Total ram usage:        2 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    1
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           
  2729                           ;psect for function _dec_year
  2730  049C                     _dec_year:	
  2731                           
  2732                           ;incstack = 0
  2733                           ; Regs used in _dec_year: [wreg-fsr0h+status,2+status,0]
  2734                           ;dec_year@data_ptr stored from wreg
  2735  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2736  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2737  049E  00A1               	movwf	dec_year@data_ptr
  2738                           
  2739                           ;i2c_driver.c: 337: if(data_ptr[0]==0)
  2740  049F  0821               	movf	dec_year@data_ptr,w
  2741  04A0  0084               	movwf	4
  2742  04A1  1383               	bcf	3,7	;select IRP bank0
  2743  04A2  0880               	movf	0,f
  2744  04A3  1D03               	skipz
  2745  04A4  2CC1               	goto	l1814
  2746                           
  2747                           ;i2c_driver.c: 338: {
  2748                           ;i2c_driver.c: 339: data_ptr[0]=9;
  2749  04A5  3009               	movlw	9
  2750  04A6  00A0               	movwf	??_dec_year
  2751  04A7  0821               	movf	dec_year@data_ptr,w
  2752  04A8  0084               	movwf	4
  2753  04A9  0820               	movf	??_dec_year,w
  2754  04AA  0080               	movwf	0
  2755                           
  2756                           ;i2c_driver.c: 340: if(data_ptr[1]==0)
  2757  04AB  0A21               	incf	dec_year@data_ptr,w
  2758  04AC  0084               	movwf	4
  2759  04AD  0880               	movf	0,f
  2760  04AE  1D03               	skipz
  2761  04AF  2CB7               	goto	l1812
  2762                           
  2763                           ;i2c_driver.c: 341: {
  2764                           ;i2c_driver.c: 342: data_ptr[1]=9;
  2765  04B0  3009               	movlw	9
  2766  04B1  00A0               	movwf	??_dec_year
  2767  04B2  0A21               	incf	dec_year@data_ptr,w
  2768  04B3  0084               	movwf	4
  2769  04B4  0820               	movf	??_dec_year,w
  2770  04B5  0080               	movwf	0
  2771                           
  2772                           ;i2c_driver.c: 343: }
  2773  04B6  0008               	return
  2774  04B7                     l1812:	
  2775                           
  2776                           ;i2c_driver.c: 344: else
  2777                           ;i2c_driver.c: 345: {
  2778                           ;i2c_driver.c: 346: data_ptr[1]= data_ptr[0]-1;
  2779  04B7  0821               	movf	dec_year@data_ptr,w
  2780  04B8  0084               	movwf	4
  2781  04B9  0800               	movf	0,w
  2782  04BA  3EFF               	addlw	255
  2783  04BB  00A0               	movwf	??_dec_year
  2784  04BC  0A21               	incf	dec_year@data_ptr,w
  2785  04BD  0084               	movwf	4
  2786  04BE  0820               	movf	??_dec_year,w
  2787  04BF  0080               	movwf	0
  2788                           
  2789                           ;i2c_driver.c: 347: }
  2790                           ;i2c_driver.c: 348: }
  2791  04C0  0008               	return
  2792  04C1                     l1814:	
  2793                           
  2794                           ;i2c_driver.c: 349: else
  2795                           ;i2c_driver.c: 350: {
  2796                           ;i2c_driver.c: 351: data_ptr[0]=data_ptr[0]-1;
  2797  04C1  0821               	movf	dec_year@data_ptr,w
  2798  04C2  0084               	movwf	4
  2799  04C3  0800               	movf	0,w
  2800  04C4  3EFF               	addlw	255
  2801  04C5  00A0               	movwf	??_dec_year
  2802  04C6  0821               	movf	dec_year@data_ptr,w
  2803  04C7  0084               	movwf	4
  2804  04C8  0820               	movf	??_dec_year,w
  2805  04C9  0080               	movwf	0
  2806  04CA  0008               	return
  2807  04CB                     __end_of_dec_year:	
  2808                           
  2809                           	psect	text15
  2810  04F6                     __ptext15:	
  2811 ;; *************** function _interrupt_isr *****************
  2812 ;; Defined at:
  2813 ;;		line 263 in file "i2c_driver.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;		None               void
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0
  2829 ;;      Temps:          6       0       0       0       0
  2830 ;;      Totals:         6       0       0       0       0
  2831 ;;Total ram usage:        6 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		Interrupt level 1
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           
  2841                           ;psect for function _interrupt_isr
  2842  04F6                     _interrupt_isr:	
  2843                           
  2844                           ;i2c_driver.c: 266: if(SSPIF)
  2845  04F6  1D8C               	btfss	12,3	;volatile
  2846  04F7  2CFB               	goto	i1l188
  2847                           
  2848                           ;i2c_driver.c: 267: {
  2849                           ;i2c_driver.c: 268: i2c_pkt.ack=1;
  2850  04F8  01EF               	clrf	_i2c_pkt+2
  2851  04F9  0AEF               	incf	_i2c_pkt+2,f
  2852                           
  2853                           ;i2c_driver.c: 271: SSPIF = 0;
  2854  04FA  118C               	bcf	12,3	;volatile
  2855  04FB                     i1l188:	
  2856                           
  2857                           ;i2c_driver.c: 274: }
  2858                           ;i2c_driver.c: 275: if(RBIF)
  2859  04FB  1C0B               	btfss	11,0	;volatile
  2860  04FC  2D16               	goto	i1l191
  2861                           
  2862                           ;i2c_driver.c: 276: {
  2863                           ;i2c_driver.c: 279: PORTA=2;
  2864  04FD  3002               	movlw	2
  2865  04FE  0085               	movwf	5	;volatile
  2866                           
  2867                           ;i2c_driver.c: 281: key_nav = ((0XF0&~PORTB)>>4);
  2868  04FF  0906               	comf	6,w	;volatile
  2869  0500  00F6               	movwf	??_interrupt_isr
  2870  0501  3004               	movlw	4
  2871  0502                     u97_25:	
  2872  0502  1003               	clrc
  2873  0503  0CF6               	rrf	??_interrupt_isr,f
  2874  0504  3EFF               	addlw	-1
  2875  0505  1D03               	skipz
  2876  0506  2D02               	goto	u97_25
  2877  0507  0876               	movf	??_interrupt_isr,w
  2878  0508  390F               	andlw	15
  2879  0509  00F7               	movwf	??_interrupt_isr+1
  2880  050A  0877               	movf	??_interrupt_isr+1,w
  2881  050B  00D6               	movwf	_key_nav
  2882                           
  2883                           ;i2c_driver.c: 284: if(RB4==0)
  2884  050C  1A06               	btfsc	6,4	;volatile
  2885  050D  2D15               	goto	i1l1532
  2886                           
  2887                           ;i2c_driver.c: 285: {
  2888                           ;i2c_driver.c: 286: flag=!flag;
  2889  050E  08D4               	movf	_flag,f
  2890  050F  3000               	movlw	0
  2891  0510  1903               	skipnz
  2892  0511  3001               	movlw	1
  2893  0512  00F6               	movwf	??_interrupt_isr
  2894  0513  0876               	movf	??_interrupt_isr,w
  2895  0514  00D4               	movwf	_flag
  2896  0515                     i1l1532:	
  2897                           
  2898                           ;i2c_driver.c: 287: }
  2899                           ;i2c_driver.c: 289: RBIF = 0;
  2900  0515  100B               	bcf	11,0	;volatile
  2901  0516                     i1l191:	
  2902  0516  087B               	movf	??_interrupt_isr+5,w
  2903  0517  00FF               	movwf	127
  2904  0518  087A               	movf	??_interrupt_isr+4,w
  2905  0519  008A               	movwf	10
  2906  051A  0879               	movf	??_interrupt_isr+3,w
  2907  051B  0084               	movwf	4
  2908  051C  0E78               	swapf	(??_interrupt_isr+2)^(0+-128),w
  2909  051D  0083               	movwf	3
  2910  051E  0EFE               	swapf	126,f
  2911  051F  0E7E               	swapf	126,w
  2912  0520  0009               	retfie
  2913  0521                     __end_of_interrupt_isr:	
  2914  007E                     btemp	set	126	;btemp
  2915  007E                     wtemp	set	126
  2916  007E                     wtemp0	set	126
  2917  0080                     wtemp1	set	128
  2918  0082                     wtemp2	set	130
  2919  0084                     wtemp3	set	132
  2920  0086                     wtemp4	set	134
  2921  0088                     wtemp5	set	136
  2922  007F                     wtemp6	set	127
  2923  007E                     ttemp	set	126
  2924  007E                     ttemp0	set	126
  2925  0081                     ttemp1	set	129
  2926  0084                     ttemp2	set	132
  2927  0087                     ttemp3	set	135
  2928  007F                     ttemp4	set	127
  2929  007E                     ltemp	set	126
  2930  007E                     ltemp0	set	126
  2931  0082                     ltemp1	set	130
  2932  0086                     ltemp2	set	134
  2933  0080                     ltemp3	set	128
  2934                           
  2935                           	psect	intentry
  2936  0004                     __pintentry:	
  2937                           ;incstack = 0
  2938                           ; Regs used in _interrupt_isr: [wreg+status,2+status,0]
  2939                           
  2940  0004                     interrupt_function:	
  2941  007E                     saved_w	set	btemp
  2942  0004  00FE               	movwf	btemp
  2943  0005  0E03               	swapf	3,w
  2944  0006  00F8               	movwf	??_interrupt_isr+2
  2945  0007  0804               	movf	4,w
  2946  0008  00F9               	movwf	??_interrupt_isr+3
  2947  0009  080A               	movf	10,w
  2948  000A  00FA               	movwf	??_interrupt_isr+4
  2949  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2950  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2951  000D  087F               	movf	btemp+1,w
  2952  000E  00FB               	movwf	??_interrupt_isr+5
  2953  000F  120A  118A  2CF6   	ljmp	_interrupt_isr


Data Sizes:
    Strings     69
    Constant    10
    Data        0
    BSS         63
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     52      80
    BANK1            80      2      34
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_3(CODE[23]), STR_2(CODE[23]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> lcd_msg1(BANK1[16]), lcd_msg(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S241$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    uart_lcd_update@data	PTR unsigned char  size(1) Largest target is 16
		 -> lcd_msg1(BANK1[16]), lcd_msg(BANK1[16]), 

    dec_year@data_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), 

    inc_year@data_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), 

    hex2char@out	PTR unsigned char  size(1) Largest target is 2
		 -> year(BANK0[2]), month(BANK0[2]), date(BANK0[2]), sec(BANK0[2]), 
		 -> min(BANK0[2]), hour(BANK0[2]), 

    master_rx@rx_time	PTR unsigned char  size(1) Largest target is 7
		 -> NULL(NULL[0]), local_time(BANK0[7]), 

    master_rx@i2c_pkt	PTR struct packet size(1) Largest target is 3
		 -> i2c_pkt(BANK0[3]), 

    master_tx@i2c_pkt	PTR struct packet size(1) Largest target is 3
		 -> i2c_pkt(BANK0[3]), 

    timer	PTR unsigned char  size(1) Largest target is 7
		 -> NULL(NULL[0]), local_time(BANK0[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _uart_lcd_update->_lcd_data
    _lcd_data->_delay
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_init->_lcd_cmnt
    _lcd_cmnt->_delay

Critical Paths under _interrupt_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    5648
                                             39 BANK0     13    13      0
                                              0 BANK1      2     2      0
                           _dec_year
                              _delay
                           _hex2char
                    _i2c_master_init
                           _inc_year
                           _lcd_cmnt
                           _lcd_init
                          _master_rx
                          _master_tx
                            _sprintf
                    _uart_lcd_update
 ---------------------------------------------------------------------------------
 (1) _uart_lcd_update                                      5     4      1     872
                                              8 BANK0      5     4      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             1     1      0     362
                                              7 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    12     13    1714
                                             14 BANK0     25    12     13
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     362
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _master_tx                                            2     2      0     402
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _master_rx                                            3     2      1     467
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     362
                           _lcd_cmnt
 ---------------------------------------------------------------------------------
 (2) _lcd_cmnt                                             1     1      0     362
                                              7 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                7     5      2     331
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _inc_year                                             2     2      0     278
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hex2char                                             4     3      1     514
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _dec_year                                             2     2      0     278
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupt_isr                                        6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dec_year
   _delay
   _hex2char
   _i2c_master_init
   _inc_year
   _lcd_cmnt
     _delay
   _lcd_init
     _lcd_cmnt
       _delay
   _master_rx
   _master_tx
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _uart_lcd_update
     _lcd_data
       _delay

 _interrupt_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      2      22       7       42.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      7E      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Jan 18 11:18:58 2018

              __CFG_CP$ON 0000                         pc 0002              lcd_data@data 0027  
   __end_of_interrupt_isr 0521               __CFG_CPD$ON 0000                        fsr 0004  
                     l273 046E                       l275 047E                       _GIE 005F  
                     _RB4 0034                       _RE0 0048                       _RE1 0049  
                     _PEN 048A                       _SEN 0488                       _day 0071  
                     _inc 0055                       _min 0065                       _sec 0069  
                     fsr0 0004                       indf 0000              __CFG_FOSC$LP 0000  
            lcd_cmnt@cmnt 0027              __CFG_LVP$OFF 0000                      l1602 042D  
                    l1620 0458                      l1614 043C                      l1800 04E2  
                    l1616 044A                      l1624 0463                      l1802 04EC  
                    l1714 039D                      l1812 04B7                      l1708 038F  
                    l1740 022E                      l1900 01EE                      l1814 04C1  
                    l1558 0493                      l1670 03DA                      l1590 03FE  
                    l1750 0245                      l1734 0218                      l1664 03CC  
                    l1592 040C                      l1658 03BC                      l1762 026C  
                    l1754 024B                      l1692 036D                      l1676 03E7  
                    l1780 02C7                      l1686 035C                      l1598 0422  
                    l1790 0526                      l1838 004F                      l1776 027F  
                    l1768 027B                      l1856 0093                      l1848 006C  
                    l1698 037A                      l1778 01F8                      l1890 0184  
                    l1892 0186                      l1884 0177                      l1888 017E  
                    l1898 0187                      STR_1 0310                      STR_2 0327  
                    STR_3 033E                      u1025 0488                      u1035 0478  
                    u1125 043F                      u1055 0401                      u1145 0450  
                    u1075 040D                      u1155 0459                      u1315 0262  
                    u1085 0419                      u1095 0423                      u1415 006A  
                    u1425 0091                      u1275 0577                      u1365 052F  
           __CFG_DEBUG$ON 0000                      _PEIE 005E                      _RBIE 005B  
                    _RBIF 0058                      _RCEN 048B                      _RSEN 0489  
                    _date 0061                      _flag 0054                      _main 002E  
                    _hour 0063                      _year 006B                      btemp 007E  
                    ltemp 007E         ??_uart_lcd_update 0029                      start 0012  
                    ttemp 007E                      wtemp 007E                     ?_main 0076  
                   _ACKEN 048C                     _ACKDT 048D                     _BCLIE 046B  
           __CFG_WDTE$OFF 0000           __end_of___lwdiv 0434                     i1l191 0516  
         __end_of___lwmod 046A                     i1l188 04FB                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _SSPIE 0463  
                   _TRISE 0089                     _SSPIF 0063                     _SSPEN 00A5  
                   u97_25 0502             __CFG_WRT$HALF 0000             __CFG_PWRTE$ON 0000  
                   _delay 046A           __end_of_dpowers 0310                     _month 0067  
                   _timer 0058                     main@i 00C0            __CFG_BOREN$OFF 0000  
                   pclath 000A                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __end_of_sprintf 02CC           __initialization 0015              __end_of_main 01F1  
                  ??_main 0047                    ?_delay 0020                    _ADCON1 009F  
                  i1l1532 0515                    _INTCON 000B                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of_dec_year 04CB          __end_of_hex2char 0583  
        __end_of_lcd_data 0595          __end_of_lcd_cmnt 05A7          __end_of_lcd_init 0569  
         _i2c_master_init 05A7          __end_of_inc_year 04F6                 ??___lwdiv 0024  
               ??___lwmod 002C                    delay@i 0023                    delay@j 0025  
                  delay@x 0020                    saved_w 007E                 ??_sprintf 003B  
 __end_of__initialization 002A            __pcstackCOMMON 0076             __end_of_delay 049C  
         _uart_lcd_update 0521                   ??_delay 0022                __pbssBANK0 0054  
              __pbssBANK1 00A0   __end_of_i2c_master_init 05B8        __size_of_master_rx 0055  
      __size_of_master_tx 004A                __pmaintext 002E                __pintentry 0004  
               ?_dec_year 0076                 ?_hex2char 0020          uart_lcd_update@i 002B  
               ?_lcd_data 0076                 ?_lcd_cmnt 0076                 ?_lcd_init 0076  
                 _SSPSTAT 0094                __stringtab 0300                 ?_inc_year 0076  
  __size_of_interrupt_isr 002B                   _i2c_pkt 006D                   ___lwdiv 03F4  
                 ___lwmod 0434                _local_time 005A                   _day_dec 0072  
 __end_of_uart_lcd_update 0548                   __ptext1 0521                   __ptext2 0583  
                 __ptext3 01F1                   __ptext4 0434                   __ptext5 03F4  
                 __ptext6 03AA                   __ptext7 0355                   __ptext8 0548  
                 __ptext9 0595                   _lcd_msg 00A0                   _dpowers 0306  
                 _key_nav 0056                   _min_dec 0074                ??_dec_year 0020  
                 _sec_dec 0075         __end_of_master_rx 03AA         __end_of_master_tx 03F4  
              ??_hex2char 0021                ??_lcd_data 0027                   _sprintf 01F1  
              ??_lcd_cmnt 0027                hex2char@in 0023                   clrloop0 05B9  
              ??_lcd_init 0028      end_of_initialization 002A                ??_inc_year 0020  
        ?_i2c_master_init 0076        uart_lcd_update@len 0028             _interrupt_isr 04F6  
          ?_interrupt_isr 0076          ?_uart_lcd_update 0028       start_initialization 0015  
        master_rx@i2c_pkt 0022          master_tx@i2c_pkt 0021               __pbssCOMMON 0070  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00C0  
     __end_of__stringdata 0355         __size_of_dec_year 002F          master_rx@rx_time 0020  
       __size_of_hex2char 001A          dec_year@data_ptr 0021         __size_of_lcd_data 0012  
       __size_of_lcd_cmnt 0012         __size_of_lcd_init 0021               sprintf@_val 0041  
             sprintf@flag 003F               sprintf@prec 0040         __size_of_inc_year 002B  
               __pnvBANK0 006D          ___lwdiv@dividend 0022           ??_interrupt_isr 0076  
                ?___lwdiv 0020                  ?___lwmod 0028                 __pstrings 0300  
        ___lwdiv@quotient 0026            __size_of_delay 0032                  ?_sprintf 002E  
               _master_rx 0355                 _master_tx 03AA         interrupt_function 0004  
               clear_ram0 05B8                 _month_dec 0057               __stringbase 0305  
             __stringdata 0310                ?_master_rx 0020                ?_master_tx 0076  
__size_of_i2c_master_init 0011          __size_of___lwdiv 0040          __size_of___lwmod 0036  
      __end_of__stringtab 0306                  _dec_year 049C                  _date_dec 0070  
                _hex2char 0569           ___lwdiv@divisor 0020           ___lwdiv@counter 0025  
                __ptext10 046A                  __ptext11 04CB                  __ptext12 05A7  
                __ptext13 0569                  __ptext14 049C                  __ptext15 04F6  
                _lcd_data 0583                  _lcd_cmnt 0595                  _lcd_msg1 00B0  
                _lcd_init 0548          __size_of_sprintf 00DB                  _inc_year 04CB  
           __size_of_main 01C3                  _hour_dec 0073                  _year_dec 0059  
             hex2char@out 0020  __size_of_uart_lcd_update 0027               ??_master_rx 0021  
             ??_master_tx 0020                  intlevel1 0000                 sprintf@ap 003E  
               sprintf@sp 0045          ___lwmod@dividend 002A                 stringcode 0300  
     uart_lcd_update@data 002A          inc_year@data_ptr 0021                _OPTION_REG 0081  
                sprintf@c 0046                  sprintf@f 002E           ___lwmod@divisor 0028  
         ___lwmod@counter 002D         ??_i2c_master_init 0020                  stringdir 0300  
                stringtab 0300  
