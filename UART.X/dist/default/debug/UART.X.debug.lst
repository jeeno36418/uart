

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Apr 20 00:52:11 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  0008                     	;# 
    32  0009                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000D                     	;# 
    37  000E                     	;# 
    38  000E                     	;# 
    39  000F                     	;# 
    40  0010                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0014                     	;# 
    45  0015                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001B                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  001D                     	;# 
    56  001E                     	;# 
    57  001F                     	;# 
    58  0081                     	;# 
    59  0085                     	;# 
    60  0086                     	;# 
    61  0087                     	;# 
    62  0088                     	;# 
    63  0089                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0094                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  009F                     	;# 
    77  010C                     	;# 
    78  010D                     	;# 
    79  010E                     	;# 
    80  010F                     	;# 
    81  018C                     	;# 
    82  018D                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0006                     _PORTB	set	6
   144  0008                     _PORTD	set	8
   145  0009                     _PORTE	set	9
   146  001A                     _RCREG	set	26
   147  0010                     _T1CON	set	16
   148  000F                     _TMR1H	set	15
   149  000E                     _TMR1L	set	14
   150  0019                     _TXREG	set	25
   151  00C3                     _ADDEN	set	195
   152  00C4                     _CREN	set	196
   153  005F                     _GIE	set	95
   154  005E                     _PEIE	set	94
   155  0065                     _RCIF	set	101
   156  0048                     _RE0	set	72
   157  0049                     _RE1	set	73
   158  00C6                     _RX9	set	198
   159  00C7                     _SPEN	set	199
   160  0060                     _TMR1IF	set	96
   161  0064                     _TXIF	set	100
   162  009F                     _ADCON1	set	159
   163  0099                     _SPBRG	set	153
   164  0086                     _TRISB	set	134
   165  0088                     _TRISD	set	136
   166  0089                     _TRISE	set	137
   167  0098                     _TXSTAbits	set	152
   168  0465                     _RCIE	set	1125
   169  04C4                     _SYNC	set	1220
   170  0460                     _TMR1IE	set	1120
   171  043E                     _TRISC6	set	1086
   172  043F                     _TRISC7	set	1087
   173  04C6                     _TX9	set	1222
   174  04C5                     _TXEN	set	1221
   175  0464                     _TXIE	set	1124
   176                           
   177                           	psect	text0
   178  0000                     __ptext0:	
   179                           ; #config settings
   180                           
   181                           
   182                           	psect	cinit
   183  0015                     start_initialization:	
   184                           ;psect for function _uart_read
   185                           
   186  0015                     __initialization:	
   187                           
   188                           ; Clear objects allocated to COMMON
   189  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   190  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   191  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   192  0018  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   193                           
   194                           ; Clear objects allocated to BANK0
   195  0019  1383               	bcf	3,7	;select IRP bank0
   196  001A  3020               	movlw	low __pbssBANK0
   197  001B  0084               	movwf	4
   198  001C  3045               	movlw	low (__pbssBANK0+37)
   199  001D  120A  118A  21D5   	fcall	clear_ram0
   200  0020                     end_of_initialization:	
   201                           ;End of C runtime variable initialization code
   202                           
   203  0020                     __end_of__initialization:	
   204  0020  0183               	clrf	3
   205  0021  120A  118A  28F0   	ljmp	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMMON
   208  0076                     __pbssCOMMON:	
   209  0076                     _count:	
   210  0076                     	ds	1
   211  0077                     _recieved:	
   212  0077                     	ds	1
   213  0078                     _rxmsg:	
   214  0078                     	ds	1
   215  0079                     _transmision_msg:	
   216  0079                     	ds	1
   217                           
   218                           	psect	bssBANK0
   219  0020                     __pbssBANK0:	
   220  0020                     _lcd_msg:	
   221  0020                     	ds	16
   222  0030                     _lcd_msg1:	
   223  0030                     	ds	16
   224  0040                     _local_time:	
   225  0040                     	ds	3
   226  0043                     _time_flag:	
   227  0043                     	ds	1
   228  0044                     _timer:	
   229  0044                     	ds	1
   230                           
   231                           	psect	clrtext
   232  01D5                     clear_ram0:	
   233                           ;	Called with FSR containing the base address, and
   234                           ;	W with the last address+1
   235                           
   236  01D5  0064               	clrwdt	;clear the watchdog before getting into this loop
   237  01D6                     clrloop0:	
   238  01D6  0180               	clrf	0	;clear RAM location pointed to by FSR
   239  01D7  0A84               	incf	4,f	;increment pointer
   240  01D8  0604               	xorwf	4,w	;XOR with final address
   241  01D9  1903               	btfsc	3,2	;have we reached the end yet?
   242  01DA  3400               	retlw	0	;all done for this memory range, return
   243  01DB  0604               	xorwf	4,w	;XOR again to restore value
   244  01DC  29D6               	goto	clrloop0	;do the next byte
   245                           
   246                           	psect	cstackCOMMON
   247  0070                     __pcstackCOMMON:	
   248  0070                     ?_timer_init:	
   249  0070                     ?_lcd_init:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_uart_write:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_lcd_cmnt:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_main:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_uart_read:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ??_uart_read:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_isr:	
   268                           ; 0 bytes @ 0x0
   269                           
   270                           
   271                           ; 0 bytes @ 0x0
   272  0070                     	ds	1
   273  0071                     ??_isr:	
   274                           
   275                           ; 0 bytes @ 0x1
   276  0071                     	ds	5
   277                           
   278                           	psect	cstackBANK0
   279  0045                     __pcstackBANK0:	
   280  0045                     ??_timer_init:	
   281  0045                     ??_uart_write:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0045                     ?_delay:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0045                     ?___aldiv:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0045                     delay@x:	
   291                           ; 4 bytes @ 0x0
   292                           
   293  0045                     ___aldiv@divisor:	
   294                           ; 2 bytes @ 0x0
   295                           
   296                           
   297                           ; 4 bytes @ 0x0
   298  0045                     	ds	1
   299  0046                     uart_write@write_msg:	
   300                           
   301                           ; 1 bytes @ 0x1
   302  0046                     	ds	1
   303  0047                     ??_delay:	
   304                           
   305                           ; 0 bytes @ 0x2
   306  0047                     	ds	1
   307  0048                     delay@i:	
   308                           
   309                           ; 2 bytes @ 0x3
   310  0048                     	ds	1
   311  0049                     ___aldiv@dividend:	
   312                           
   313                           ; 4 bytes @ 0x4
   314  0049                     	ds	1
   315  004A                     delay@j:	
   316                           
   317                           ; 2 bytes @ 0x5
   318  004A                     	ds	2
   319  004C                     ??_lcd_cmnt:	
   320  004C                     lcd_cmnt@cmnt:	
   321                           ; 0 bytes @ 0x7
   322                           
   323                           
   324                           ; 1 bytes @ 0x7
   325  004C                     	ds	1
   326  004D                     ??_lcd_init:	
   327  004D                     ??___aldiv:	
   328                           ; 0 bytes @ 0x8
   329                           
   330                           
   331                           ; 0 bytes @ 0x8
   332  004D                     	ds	1
   333  004E                     ___aldiv@counter:	
   334                           
   335                           ; 1 bytes @ 0x9
   336  004E                     	ds	1
   337  004F                     ___aldiv@sign:	
   338                           
   339                           ; 1 bytes @ 0xA
   340  004F                     	ds	1
   341  0050                     ___aldiv@quotient:	
   342                           
   343                           ; 4 bytes @ 0xB
   344  0050                     	ds	4
   345  0054                     ?_uart_init:	
   346  0054                     uart_init@baud_rate:	
   347                           ; 0 bytes @ 0xF
   348                           
   349                           
   350                           ; 2 bytes @ 0xF
   351  0054                     	ds	2
   352  0056                     uart_init@high_baud_select:	
   353                           
   354                           ; 1 bytes @ 0x11
   355  0056                     	ds	1
   356  0057                     ??_uart_init:	
   357  0057                     ??_main:	
   358                           ; 0 bytes @ 0x12
   359                           
   360                           
   361                           ; 0 bytes @ 0x12
   362  0057                     	ds	1
   363                           
   364                           	psect	maintext
   365  00F0                     __pmaintext:	
   366 ;;
   367 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   368 ;;
   369 ;; *************** function _main *****************
   370 ;; Defined at:
   371 ;;		line 20 in file "uart.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;		None               void
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0, pclath, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : 17F/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   385 ;;      Params:         0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0
   387 ;;      Temps:          0       1       0       0       0
   388 ;;      Totals:         0       1       0       0       0
   389 ;;Total ram usage:        1 bytes
   390 ;; Hardware stack levels required when called:    5
   391 ;; This function calls:
   392 ;;		_lcd_init
   393 ;;		_timer_init
   394 ;;		_uart_init
   395 ;;		_uart_write
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function _main
   403  00F0                     _main:	
   404                           
   405                           ;uart.c: 22: TRISB=0x00;
   406                           
   407                           ;incstack = 0
   408                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   409  00F0  1683               	bsf	3,5	;RP0=1, select bank1
   410  00F1  1303               	bcf	3,6	;RP1=0, select bank1
   411  00F2  0186               	clrf	6	;volatile
   412                           
   413                           ;uart.c: 23: TRISD=0X00;
   414  00F3  0188               	clrf	8	;volatile
   415                           
   416                           ;uart.c: 24: TRISE=0X00;
   417  00F4  0189               	clrf	9	;volatile
   418                           
   419                           ;uart.c: 25: PORTB=0X00;
   420  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   421  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   422  00F7  0186               	clrf	6	;volatile
   423                           
   424                           ;uart.c: 26: PORTE=0X00;
   425  00F8  0189               	clrf	9	;volatile
   426                           
   427                           ;uart.c: 28: timer_init();
   428  00F9  120A  118A  21BE  120A  118A  	fcall	_timer_init
   429                           
   430                           ;uart.c: 29: uart_init(9600,0);
   431  00FE  3080               	movlw	128
   432  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   433  0100  1303               	bcf	3,6	;RP1=0, select bank0
   434  0101  00D4               	movwf	uart_init@baud_rate
   435  0102  3025               	movlw	37
   436  0103  00D5               	movwf	uart_init@baud_rate+1
   437  0104  01D6               	clrf	uart_init@high_baud_select
   438  0105  120A  118A  2127  120A  118A  	fcall	_uart_init
   439                           
   440                           ;uart.c: 30: lcd_init();
   441  010A  120A  118A  218B  120A  118A  	fcall	_lcd_init
   442  010F                     l1123:	
   443                           ;uart.c: 31: while(1)
   444                           
   445                           
   446                           ;uart.c: 32: {
   447                           ;uart.c: 39: if(time_flag)
   448  010F  1283               	bcf	3,5	;RP0=0, select bank0
   449  0110  1303               	bcf	3,6	;RP1=0, select bank0
   450  0111  0843               	movf	_time_flag,w
   451  0112  1903               	btfsc	3,2
   452  0113  290F               	goto	l1123
   453                           
   454                           ;uart.c: 40: {
   455                           ;uart.c: 41: time_flag=0;
   456  0114  01C3               	clrf	_time_flag
   457                           
   458                           ;uart.c: 42: uart_write(timer++);
   459  0115  0844               	movf	_timer,w
   460  0116  120A  118A  21CA  120A  118A  	fcall	_uart_write
   461  011B  3001               	movlw	1
   462  011C  1283               	bcf	3,5	;RP0=0, select bank0
   463  011D  1303               	bcf	3,6	;RP1=0, select bank0
   464  011E  00D7               	movwf	??_main
   465  011F  0857               	movf	??_main,w
   466  0120  07C4               	addwf	_timer,f
   467                           
   468                           ;uart.c: 43: if(timer==60)
   469  0121  0844               	movf	_timer,w
   470  0122  3A3C               	xorlw	60
   471  0123  1D03               	skipz
   472  0124  290F               	goto	l1123
   473                           
   474                           ;uart.c: 44: {
   475                           ;uart.c: 45: timer=0;
   476  0125  01C4               	clrf	_timer
   477  0126  290F               	goto	l1123
   478  0127                     __end_of_main:	
   479                           
   480                           	psect	text1
   481  01CA                     __ptext1:	
   482 ;; *************** function _uart_write *****************
   483 ;; Defined at:
   484 ;;		line 117 in file "uart.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;  write_msg       1    wreg     unsigned char 
   487 ;; Auto vars:     Size  Location     Type
   488 ;;  write_msg       1    1[BANK0 ] unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;		None               void
   491 ;; Registers used:
   492 ;;		wreg
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       1       0       0       0
   500 ;;      Temps:          0       1       0       0       0
   501 ;;      Totals:         0       2       0       0       0
   502 ;;Total ram usage:        2 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    2
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           
   513                           ;psect for function _uart_write
   514  01CA                     _uart_write:	
   515                           
   516                           ;incstack = 0
   517                           ; Regs used in _uart_write: [wreg]
   518                           ;uart_write@write_msg stored from wreg
   519  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   520  01CB  1303               	bcf	3,6	;RP1=0, select bank0
   521  01CC  00C6               	movwf	uart_write@write_msg
   522                           
   523                           ;uart.c: 120: transmision_msg=write_msg;
   524  01CD  0846               	movf	uart_write@write_msg,w
   525  01CE  00C5               	movwf	??_uart_write
   526  01CF  0845               	movf	??_uart_write,w
   527  01D0  00F9               	movwf	_transmision_msg
   528                           
   529                           ;uart.c: 122: TXIE=1;
   530  01D1  1683               	bsf	3,5	;RP0=1, select bank1
   531  01D2  1303               	bcf	3,6	;RP1=0, select bank1
   532  01D3  160C               	bsf	12,4	;volatile
   533  01D4  0008               	return
   534  01D5                     __end_of_uart_write:	
   535                           
   536                           	psect	text2
   537  0127                     __ptext2:	
   538 ;; *************** function _uart_init *****************
   539 ;; Defined at:
   540 ;;		line 95 in file "uart.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;  baud_rate       2   15[BANK0 ] unsigned int 
   543 ;;  high_baud_se    1   17[BANK0 ] unsigned char 
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;		None               void
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       3       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0
   558 ;;      Totals:         0       3       0       0       0
   559 ;;Total ram usage:        3 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; Hardware stack levels required when called:    3
   562 ;; This function calls:
   563 ;;		___aldiv
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           
   570                           ;psect for function _uart_init
   571  0127                     _uart_init:	
   572                           
   573                           ;uart.c: 97: TRISC6=0;
   574                           
   575                           ;incstack = 0
   576                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
   577  0127  1683               	bsf	3,5	;RP0=1, select bank1
   578  0128  1303               	bcf	3,6	;RP1=0, select bank1
   579  0129  1307               	bcf	7,6	;volatile
   580                           
   581                           ;uart.c: 98: TRISC7=1;
   582  012A  1787               	bsf	7,7	;volatile
   583                           
   584                           ;uart.c: 99: TXSTAbits.BRGH=high_baud_select;
   585  012B  1283               	bcf	3,5	;RP0=0, select bank0
   586  012C  1303               	bcf	3,6	;RP1=0, select bank0
   587  012D  0856               	movf	uart_init@high_baud_select,w
   588  012E  1683               	bsf	3,5	;RP0=1, select bank1
   589  012F  1303               	bcf	3,6	;RP1=0, select bank1
   590  0130  1D03               	skipz
   591  0131  1518               	bsf	24,2	;volatile
   592  0132  1903               	skipnz
   593  0133  1118               	bcf	24,2	;volatile
   594                           
   595                           ;uart.c: 100: TXEN=1;
   596  0134  1698               	bsf	24,5	;volatile
   597                           
   598                           ;uart.c: 101: TX9=0;
   599  0135  1318               	bcf	24,6	;volatile
   600                           
   601                           ;uart.c: 102: SYNC=0;
   602  0136  1218               	bcf	24,4	;volatile
   603                           
   604                           ;uart.c: 103: SPEN=1;
   605  0137  1283               	bcf	3,5	;RP0=0, select bank0
   606  0138  1303               	bcf	3,6	;RP1=0, select bank0
   607  0139  1798               	bsf	24,7	;volatile
   608                           
   609                           ;uart.c: 104: RX9=0;
   610  013A  1318               	bcf	24,6	;volatile
   611                           
   612                           ;uart.c: 105: CREN=1;
   613  013B  1618               	bsf	24,4	;volatile
   614                           
   615                           ;uart.c: 106: ADDEN=0;
   616  013C  1198               	bcf	24,3	;volatile
   617                           
   618                           ;uart.c: 109: SPBRG=(((16000000/64)/baud_rate)-1);
   619  013D  0854               	movf	uart_init@baud_rate,w
   620  013E  00C5               	movwf	___aldiv@divisor
   621  013F  0855               	movf	uart_init@baud_rate+1,w
   622  0140  00C6               	movwf	___aldiv@divisor+1
   623  0141  01C7               	clrf	___aldiv@divisor+2
   624  0142  01C8               	clrf	___aldiv@divisor+3
   625  0143  3000               	movlw	0
   626  0144  00CC               	movwf	___aldiv@dividend+3
   627  0145  3003               	movlw	3
   628  0146  00CB               	movwf	___aldiv@dividend+2
   629  0147  30D0               	movlw	208
   630  0148  00CA               	movwf	___aldiv@dividend+1
   631  0149  3090               	movlw	144
   632  014A  00C9               	movwf	___aldiv@dividend
   633  014B  120A  118A  2024   	fcall	___aldiv
   634  014E  1283               	bcf	3,5	;RP0=0, select bank0
   635  014F  1303               	bcf	3,6	;RP1=0, select bank0
   636  0150  0845               	movf	?___aldiv,w
   637  0151  3EFF               	addlw	255
   638  0152  1683               	bsf	3,5	;RP0=1, select bank1
   639  0153  1303               	bcf	3,6	;RP1=0, select bank1
   640  0154  0099               	movwf	25	;volatile
   641                           
   642                           ;uart.c: 110: GIE=1;
   643  0155  178B               	bsf	11,7	;volatile
   644                           
   645                           ;uart.c: 111: PEIE=1;
   646  0156  170B               	bsf	11,6	;volatile
   647                           
   648                           ;uart.c: 113: RCIE=1;
   649  0157  168C               	bsf	12,5	;volatile
   650  0158  0008               	return
   651  0159                     __end_of_uart_init:	
   652                           
   653                           	psect	text3
   654  0024                     __ptext3:	
   655 ;; *************** function ___aldiv *****************
   656 ;; Defined at:
   657 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\aldiv.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  divisor         4    0[BANK0 ] long 
   660 ;;  dividend        4    4[BANK0 ] long 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  quotient        4   11[BANK0 ] long 
   663 ;;  sign            1   10[BANK0 ] unsigned char 
   664 ;;  counter         1    9[BANK0 ] unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  4    0[BANK0 ] long 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         0       8       0       0       0
   675 ;;      Locals:         0       6       0       0       0
   676 ;;      Temps:          0       1       0       0       0
   677 ;;      Totals:         0      15       0       0       0
   678 ;;Total ram usage:       15 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; Hardware stack levels required when called:    2
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_uart_init
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function ___aldiv
   690  0024                     ___aldiv:	
   691                           
   692                           ;incstack = 0
   693                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   694  0024  1283               	bcf	3,5	;RP0=0, select bank0
   695  0025  1303               	bcf	3,6	;RP1=0, select bank0
   696  0026  01CF               	clrf	___aldiv@sign
   697  0027  1FC8               	btfss	___aldiv@divisor+3,7
   698  0028  2836               	goto	l307
   699  0029  09C5               	comf	___aldiv@divisor,f
   700  002A  09C6               	comf	___aldiv@divisor+1,f
   701  002B  09C7               	comf	___aldiv@divisor+2,f
   702  002C  09C8               	comf	___aldiv@divisor+3,f
   703  002D  0AC5               	incf	___aldiv@divisor,f
   704  002E  1903               	skipnz
   705  002F  0AC6               	incf	___aldiv@divisor+1,f
   706  0030  1903               	skipnz
   707  0031  0AC7               	incf	___aldiv@divisor+2,f
   708  0032  1903               	skipnz
   709  0033  0AC8               	incf	___aldiv@divisor+3,f
   710  0034  01CF               	clrf	___aldiv@sign
   711  0035  0ACF               	incf	___aldiv@sign,f
   712  0036                     l307:	
   713  0036  1FCC               	btfss	___aldiv@dividend+3,7
   714  0037  2847               	goto	l1039
   715  0038  09C9               	comf	___aldiv@dividend,f
   716  0039  09CA               	comf	___aldiv@dividend+1,f
   717  003A  09CB               	comf	___aldiv@dividend+2,f
   718  003B  09CC               	comf	___aldiv@dividend+3,f
   719  003C  0AC9               	incf	___aldiv@dividend,f
   720  003D  1903               	skipnz
   721  003E  0ACA               	incf	___aldiv@dividend+1,f
   722  003F  1903               	skipnz
   723  0040  0ACB               	incf	___aldiv@dividend+2,f
   724  0041  1903               	skipnz
   725  0042  0ACC               	incf	___aldiv@dividend+3,f
   726  0043  3001               	movlw	1
   727  0044  00CD               	movwf	??___aldiv
   728  0045  084D               	movf	??___aldiv,w
   729  0046  06CF               	xorwf	___aldiv@sign,f
   730  0047                     l1039:	
   731  0047  3000               	movlw	0
   732  0048  00D3               	movwf	___aldiv@quotient+3
   733  0049  3000               	movlw	0
   734  004A  00D2               	movwf	___aldiv@quotient+2
   735  004B  3000               	movlw	0
   736  004C  00D1               	movwf	___aldiv@quotient+1
   737  004D  3000               	movlw	0
   738  004E  00D0               	movwf	___aldiv@quotient
   739  004F  0848               	movf	___aldiv@divisor+3,w
   740  0050  0447               	iorwf	___aldiv@divisor+2,w
   741  0051  0446               	iorwf	___aldiv@divisor+1,w
   742  0052  0445               	iorwf	___aldiv@divisor,w
   743  0053  1903               	skipnz
   744  0054  289C               	goto	l1061
   745  0055  01CE               	clrf	___aldiv@counter
   746  0056  0ACE               	incf	___aldiv@counter,f
   747  0057                     l1047:	
   748  0057  1BC8               	btfsc	___aldiv@divisor+3,7
   749  0058  2867               	goto	l1049
   750  0059  3001               	movlw	1
   751  005A  00CD               	movwf	??___aldiv
   752  005B                     u535:	
   753  005B  1003               	clrc
   754  005C  0DC5               	rlf	___aldiv@divisor,f
   755  005D  0DC6               	rlf	___aldiv@divisor+1,f
   756  005E  0DC7               	rlf	___aldiv@divisor+2,f
   757  005F  0DC8               	rlf	___aldiv@divisor+3,f
   758  0060  0BCD               	decfsz	??___aldiv,f
   759  0061  285B               	goto	u535
   760  0062  3001               	movlw	1
   761  0063  00CD               	movwf	??___aldiv
   762  0064  084D               	movf	??___aldiv,w
   763  0065  07CE               	addwf	___aldiv@counter,f
   764  0066  2857               	goto	l1047
   765  0067                     l1049:	
   766  0067  3001               	movlw	1
   767  0068  00CD               	movwf	??___aldiv
   768  0069                     u555:	
   769  0069  1003               	clrc
   770  006A  0DD0               	rlf	___aldiv@quotient,f
   771  006B  0DD1               	rlf	___aldiv@quotient+1,f
   772  006C  0DD2               	rlf	___aldiv@quotient+2,f
   773  006D  0DD3               	rlf	___aldiv@quotient+3,f
   774  006E  0BCD               	decfsz	??___aldiv,f
   775  006F  2869               	goto	u555
   776  0070  0848               	movf	___aldiv@divisor+3,w
   777  0071  024C               	subwf	___aldiv@dividend+3,w
   778  0072  1D03               	skipz
   779  0073  287E               	goto	u565
   780  0074  0847               	movf	___aldiv@divisor+2,w
   781  0075  024B               	subwf	___aldiv@dividend+2,w
   782  0076  1D03               	skipz
   783  0077  287E               	goto	u565
   784  0078  0846               	movf	___aldiv@divisor+1,w
   785  0079  024A               	subwf	___aldiv@dividend+1,w
   786  007A  1D03               	skipz
   787  007B  287E               	goto	u565
   788  007C  0845               	movf	___aldiv@divisor,w
   789  007D  0249               	subwf	___aldiv@dividend,w
   790  007E                     u565:	
   791  007E  1C03               	skipc
   792  007F  288F               	goto	l1057
   793  0080  0845               	movf	___aldiv@divisor,w
   794  0081  02C9               	subwf	___aldiv@dividend,f
   795  0082  0846               	movf	___aldiv@divisor+1,w
   796  0083  1C03               	skipc
   797  0084  0F46               	incfsz	___aldiv@divisor+1,w
   798  0085  02CA               	subwf	___aldiv@dividend+1,f
   799  0086  0847               	movf	___aldiv@divisor+2,w
   800  0087  1C03               	skipc
   801  0088  0F47               	incfsz	___aldiv@divisor+2,w
   802  0089  02CB               	subwf	___aldiv@dividend+2,f
   803  008A  0848               	movf	___aldiv@divisor+3,w
   804  008B  1C03               	skipc
   805  008C  0F48               	incfsz	___aldiv@divisor+3,w
   806  008D  02CC               	subwf	___aldiv@dividend+3,f
   807  008E  1450               	bsf	___aldiv@quotient,0
   808  008F                     l1057:	
   809  008F  3001               	movlw	1
   810  0090                     u575:	
   811  0090  1003               	clrc
   812  0091  0CC8               	rrf	___aldiv@divisor+3,f
   813  0092  0CC7               	rrf	___aldiv@divisor+2,f
   814  0093  0CC6               	rrf	___aldiv@divisor+1,f
   815  0094  0CC5               	rrf	___aldiv@divisor,f
   816  0095  3EFF               	addlw	-1
   817  0096  1D03               	skipz
   818  0097  2890               	goto	u575
   819  0098  3001               	movlw	1
   820  0099  02CE               	subwf	___aldiv@counter,f
   821  009A  1D03               	btfss	3,2
   822  009B  2867               	goto	l1049
   823  009C                     l1061:	
   824  009C  084F               	movf	___aldiv@sign,w
   825  009D  1903               	btfsc	3,2
   826  009E  28AA               	goto	l1065
   827  009F  09D0               	comf	___aldiv@quotient,f
   828  00A0  09D1               	comf	___aldiv@quotient+1,f
   829  00A1  09D2               	comf	___aldiv@quotient+2,f
   830  00A2  09D3               	comf	___aldiv@quotient+3,f
   831  00A3  0AD0               	incf	___aldiv@quotient,f
   832  00A4  1903               	skipnz
   833  00A5  0AD1               	incf	___aldiv@quotient+1,f
   834  00A6  1903               	skipnz
   835  00A7  0AD2               	incf	___aldiv@quotient+2,f
   836  00A8  1903               	skipnz
   837  00A9  0AD3               	incf	___aldiv@quotient+3,f
   838  00AA                     l1065:	
   839  00AA  0853               	movf	___aldiv@quotient+3,w
   840  00AB  00C8               	movwf	?___aldiv+3
   841  00AC  0852               	movf	___aldiv@quotient+2,w
   842  00AD  00C7               	movwf	?___aldiv+2
   843  00AE  0851               	movf	___aldiv@quotient+1,w
   844  00AF  00C6               	movwf	?___aldiv+1
   845  00B0  0850               	movf	___aldiv@quotient,w
   846  00B1  00C5               	movwf	?___aldiv
   847  00B2  0008               	return
   848  00B3                     __end_of___aldiv:	
   849                           
   850                           	psect	text4
   851  01BE                     __ptext4:	
   852 ;; *************** function _timer_init *****************
   853 ;; Defined at:
   854 ;;		line 68 in file "uart.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;		None               void
   861 ;; Registers used:
   862 ;;		wreg
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0
   871 ;;      Totals:         0       0       0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    2
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _timer_init
   884  01BE                     _timer_init:	
   885                           
   886                           ;uart.c: 70: T1CON=0x31;
   887                           
   888                           ;incstack = 0
   889                           ; Regs used in _timer_init: [wreg]
   890  01BE  3031               	movlw	49
   891  01BF  1283               	bcf	3,5	;RP0=0, select bank0
   892  01C0  1303               	bcf	3,6	;RP1=0, select bank0
   893  01C1  0090               	movwf	16	;volatile
   894                           
   895                           ;uart.c: 71: TMR1H=0xCF;
   896  01C2  30CF               	movlw	207
   897  01C3  008F               	movwf	15	;volatile
   898                           
   899                           ;uart.c: 72: TMR1L=0x2C;
   900  01C4  302C               	movlw	44
   901  01C5  008E               	movwf	14	;volatile
   902                           
   903                           ;uart.c: 73: TMR1IE=1;
   904  01C6  1683               	bsf	3,5	;RP0=1, select bank1
   905  01C7  1303               	bcf	3,6	;RP1=0, select bank1
   906  01C8  140C               	bsf	12,0	;volatile
   907  01C9  0008               	return
   908  01CA                     __end_of_timer_init:	
   909                           
   910                           	psect	text5
   911  018B                     __ptext5:	
   912 ;; *************** function _lcd_init *****************
   913 ;; Defined at:
   914 ;;		line 191 in file "uart.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;		None               void
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0, pclath, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   928 ;;      Params:         0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0
   931 ;;      Totals:         0       0       0       0       0
   932 ;;Total ram usage:        0 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    4
   935 ;; This function calls:
   936 ;;		_lcd_cmnt
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _lcd_init
   944  018B                     _lcd_init:	
   945                           
   946                           ;uart.c: 193: TRISD=0X00;
   947                           
   948                           ;incstack = 0
   949                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   950  018B  1683               	bsf	3,5	;RP0=1, select bank1
   951  018C  1303               	bcf	3,6	;RP1=0, select bank1
   952  018D  0188               	clrf	8	;volatile
   953                           
   954                           ;uart.c: 194: PORTD=0X00;
   955  018E  1283               	bcf	3,5	;RP0=0, select bank0
   956  018F  1303               	bcf	3,6	;RP1=0, select bank0
   957  0190  0188               	clrf	8	;volatile
   958                           
   959                           ;uart.c: 195: ADCON1=0X06;
   960  0191  3006               	movlw	6
   961  0192  1683               	bsf	3,5	;RP0=1, select bank1
   962  0193  1303               	bcf	3,6	;RP1=0, select bank1
   963  0194  009F               	movwf	31	;volatile
   964                           
   965                           ;uart.c: 197: lcd_cmnt(0x38);
   966  0195  3038               	movlw	56
   967  0196  120A  118A  21AC  120A  118A  	fcall	_lcd_cmnt
   968                           
   969                           ;uart.c: 198: lcd_cmnt(0x0c);
   970  019B  300C               	movlw	12
   971  019C  120A  118A  21AC  120A  118A  	fcall	_lcd_cmnt
   972                           
   973                           ;uart.c: 199: lcd_cmnt(0x01);
   974  01A1  3001               	movlw	1
   975  01A2  120A  118A  21AC  120A  118A  	fcall	_lcd_cmnt
   976                           
   977                           ;uart.c: 200: lcd_cmnt(0x80);
   978  01A7  3080               	movlw	128
   979  01A8  120A  118A  21AC   	fcall	_lcd_cmnt
   980  01AB  0008               	return
   981  01AC                     __end_of_lcd_init:	
   982                           
   983                           	psect	text6
   984  01AC                     __ptext6:	
   985 ;; *************** function _lcd_cmnt *****************
   986 ;; Defined at:
   987 ;;		line 202 in file "uart.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  cmnt            1    wreg     unsigned char 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  cmnt            1    7[BANK0 ] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;		None               void
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0, pclath, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         0       1       0       0       0
  1003 ;;      Temps:          0       0       0       0       0
  1004 ;;      Totals:         0       1       0       0       0
  1005 ;;Total ram usage:        1 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    3
  1008 ;; This function calls:
  1009 ;;		_delay
  1010 ;; This function is called by:
  1011 ;;		_lcd_init
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _lcd_cmnt
  1017  01AC                     _lcd_cmnt:	
  1018                           
  1019                           ;incstack = 0
  1020                           ; Regs used in _lcd_cmnt: [wreg+status,2+status,0+pclath+cstack]
  1021                           ;lcd_cmnt@cmnt stored from wreg
  1022  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1023  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1024  01AE  00CC               	movwf	lcd_cmnt@cmnt
  1025                           
  1026                           ;uart.c: 204: PORTD=cmnt;
  1027  01AF  084C               	movf	lcd_cmnt@cmnt,w
  1028  01B0  0088               	movwf	8	;volatile
  1029                           
  1030                           ;uart.c: 205: RE0=0;
  1031  01B1  1009               	bcf	9,0	;volatile
  1032                           
  1033                           ;uart.c: 206: RE1=1;delay(10);RE1=0; ;
  1034  01B2  1489               	bsf	9,1	;volatile
  1035  01B3  300A               	movlw	10
  1036  01B4  00C5               	movwf	delay@x
  1037  01B5  3000               	movlw	0
  1038  01B6  00C6               	movwf	delay@x+1
  1039  01B7  120A  118A  2159   	fcall	_delay
  1040  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1041  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1042  01BC  1089               	bcf	9,1	;volatile
  1043  01BD  0008               	return
  1044  01BE                     __end_of_lcd_cmnt:	
  1045                           
  1046                           	psect	text7
  1047  0159                     __ptext7:	
  1048 ;; *************** function _delay *****************
  1049 ;; Defined at:
  1050 ;;		line 218 in file "uart.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  x               2    0[BANK0 ] int 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  j               2    5[BANK0 ] int 
  1055 ;;  i               2    3[BANK0 ] int 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;		None               void
  1058 ;; Registers used:
  1059 ;;		wreg, status,2
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         0       2       0       0       0
  1066 ;;      Locals:         0       4       0       0       0
  1067 ;;      Temps:          0       1       0       0       0
  1068 ;;      Totals:         0       7       0       0       0
  1069 ;;Total ram usage:        7 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    2
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_lcd_cmnt
  1076 ;;		_lcd_data
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _delay
  1082  0159                     _delay:	
  1083                           
  1084                           ;uart.c: 220: int i,j;
  1085                           ;uart.c: 221: for(i=0;i<=x;i++)
  1086                           
  1087                           ;incstack = 0
  1088                           ; Regs used in _delay: [wreg+status,2]
  1089  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1090  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1091  015B  01C8               	clrf	delay@i
  1092  015C  01C9               	clrf	delay@i+1
  1093  015D                     l162:	
  1094  015D  0846               	movf	delay@x+1,w
  1095  015E  3A80               	xorlw	128
  1096  015F  00C7               	movwf	??_delay
  1097  0160  0849               	movf	delay@i+1,w
  1098  0161  3A80               	xorlw	128
  1099  0162  0247               	subwf	??_delay,w
  1100  0163  1D03               	skipz
  1101  0164  2967               	goto	u495
  1102  0165  0848               	movf	delay@i,w
  1103  0166  0245               	subwf	delay@x,w
  1104  0167                     u495:	
  1105  0167  1C03               	btfss	3,0
  1106  0168  0008               	return
  1107                           
  1108                           ;uart.c: 222: {
  1109                           ;uart.c: 223: for(j=0;j<=x;j++)
  1110  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1111  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1112  016B  01CA               	clrf	delay@j
  1113  016C  01CB               	clrf	delay@j+1
  1114  016D                     l164:	
  1115  016D  0846               	movf	delay@x+1,w
  1116  016E  3A80               	xorlw	128
  1117  016F  00C7               	movwf	??_delay
  1118  0170  084B               	movf	delay@j+1,w
  1119  0171  3A80               	xorlw	128
  1120  0172  0247               	subwf	??_delay,w
  1121  0173  1D03               	skipz
  1122  0174  2977               	goto	u485
  1123  0175  084A               	movf	delay@j,w
  1124  0176  0245               	subwf	delay@x,w
  1125  0177                     u485:	
  1126  0177  1C03               	btfss	3,0
  1127  0178  2982               	goto	l1017
  1128                           
  1129                           ;uart.c: 224: {}
  1130  0179  3001               	movlw	1
  1131  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1132  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1133  017C  07CA               	addwf	delay@j,f
  1134  017D  1803               	skipnc
  1135  017E  0ACB               	incf	delay@j+1,f
  1136  017F  3000               	movlw	0
  1137  0180  07CB               	addwf	delay@j+1,f
  1138  0181  296D               	goto	l164
  1139  0182                     l1017:	
  1140  0182  3001               	movlw	1
  1141  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0185  07C8               	addwf	delay@i,f
  1144  0186  1803               	skipnc
  1145  0187  0AC9               	incf	delay@i+1,f
  1146  0188  3000               	movlw	0
  1147  0189  07C9               	addwf	delay@i+1,f
  1148  018A  295D               	goto	l162
  1149  018B                     __end_of_delay:	
  1150                           
  1151                           	psect	text8
  1152  00B3                     __ptext8:	
  1153 ;; *************** function _isr *****************
  1154 ;; Defined at:
  1155 ;;		line 152 in file "uart.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;		None               void
  1162 ;; Registers used:
  1163 ;;		wreg, status,2, status,0, pclath, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         0       0       0       0       0
  1170 ;;      Locals:         0       0       0       0       0
  1171 ;;      Temps:          5       0       0       0       0
  1172 ;;      Totals:         5       0       0       0       0
  1173 ;;Total ram usage:        5 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    1
  1176 ;; This function calls:
  1177 ;;		_uart_read
  1178 ;; This function is called by:
  1179 ;;		Interrupt level 1
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           
  1184                           ;psect for function _isr
  1185  00B3                     _isr:	
  1186                           
  1187                           ;uart.c: 154: if(TMR1IF)
  1188  00B3  1C0C               	btfss	12,0	;volatile
  1189  00B4  28C5               	goto	i1l999
  1190                           
  1191                           ;uart.c: 155: {
  1192                           ;uart.c: 156: TMR1H=0xCF;
  1193  00B5  30CF               	movlw	207
  1194  00B6  008F               	movwf	15	;volatile
  1195                           
  1196                           ;uart.c: 157: TMR1L=0x2C;
  1197  00B7  302C               	movlw	44
  1198  00B8  008E               	movwf	14	;volatile
  1199                           
  1200                           ;uart.c: 159: if(count==8)
  1201  00B9  0876               	movf	_count,w
  1202  00BA  3A08               	xorlw	8
  1203  00BB  1D03               	skipz
  1204  00BC  28C0               	goto	i1l995
  1205                           
  1206                           ;uart.c: 160: {
  1207                           ;uart.c: 161: count=0;
  1208  00BD  01F6               	clrf	_count
  1209                           
  1210                           ;uart.c: 162: time_flag=1;
  1211  00BE  01C3               	clrf	_time_flag
  1212  00BF  0AC3               	incf	_time_flag,f
  1213  00C0                     i1l995:	
  1214                           
  1215                           ;uart.c: 164: }
  1216                           ;uart.c: 165: count++;
  1217  00C0  3001               	movlw	1
  1218  00C1  00F1               	movwf	??_isr
  1219  00C2  0871               	movf	??_isr,w
  1220  00C3  07F6               	addwf	_count,f
  1221                           
  1222                           ;uart.c: 166: TMR1IF=0;
  1223  00C4  100C               	bcf	12,0	;volatile
  1224  00C5                     i1l999:	
  1225                           
  1226                           ;uart.c: 168: }
  1227                           ;uart.c: 169: if(RCIF)
  1228  00C5  1E8C               	btfss	12,5	;volatile
  1229  00C6  28CE               	goto	i1l1005
  1230                           
  1231                           ;uart.c: 170: {
  1232                           ;uart.c: 171: uart_read();
  1233  00C7  120A  118A  21DD  120A  118A  	fcall	_uart_read
  1234                           
  1235                           ;uart.c: 172: recieved=1;
  1236  00CC  01F7               	clrf	_recieved
  1237  00CD  0AF7               	incf	_recieved,f
  1238  00CE                     i1l1005:	
  1239                           
  1240                           ;uart.c: 175: }
  1241                           ;uart.c: 176: if(TXIF&TXIE)
  1242  00CE  3001               	movlw	1
  1243  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1244  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1245  00D1  1E0C               	btfss	12,4	;volatile
  1246  00D2  3900               	andlw	0
  1247  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1248  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1249  00D5  1E0C               	btfss	12,4	;volatile
  1250  00D6  3900               	andlw	0
  1251  00D7  3800               	iorlw	0
  1252  00D8  1903               	skipnz
  1253  00D9  28E4               	goto	i1l141
  1254                           
  1255                           ;uart.c: 177: {
  1256                           ;uart.c: 178: TXIF=0;
  1257  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1258  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1259  00DC  120C               	bcf	12,4	;volatile
  1260                           
  1261                           ;uart.c: 179: TXIE=0;
  1262  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  1263  00DE  1303               	bcf	3,6	;RP1=0, select bank1
  1264  00DF  120C               	bcf	12,4	;volatile
  1265                           
  1266                           ;uart.c: 180: TXREG=transmision_msg;
  1267  00E0  0879               	movf	_transmision_msg,w
  1268  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1269  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1270  00E3  0099               	movwf	25	;volatile
  1271  00E4                     i1l141:	
  1272  00E4  0875               	movf	??_isr+4,w
  1273  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1274  00E6  00FF               	movwf	127
  1275  00E7  0874               	movf	??_isr+3,w
  1276  00E8  008A               	movwf	10
  1277  00E9  0873               	movf	??_isr+2,w
  1278  00EA  0084               	movwf	4
  1279  00EB  0E72               	swapf	(??_isr+1)^(0+-128),w
  1280  00EC  0083               	movwf	3
  1281  00ED  0EFE               	swapf	126,f
  1282  00EE  0E7E               	swapf	126,w
  1283  00EF  0009               	retfie
  1284  00F0                     __end_of_isr:	
  1285                           
  1286                           	psect	intentry
  1287  0004                     __pintentry:	
  1288                           ;incstack = 0
  1289                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1290                           
  1291  0004                     interrupt_function:	
  1292  007E                     saved_w	set	btemp
  1293  0004  00FE               	movwf	btemp
  1294  0005  0E03               	swapf	3,w
  1295  0006  00F2               	movwf	??_isr+1
  1296  0007  0804               	movf	4,w
  1297  0008  00F3               	movwf	??_isr+2
  1298  0009  080A               	movf	10,w
  1299  000A  00F4               	movwf	??_isr+3
  1300  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1301  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1302  000D  087F               	movf	btemp+1,w
  1303  000E  00F5               	movwf	??_isr+4
  1304  000F  120A  118A  28B3   	ljmp	_isr
  1305                           
  1306                           	psect	text9
  1307  01DD                     __ptext9:	
  1308 ;; *************** function _uart_read *****************
  1309 ;; Defined at:
  1310 ;;		line 126 in file "uart.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;		None               void
  1317 ;; Registers used:
  1318 ;;		wreg
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0
  1326 ;;      Temps:          1       0       0       0       0
  1327 ;;      Totals:         1       0       0       0       0
  1328 ;;Total ram usage:        1 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_isr
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function _uart_read
  1339  01DD                     _uart_read:	
  1340                           
  1341                           ;uart.c: 129: rxmsg=RCREG;
  1342                           
  1343                           ;incstack = 0
  1344                           ; Regs used in _uart_read: [wreg]
  1345  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1346  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1347  01DF  081A               	movf	26,w	;volatile
  1348  01E0  00F0               	movwf	??_uart_read
  1349  01E1  0870               	movf	??_uart_read,w
  1350  01E2  00F8               	movwf	_rxmsg
  1351  01E3  0008               	return
  1352  01E4                     __end_of_uart_read:	
  1353  007E                     btemp	set	126	;btemp
  1354  007E                     wtemp	set	126
  1355  007E                     wtemp0	set	126
  1356  0080                     wtemp1	set	128
  1357  0082                     wtemp2	set	130
  1358  0084                     wtemp3	set	132
  1359  0086                     wtemp4	set	134
  1360  0088                     wtemp5	set	136
  1361  007F                     wtemp6	set	127
  1362  007E                     ttemp	set	126
  1363  007E                     ttemp0	set	126
  1364  0081                     ttemp1	set	129
  1365  0084                     ttemp2	set	132
  1366  0087                     ttemp3	set	135
  1367  007F                     ttemp4	set	127
  1368  007E                     ltemp	set	126
  1369  007E                     ltemp0	set	126
  1370  0082                     ltemp1	set	130
  1371  0086                     ltemp2	set	134
  1372  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     19      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_uart_read

Critical Paths under _main in BANK0

    _main->_uart_init
    _uart_init->___aldiv
    _lcd_init->_lcd_cmnt
    _lcd_cmnt->_delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1167
                                             18 BANK0      1     1      0
                           _lcd_init
                         _timer_init
                          _uart_init
                         _uart_write
 ---------------------------------------------------------------------------------
 (1) _uart_write                                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            3     0      3     815
                                             15 BANK0      3     0      3
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     321
                           _lcd_cmnt
 ---------------------------------------------------------------------------------
 (2) _lcd_cmnt                                             1     1      0     321
                                              7 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                7     5      2     290
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0       0
                                              1 COMMON     5     5      0
                          _uart_read
 ---------------------------------------------------------------------------------
 (5) _uart_read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_cmnt
       _delay
   _timer_init
   _uart_init
     ___aldiv
   _uart_write

 _isr (ROOT)
   _uart_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      42       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      42      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Apr 20 00:52:11 2017

                       fsr 0004                        l162 015D                        l307 0036  
                      l164 016D                        _GIE 005F                        _RE0 0048  
                      _RE1 0049                        u535 005B                        u555 0069  
                      u485 0177                        u565 007E                        u495 0167  
                      u575 0090                        _RX9 00C6                        _TX9 04C6  
                      _isr 00B3                        fsr0 0004                        indf 0000  
             lcd_cmnt@cmnt 004C                       l1017 0182                       l1123 010F  
                     l1061 009C                       l1047 0057                       l1039 0047  
                     l1065 00AA                       l1057 008F                       l1049 0067  
                     ?_isr 0070                       _CREN 00C4                       _PEIE 005E  
                     _RCIE 0465                       _RCIF 0065                       _SPEN 00C7  
                     _TXIE 0464                       _TXEN 04C5                       _TXIF 0064  
                     _SYNC 04C4                       _main 00F0                       btemp 007E  
                     ltemp 007E                       start 0012                       ttemp 007E  
                     wtemp 007E                      ??_isr 0071            __end_of___aldiv 00B3  
                    _ADDEN 00C3                      ?_main 0070                      _T1CON 0010  
                    i1l141 00E4                      i1l995 00C0                      i1l999 00C5  
                    _RCREG 001A                      _TMR1H 000F                      _TMR1L 000E  
                    _SPBRG 0099                      _PORTB 0006                      _PORTD 0008  
                    _PORTE 0009                      _TRISB 0086                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019                      _delay 0159  
                    _count 0076                      _timer 0044                      _rxmsg 0078  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
          __initialization 0015               __end_of_main 0127                     ??_main 0057  
                   ?_delay 0045                     _ADCON1 009F                     i1l1005 00CE  
                   _TMR1IE 0460                     _TMR1IF 0060                     _TRISC6 043E  
                   _TRISC7 043F           __end_of_lcd_cmnt 01BE           __end_of_lcd_init 01AC  
                ??___aldiv 004D                     delay@i 0048                     delay@j 004A  
                   delay@x 0045                     saved_w 007E    __end_of__initialization 0020  
           __pcstackCOMMON 0070              __end_of_delay 018B                    ??_delay 0047  
               __pbssBANK0 0020                 __pmaintext 00F0                 __pintentry 0004  
       __size_of_uart_init 0032         __size_of_uart_read 0007                  ?_lcd_cmnt 0070  
                ?_lcd_init 0070            _transmision_msg 0079                    ___aldiv 0024  
               _local_time 0040                    __ptext0 0000                    __ptext1 01CA  
                  __ptext2 0127                    __ptext3 0024                    __ptext4 01BE  
                  __ptext5 018B                    __ptext6 01AC                    __ptext7 0159  
                  __ptext8 00B3                    __ptext9 01DD                    _lcd_msg 0020  
             __size_of_isr 003D           ___aldiv@dividend 0049        uart_write@write_msg 0046  
               ??_lcd_cmnt 004C                    clrloop0 01D6                 ??_lcd_init 004D  
     end_of_initialization 0020          __end_of_uart_init 0159          __end_of_uart_read 01E4  
         ___aldiv@quotient 0050                 _uart_write 01CA                 _timer_init 01BE  
                _TXSTAbits 0098        start_initialization 0015                __end_of_isr 00F0  
              ?_uart_write 0070                ?_timer_init 0070                __pbssCOMMON 0076  
                ___latbits 0002              __pcstackBANK0 0045          __size_of_lcd_cmnt 0012  
        __size_of_lcd_init 0021                   ?___aldiv 0045             __size_of_delay 0032  
          ___aldiv@divisor 0045          interrupt_function 0004            ___aldiv@counter 004E  
      __size_of_uart_write 000B        __size_of_timer_init 000C                  clear_ram0 01D5  
                _time_flag 0043                  _uart_init 0127                  _uart_read 01DD  
               ?_uart_init 0054                 ?_uart_read 0070           __size_of___aldiv 008F  
       uart_init@baud_rate 0054                   _lcd_cmnt 01AC                   _lcd_msg1 0030  
                 _lcd_init 018B              __size_of_main 0037                   _recieved 0077  
             ??_uart_write 0045               ??_timer_init 0045  uart_init@high_baud_select 0056  
                 intlevel1 0000         __end_of_uart_write 01D5         __end_of_timer_init 01CA  
              ??_uart_init 0057                ??_uart_read 0070               ___aldiv@sign 004F  
