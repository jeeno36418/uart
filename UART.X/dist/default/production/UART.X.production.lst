

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Apr 21 02:05:08 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  0008                     	;# 
    32  0009                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000D                     	;# 
    37  000E                     	;# 
    38  000E                     	;# 
    39  000F                     	;# 
    40  0010                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0014                     	;# 
    45  0015                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001B                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  001D                     	;# 
    56  001E                     	;# 
    57  001F                     	;# 
    58  0081                     	;# 
    59  0085                     	;# 
    60  0086                     	;# 
    61  0087                     	;# 
    62  0088                     	;# 
    63  0089                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0094                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  009F                     	;# 
    77  010C                     	;# 
    78  010D                     	;# 
    79  010E                     	;# 
    80  010F                     	;# 
    81  018C                     	;# 
    82  018D                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0006                     _PORTB	set	6
   144  0008                     _PORTD	set	8
   145  0009                     _PORTE	set	9
   146  001A                     _RCREG	set	26
   147  0010                     _T1CON	set	16
   148  000F                     _TMR1H	set	15
   149  000E                     _TMR1L	set	14
   150  0019                     _TXREG	set	25
   151  00C3                     _ADDEN	set	195
   152  00C4                     _CREN	set	196
   153  005F                     _GIE	set	95
   154  005E                     _PEIE	set	94
   155  0065                     _RCIF	set	101
   156  0048                     _RE0	set	72
   157  0049                     _RE1	set	73
   158  00C6                     _RX9	set	198
   159  00C7                     _SPEN	set	199
   160  0060                     _TMR1IF	set	96
   161  0064                     _TXIF	set	100
   162  009F                     _ADCON1	set	159
   163  0099                     _SPBRG	set	153
   164  0086                     _TRISB	set	134
   165  0088                     _TRISD	set	136
   166  0089                     _TRISE	set	137
   167  0098                     _TXSTAbits	set	152
   168  0465                     _RCIE	set	1125
   169  04C4                     _SYNC	set	1220
   170  0460                     _TMR1IE	set	1120
   171  043E                     _TRISC6	set	1086
   172  043F                     _TRISC7	set	1087
   173  04C6                     _TX9	set	1222
   174  04C5                     _TXEN	set	1221
   175  0464                     _TXIE	set	1124
   176                           
   177                           	psect	text0
   178  0000                     __ptext0:	
   179                           ; #config settings
   180                           
   181                           
   182                           	psect	cinit
   183  0015                     start_initialization:	
   184                           ;psect for function _uart_read
   185                           
   186  0015                     __initialization:	
   187                           
   188                           ; Clear objects allocated to COMMON
   189  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   190  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   191  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   192  0018  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   193  0019  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   194                           
   195                           ; Clear objects allocated to BANK0
   196  001A  1383               	bcf	3,7	;select IRP bank0
   197  001B  3020               	movlw	low __pbssBANK0
   198  001C  0084               	movwf	4
   199  001D  3045               	movlw	low (__pbssBANK0+37)
   200  001E  120A  118A  21D6   	fcall	clear_ram0
   201  0021                     end_of_initialization:	
   202                           ;End of C runtime variable initialization code
   203                           
   204  0021                     __end_of__initialization:	
   205  0021  0183               	clrf	3
   206  0022  120A  118A  28F1   	ljmp	_main	;jump to C main() function
   207                           
   208                           	psect	bssCOMMON
   209  0076                     __pbssCOMMON:	
   210  0076                     _count:	
   211  0076                     	ds	1
   212  0077                     _flag:	
   213  0077                     	ds	1
   214  0078                     _recieved:	
   215  0078                     	ds	1
   216  0079                     _rxmsg:	
   217  0079                     	ds	1
   218  007A                     _transmision_msg:	
   219  007A                     	ds	1
   220                           
   221                           	psect	bssBANK0
   222  0020                     __pbssBANK0:	
   223  0020                     _lcd_msg:	
   224  0020                     	ds	16
   225  0030                     _lcd_msg1:	
   226  0030                     	ds	16
   227  0040                     _local_time:	
   228  0040                     	ds	3
   229  0043                     _time_flag:	
   230  0043                     	ds	1
   231  0044                     _timer:	
   232  0044                     	ds	1
   233                           
   234                           	psect	clrtext
   235  01D6                     clear_ram0:	
   236                           ;	Called with FSR containing the base address, and
   237                           ;	W with the last address+1
   238                           
   239  01D6  0064               	clrwdt	;clear the watchdog before getting into this loop
   240  01D7                     clrloop0:	
   241  01D7  0180               	clrf	0	;clear RAM location pointed to by FSR
   242  01D8  0A84               	incf	4,f	;increment pointer
   243  01D9  0604               	xorwf	4,w	;XOR with final address
   244  01DA  1903               	btfsc	3,2	;have we reached the end yet?
   245  01DB  3400               	retlw	0	;all done for this memory range, return
   246  01DC  0604               	xorwf	4,w	;XOR again to restore value
   247  01DD  29D7               	goto	clrloop0	;do the next byte
   248                           
   249                           	psect	cstackCOMMON
   250  0070                     __pcstackCOMMON:	
   251  0070                     ?_timer_init:	
   252  0070                     ?_lcd_init:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_uart_write:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_lcd_cmnt:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_main:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_uart_read:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ??_uart_read:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_isr:	
   271                           ; 0 bytes @ 0x0
   272                           
   273                           
   274                           ; 0 bytes @ 0x0
   275  0070                     	ds	1
   276  0071                     ??_isr:	
   277                           
   278                           ; 0 bytes @ 0x1
   279  0071                     	ds	5
   280                           
   281                           	psect	cstackBANK0
   282  0045                     __pcstackBANK0:	
   283  0045                     ??_timer_init:	
   284  0045                     ??_uart_write:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0045                     ?_delay:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0045                     ?___aldiv:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0045                     delay@x:	
   294                           ; 4 bytes @ 0x0
   295                           
   296  0045                     ___aldiv@divisor:	
   297                           ; 2 bytes @ 0x0
   298                           
   299                           
   300                           ; 4 bytes @ 0x0
   301  0045                     	ds	1
   302  0046                     uart_write@write_msg:	
   303                           
   304                           ; 1 bytes @ 0x1
   305  0046                     	ds	1
   306  0047                     ??_delay:	
   307                           
   308                           ; 0 bytes @ 0x2
   309  0047                     	ds	1
   310  0048                     delay@i:	
   311                           
   312                           ; 2 bytes @ 0x3
   313  0048                     	ds	1
   314  0049                     ___aldiv@dividend:	
   315                           
   316                           ; 4 bytes @ 0x4
   317  0049                     	ds	1
   318  004A                     delay@j:	
   319                           
   320                           ; 2 bytes @ 0x5
   321  004A                     	ds	2
   322  004C                     ??_lcd_cmnt:	
   323  004C                     lcd_cmnt@cmnt:	
   324                           ; 0 bytes @ 0x7
   325                           
   326                           
   327                           ; 1 bytes @ 0x7
   328  004C                     	ds	1
   329  004D                     ??_lcd_init:	
   330  004D                     ??___aldiv:	
   331                           ; 0 bytes @ 0x8
   332                           
   333                           
   334                           ; 0 bytes @ 0x8
   335  004D                     	ds	1
   336  004E                     ___aldiv@counter:	
   337                           
   338                           ; 1 bytes @ 0x9
   339  004E                     	ds	1
   340  004F                     ___aldiv@sign:	
   341                           
   342                           ; 1 bytes @ 0xA
   343  004F                     	ds	1
   344  0050                     ___aldiv@quotient:	
   345                           
   346                           ; 4 bytes @ 0xB
   347  0050                     	ds	4
   348  0054                     ?_uart_init:	
   349  0054                     uart_init@baud_rate:	
   350                           ; 0 bytes @ 0xF
   351                           
   352                           
   353                           ; 2 bytes @ 0xF
   354  0054                     	ds	2
   355  0056                     uart_init@high_baud_select:	
   356                           
   357                           ; 1 bytes @ 0x11
   358  0056                     	ds	1
   359  0057                     ??_uart_init:	
   360  0057                     ??_main:	
   361                           ; 0 bytes @ 0x12
   362                           
   363                           
   364                           ; 0 bytes @ 0x12
   365  0057                     	ds	1
   366                           
   367                           	psect	maintext
   368  00F1                     __pmaintext:	
   369 ;;
   370 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   371 ;;
   372 ;; *************** function _main *****************
   373 ;; Defined at:
   374 ;;		line 20 in file "uart.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;		None               void
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : 17F/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0
   390 ;;      Temps:          0       1       0       0       0
   391 ;;      Totals:         0       1       0       0       0
   392 ;;Total ram usage:        1 bytes
   393 ;; Hardware stack levels required when called:    5
   394 ;; This function calls:
   395 ;;		_lcd_init
   396 ;;		_timer_init
   397 ;;		_uart_init
   398 ;;		_uart_write
   399 ;; This function is called by:
   400 ;;		Startup code after reset
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _main
   406  00F1                     _main:	
   407                           
   408                           ;uart.c: 22: TRISB=0x00;
   409                           
   410                           ;incstack = 0
   411                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   412  00F1  1683               	bsf	3,5	;RP0=1, select bank1
   413  00F2  1303               	bcf	3,6	;RP1=0, select bank1
   414  00F3  0186               	clrf	6	;volatile
   415                           
   416                           ;uart.c: 23: TRISD=0X00;
   417  00F4  0188               	clrf	8	;volatile
   418                           
   419                           ;uart.c: 24: TRISE=0X00;
   420  00F5  0189               	clrf	9	;volatile
   421                           
   422                           ;uart.c: 25: PORTB=0X00;
   423  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   424  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   425  00F8  0186               	clrf	6	;volatile
   426                           
   427                           ;uart.c: 26: PORTE=0X00;
   428  00F9  0189               	clrf	9	;volatile
   429                           
   430                           ;uart.c: 29: timer_init();
   431  00FA  120A  118A  21BF  120A  118A  	fcall	_timer_init
   432                           
   433                           ;uart.c: 31: uart_init(9600,0);
   434  00FF  3080               	movlw	128
   435  0100  1283               	bcf	3,5	;RP0=0, select bank0
   436  0101  1303               	bcf	3,6	;RP1=0, select bank0
   437  0102  00D4               	movwf	uart_init@baud_rate
   438  0103  3025               	movlw	37
   439  0104  00D5               	movwf	uart_init@baud_rate+1
   440  0105  01D6               	clrf	uart_init@high_baud_select
   441  0106  120A  118A  2128  120A  118A  	fcall	_uart_init
   442                           
   443                           ;uart.c: 32: lcd_init();
   444  010B  120A  118A  218C  120A  118A  	fcall	_lcd_init
   445  0110                     l1134:	
   446                           ;uart.c: 33: while(1)
   447                           
   448                           
   449                           ;uart.c: 34: {
   450                           ;uart.c: 41: if(time_flag)
   451  0110  1283               	bcf	3,5	;RP0=0, select bank0
   452  0111  1303               	bcf	3,6	;RP1=0, select bank0
   453  0112  0843               	movf	_time_flag,w
   454  0113  1903               	btfsc	3,2
   455  0114  2910               	goto	l1134
   456                           
   457                           ;uart.c: 42: {
   458                           ;uart.c: 43: time_flag=0;
   459  0115  01C3               	clrf	_time_flag
   460                           
   461                           ;uart.c: 44: uart_write(timer++);
   462  0116  0844               	movf	_timer,w
   463  0117  120A  118A  21CB  120A  118A  	fcall	_uart_write
   464  011C  3001               	movlw	1
   465  011D  1283               	bcf	3,5	;RP0=0, select bank0
   466  011E  1303               	bcf	3,6	;RP1=0, select bank0
   467  011F  00D7               	movwf	??_main
   468  0120  0857               	movf	??_main,w
   469  0121  07C4               	addwf	_timer,f
   470                           
   471                           ;uart.c: 45: if(timer==60)
   472  0122  0844               	movf	_timer,w
   473  0123  3A3C               	xorlw	60
   474  0124  1D03               	skipz
   475  0125  2910               	goto	l1134
   476                           
   477                           ;uart.c: 46: {
   478                           ;uart.c: 47: timer=0;
   479  0126  01C4               	clrf	_timer
   480  0127  2910               	goto	l1134
   481  0128                     __end_of_main:	
   482                           
   483                           	psect	text1
   484  01CB                     __ptext1:	
   485 ;; *************** function _uart_write *****************
   486 ;; Defined at:
   487 ;;		line 127 in file "uart.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;  write_msg       1    wreg     unsigned char 
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  write_msg       1    1[BANK0 ] unsigned char 
   492 ;; Return value:  Size  Location     Type
   493 ;;		None               void
   494 ;; Registers used:
   495 ;;		wreg
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   501 ;;      Params:         0       0       0       0       0
   502 ;;      Locals:         0       1       0       0       0
   503 ;;      Temps:          0       1       0       0       0
   504 ;;      Totals:         0       2       0       0       0
   505 ;;Total ram usage:        2 bytes
   506 ;; Hardware stack levels used:    1
   507 ;; Hardware stack levels required when called:    2
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_main
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           
   516                           ;psect for function _uart_write
   517  01CB                     _uart_write:	
   518                           
   519                           ;incstack = 0
   520                           ; Regs used in _uart_write: [wreg]
   521                           ;uart_write@write_msg stored from wreg
   522  01CB  1283               	bcf	3,5	;RP0=0, select bank0
   523  01CC  1303               	bcf	3,6	;RP1=0, select bank0
   524  01CD  00C6               	movwf	uart_write@write_msg
   525                           
   526                           ;uart.c: 130: transmision_msg=write_msg;
   527  01CE  0846               	movf	uart_write@write_msg,w
   528  01CF  00C5               	movwf	??_uart_write
   529  01D0  0845               	movf	??_uart_write,w
   530  01D1  00FA               	movwf	_transmision_msg
   531                           
   532                           ;uart.c: 132: TXIE=1;
   533  01D2  1683               	bsf	3,5	;RP0=1, select bank1
   534  01D3  1303               	bcf	3,6	;RP1=0, select bank1
   535  01D4  160C               	bsf	12,4	;volatile
   536  01D5  0008               	return
   537  01D6                     __end_of_uart_write:	
   538                           
   539                           	psect	text2
   540  0128                     __ptext2:	
   541 ;; *************** function _uart_init *****************
   542 ;; Defined at:
   543 ;;		line 105 in file "uart.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;  baud_rate       2   15[BANK0 ] unsigned int 
   546 ;;  high_baud_se    1   17[BANK0 ] unsigned char 
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;		None               void
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0, pclath, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   558 ;;      Params:         0       3       0       0       0
   559 ;;      Locals:         0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0
   561 ;;      Totals:         0       3       0       0       0
   562 ;;Total ram usage:        3 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; Hardware stack levels required when called:    3
   565 ;; This function calls:
   566 ;;		___aldiv
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _uart_init
   574  0128                     _uart_init:	
   575                           
   576                           ;uart.c: 107: TRISC6=0;
   577                           
   578                           ;incstack = 0
   579                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
   580  0128  1683               	bsf	3,5	;RP0=1, select bank1
   581  0129  1303               	bcf	3,6	;RP1=0, select bank1
   582  012A  1307               	bcf	7,6	;volatile
   583                           
   584                           ;uart.c: 108: TRISC7=1;
   585  012B  1787               	bsf	7,7	;volatile
   586                           
   587                           ;uart.c: 109: TXSTAbits.BRGH=high_baud_select;
   588  012C  1283               	bcf	3,5	;RP0=0, select bank0
   589  012D  1303               	bcf	3,6	;RP1=0, select bank0
   590  012E  0856               	movf	uart_init@high_baud_select,w
   591  012F  1683               	bsf	3,5	;RP0=1, select bank1
   592  0130  1303               	bcf	3,6	;RP1=0, select bank1
   593  0131  1D03               	skipz
   594  0132  1518               	bsf	24,2	;volatile
   595  0133  1903               	skipnz
   596  0134  1118               	bcf	24,2	;volatile
   597                           
   598                           ;uart.c: 110: TXEN=1;
   599  0135  1698               	bsf	24,5	;volatile
   600                           
   601                           ;uart.c: 111: TX9=0;
   602  0136  1318               	bcf	24,6	;volatile
   603                           
   604                           ;uart.c: 112: SYNC=0;
   605  0137  1218               	bcf	24,4	;volatile
   606                           
   607                           ;uart.c: 113: SPEN=1;
   608  0138  1283               	bcf	3,5	;RP0=0, select bank0
   609  0139  1303               	bcf	3,6	;RP1=0, select bank0
   610  013A  1798               	bsf	24,7	;volatile
   611                           
   612                           ;uart.c: 114: RX9=0;
   613  013B  1318               	bcf	24,6	;volatile
   614                           
   615                           ;uart.c: 115: CREN=1;
   616  013C  1618               	bsf	24,4	;volatile
   617                           
   618                           ;uart.c: 116: ADDEN=0;
   619  013D  1198               	bcf	24,3	;volatile
   620                           
   621                           ;uart.c: 119: SPBRG=(((16000000/64)/baud_rate)-1);
   622  013E  0854               	movf	uart_init@baud_rate,w
   623  013F  00C5               	movwf	___aldiv@divisor
   624  0140  0855               	movf	uart_init@baud_rate+1,w
   625  0141  00C6               	movwf	___aldiv@divisor+1
   626  0142  01C7               	clrf	___aldiv@divisor+2
   627  0143  01C8               	clrf	___aldiv@divisor+3
   628  0144  3000               	movlw	0
   629  0145  00CC               	movwf	___aldiv@dividend+3
   630  0146  3003               	movlw	3
   631  0147  00CB               	movwf	___aldiv@dividend+2
   632  0148  30D0               	movlw	208
   633  0149  00CA               	movwf	___aldiv@dividend+1
   634  014A  3090               	movlw	144
   635  014B  00C9               	movwf	___aldiv@dividend
   636  014C  120A  118A  2025   	fcall	___aldiv
   637  014F  1283               	bcf	3,5	;RP0=0, select bank0
   638  0150  1303               	bcf	3,6	;RP1=0, select bank0
   639  0151  0845               	movf	?___aldiv,w
   640  0152  3EFF               	addlw	255
   641  0153  1683               	bsf	3,5	;RP0=1, select bank1
   642  0154  1303               	bcf	3,6	;RP1=0, select bank1
   643  0155  0099               	movwf	25	;volatile
   644                           
   645                           ;uart.c: 120: GIE=1;
   646  0156  178B               	bsf	11,7	;volatile
   647                           
   648                           ;uart.c: 121: PEIE=1;
   649  0157  170B               	bsf	11,6	;volatile
   650                           
   651                           ;uart.c: 123: RCIE=1;
   652  0158  168C               	bsf	12,5	;volatile
   653  0159  0008               	return
   654  015A                     __end_of_uart_init:	
   655                           
   656                           	psect	text3
   657  0025                     __ptext3:	
   658 ;; *************** function ___aldiv *****************
   659 ;; Defined at:
   660 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\aldiv.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  divisor         4    0[BANK0 ] long 
   663 ;;  dividend        4    4[BANK0 ] long 
   664 ;; Auto vars:     Size  Location     Type
   665 ;;  quotient        4   11[BANK0 ] long 
   666 ;;  sign            1   10[BANK0 ] unsigned char 
   667 ;;  counter         1    9[BANK0 ] unsigned char 
   668 ;; Return value:  Size  Location     Type
   669 ;;                  4    0[BANK0 ] long 
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   677 ;;      Params:         0       8       0       0       0
   678 ;;      Locals:         0       6       0       0       0
   679 ;;      Temps:          0       1       0       0       0
   680 ;;      Totals:         0      15       0       0       0
   681 ;;Total ram usage:       15 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; Hardware stack levels required when called:    2
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_uart_init
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           
   692                           ;psect for function ___aldiv
   693  0025                     ___aldiv:	
   694                           
   695                           ;incstack = 0
   696                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   697  0025  1283               	bcf	3,5	;RP0=0, select bank0
   698  0026  1303               	bcf	3,6	;RP1=0, select bank0
   699  0027  01CF               	clrf	___aldiv@sign
   700  0028  1FC8               	btfss	___aldiv@divisor+3,7
   701  0029  2837               	goto	l310
   702  002A  09C5               	comf	___aldiv@divisor,f
   703  002B  09C6               	comf	___aldiv@divisor+1,f
   704  002C  09C7               	comf	___aldiv@divisor+2,f
   705  002D  09C8               	comf	___aldiv@divisor+3,f
   706  002E  0AC5               	incf	___aldiv@divisor,f
   707  002F  1903               	skipnz
   708  0030  0AC6               	incf	___aldiv@divisor+1,f
   709  0031  1903               	skipnz
   710  0032  0AC7               	incf	___aldiv@divisor+2,f
   711  0033  1903               	skipnz
   712  0034  0AC8               	incf	___aldiv@divisor+3,f
   713  0035  01CF               	clrf	___aldiv@sign
   714  0036  0ACF               	incf	___aldiv@sign,f
   715  0037                     l310:	
   716  0037  1FCC               	btfss	___aldiv@dividend+3,7
   717  0038  2848               	goto	l1050
   718  0039  09C9               	comf	___aldiv@dividend,f
   719  003A  09CA               	comf	___aldiv@dividend+1,f
   720  003B  09CB               	comf	___aldiv@dividend+2,f
   721  003C  09CC               	comf	___aldiv@dividend+3,f
   722  003D  0AC9               	incf	___aldiv@dividend,f
   723  003E  1903               	skipnz
   724  003F  0ACA               	incf	___aldiv@dividend+1,f
   725  0040  1903               	skipnz
   726  0041  0ACB               	incf	___aldiv@dividend+2,f
   727  0042  1903               	skipnz
   728  0043  0ACC               	incf	___aldiv@dividend+3,f
   729  0044  3001               	movlw	1
   730  0045  00CD               	movwf	??___aldiv
   731  0046  084D               	movf	??___aldiv,w
   732  0047  06CF               	xorwf	___aldiv@sign,f
   733  0048                     l1050:	
   734  0048  3000               	movlw	0
   735  0049  00D3               	movwf	___aldiv@quotient+3
   736  004A  3000               	movlw	0
   737  004B  00D2               	movwf	___aldiv@quotient+2
   738  004C  3000               	movlw	0
   739  004D  00D1               	movwf	___aldiv@quotient+1
   740  004E  3000               	movlw	0
   741  004F  00D0               	movwf	___aldiv@quotient
   742  0050  0848               	movf	___aldiv@divisor+3,w
   743  0051  0447               	iorwf	___aldiv@divisor+2,w
   744  0052  0446               	iorwf	___aldiv@divisor+1,w
   745  0053  0445               	iorwf	___aldiv@divisor,w
   746  0054  1903               	skipnz
   747  0055  289D               	goto	l1072
   748  0056  01CE               	clrf	___aldiv@counter
   749  0057  0ACE               	incf	___aldiv@counter,f
   750  0058                     l1058:	
   751  0058  1BC8               	btfsc	___aldiv@divisor+3,7
   752  0059  2868               	goto	l1060
   753  005A  3001               	movlw	1
   754  005B  00CD               	movwf	??___aldiv
   755  005C                     u555:	
   756  005C  1003               	clrc
   757  005D  0DC5               	rlf	___aldiv@divisor,f
   758  005E  0DC6               	rlf	___aldiv@divisor+1,f
   759  005F  0DC7               	rlf	___aldiv@divisor+2,f
   760  0060  0DC8               	rlf	___aldiv@divisor+3,f
   761  0061  0BCD               	decfsz	??___aldiv,f
   762  0062  285C               	goto	u555
   763  0063  3001               	movlw	1
   764  0064  00CD               	movwf	??___aldiv
   765  0065  084D               	movf	??___aldiv,w
   766  0066  07CE               	addwf	___aldiv@counter,f
   767  0067  2858               	goto	l1058
   768  0068                     l1060:	
   769  0068  3001               	movlw	1
   770  0069  00CD               	movwf	??___aldiv
   771  006A                     u575:	
   772  006A  1003               	clrc
   773  006B  0DD0               	rlf	___aldiv@quotient,f
   774  006C  0DD1               	rlf	___aldiv@quotient+1,f
   775  006D  0DD2               	rlf	___aldiv@quotient+2,f
   776  006E  0DD3               	rlf	___aldiv@quotient+3,f
   777  006F  0BCD               	decfsz	??___aldiv,f
   778  0070  286A               	goto	u575
   779  0071  0848               	movf	___aldiv@divisor+3,w
   780  0072  024C               	subwf	___aldiv@dividend+3,w
   781  0073  1D03               	skipz
   782  0074  287F               	goto	u585
   783  0075  0847               	movf	___aldiv@divisor+2,w
   784  0076  024B               	subwf	___aldiv@dividend+2,w
   785  0077  1D03               	skipz
   786  0078  287F               	goto	u585
   787  0079  0846               	movf	___aldiv@divisor+1,w
   788  007A  024A               	subwf	___aldiv@dividend+1,w
   789  007B  1D03               	skipz
   790  007C  287F               	goto	u585
   791  007D  0845               	movf	___aldiv@divisor,w
   792  007E  0249               	subwf	___aldiv@dividend,w
   793  007F                     u585:	
   794  007F  1C03               	skipc
   795  0080  2890               	goto	l1068
   796  0081  0845               	movf	___aldiv@divisor,w
   797  0082  02C9               	subwf	___aldiv@dividend,f
   798  0083  0846               	movf	___aldiv@divisor+1,w
   799  0084  1C03               	skipc
   800  0085  0F46               	incfsz	___aldiv@divisor+1,w
   801  0086  02CA               	subwf	___aldiv@dividend+1,f
   802  0087  0847               	movf	___aldiv@divisor+2,w
   803  0088  1C03               	skipc
   804  0089  0F47               	incfsz	___aldiv@divisor+2,w
   805  008A  02CB               	subwf	___aldiv@dividend+2,f
   806  008B  0848               	movf	___aldiv@divisor+3,w
   807  008C  1C03               	skipc
   808  008D  0F48               	incfsz	___aldiv@divisor+3,w
   809  008E  02CC               	subwf	___aldiv@dividend+3,f
   810  008F  1450               	bsf	___aldiv@quotient,0
   811  0090                     l1068:	
   812  0090  3001               	movlw	1
   813  0091                     u595:	
   814  0091  1003               	clrc
   815  0092  0CC8               	rrf	___aldiv@divisor+3,f
   816  0093  0CC7               	rrf	___aldiv@divisor+2,f
   817  0094  0CC6               	rrf	___aldiv@divisor+1,f
   818  0095  0CC5               	rrf	___aldiv@divisor,f
   819  0096  3EFF               	addlw	-1
   820  0097  1D03               	skipz
   821  0098  2891               	goto	u595
   822  0099  3001               	movlw	1
   823  009A  02CE               	subwf	___aldiv@counter,f
   824  009B  1D03               	btfss	3,2
   825  009C  2868               	goto	l1060
   826  009D                     l1072:	
   827  009D  084F               	movf	___aldiv@sign,w
   828  009E  1903               	btfsc	3,2
   829  009F  28AB               	goto	l1076
   830  00A0  09D0               	comf	___aldiv@quotient,f
   831  00A1  09D1               	comf	___aldiv@quotient+1,f
   832  00A2  09D2               	comf	___aldiv@quotient+2,f
   833  00A3  09D3               	comf	___aldiv@quotient+3,f
   834  00A4  0AD0               	incf	___aldiv@quotient,f
   835  00A5  1903               	skipnz
   836  00A6  0AD1               	incf	___aldiv@quotient+1,f
   837  00A7  1903               	skipnz
   838  00A8  0AD2               	incf	___aldiv@quotient+2,f
   839  00A9  1903               	skipnz
   840  00AA  0AD3               	incf	___aldiv@quotient+3,f
   841  00AB                     l1076:	
   842  00AB  0853               	movf	___aldiv@quotient+3,w
   843  00AC  00C8               	movwf	?___aldiv+3
   844  00AD  0852               	movf	___aldiv@quotient+2,w
   845  00AE  00C7               	movwf	?___aldiv+2
   846  00AF  0851               	movf	___aldiv@quotient+1,w
   847  00B0  00C6               	movwf	?___aldiv+1
   848  00B1  0850               	movf	___aldiv@quotient,w
   849  00B2  00C5               	movwf	?___aldiv
   850  00B3  0008               	return
   851  00B4                     __end_of___aldiv:	
   852                           
   853                           	psect	text4
   854  01BF                     __ptext4:	
   855 ;; *************** function _timer_init *****************
   856 ;; Defined at:
   857 ;;		line 70 in file "uart.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;		None               void
   864 ;; Registers used:
   865 ;;		wreg
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    2
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           
   886                           ;psect for function _timer_init
   887  01BF                     _timer_init:	
   888                           
   889                           ;uart.c: 72: T1CON=0x31;
   890                           
   891                           ;incstack = 0
   892                           ; Regs used in _timer_init: [wreg]
   893  01BF  3031               	movlw	49
   894  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   895  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   896  01C2  0090               	movwf	16	;volatile
   897                           
   898                           ;uart.c: 73: TMR1H=0xC9;
   899  01C3  30C9               	movlw	201
   900  01C4  008F               	movwf	15	;volatile
   901                           
   902                           ;uart.c: 74: TMR1L=0xDD;
   903  01C5  30DD               	movlw	221
   904  01C6  008E               	movwf	14	;volatile
   905                           
   906                           ;uart.c: 75: TMR1IE=1;
   907  01C7  1683               	bsf	3,5	;RP0=1, select bank1
   908  01C8  1303               	bcf	3,6	;RP1=0, select bank1
   909  01C9  140C               	bsf	12,0	;volatile
   910  01CA  0008               	return
   911  01CB                     __end_of_timer_init:	
   912                           
   913                           	psect	text5
   914  018C                     __ptext5:	
   915 ;; *************** function _lcd_init *****************
   916 ;; Defined at:
   917 ;;		line 201 in file "uart.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;		None               void
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0, pclath, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   931 ;;      Params:         0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0
   934 ;;      Totals:         0       0       0       0       0
   935 ;;Total ram usage:        0 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    4
   938 ;; This function calls:
   939 ;;		_lcd_cmnt
   940 ;; This function is called by:
   941 ;;		_main
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           
   946                           ;psect for function _lcd_init
   947  018C                     _lcd_init:	
   948                           
   949                           ;uart.c: 203: TRISD=0X00;
   950                           
   951                           ;incstack = 0
   952                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   953  018C  1683               	bsf	3,5	;RP0=1, select bank1
   954  018D  1303               	bcf	3,6	;RP1=0, select bank1
   955  018E  0188               	clrf	8	;volatile
   956                           
   957                           ;uart.c: 204: PORTD=0X00;
   958  018F  1283               	bcf	3,5	;RP0=0, select bank0
   959  0190  1303               	bcf	3,6	;RP1=0, select bank0
   960  0191  0188               	clrf	8	;volatile
   961                           
   962                           ;uart.c: 205: ADCON1=0X06;
   963  0192  3006               	movlw	6
   964  0193  1683               	bsf	3,5	;RP0=1, select bank1
   965  0194  1303               	bcf	3,6	;RP1=0, select bank1
   966  0195  009F               	movwf	31	;volatile
   967                           
   968                           ;uart.c: 207: lcd_cmnt(0x38);
   969  0196  3038               	movlw	56
   970  0197  120A  118A  21AD  120A  118A  	fcall	_lcd_cmnt
   971                           
   972                           ;uart.c: 208: lcd_cmnt(0x0c);
   973  019C  300C               	movlw	12
   974  019D  120A  118A  21AD  120A  118A  	fcall	_lcd_cmnt
   975                           
   976                           ;uart.c: 209: lcd_cmnt(0x01);
   977  01A2  3001               	movlw	1
   978  01A3  120A  118A  21AD  120A  118A  	fcall	_lcd_cmnt
   979                           
   980                           ;uart.c: 210: lcd_cmnt(0x80);
   981  01A8  3080               	movlw	128
   982  01A9  120A  118A  21AD   	fcall	_lcd_cmnt
   983  01AC  0008               	return
   984  01AD                     __end_of_lcd_init:	
   985                           
   986                           	psect	text6
   987  01AD                     __ptext6:	
   988 ;; *************** function _lcd_cmnt *****************
   989 ;; Defined at:
   990 ;;		line 212 in file "uart.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  cmnt            1    wreg     unsigned char 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  cmnt            1    7[BANK0 ] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;		None               void
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         0       1       0       0       0
  1006 ;;      Temps:          0       0       0       0       0
  1007 ;;      Totals:         0       1       0       0       0
  1008 ;;Total ram usage:        1 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    3
  1011 ;; This function calls:
  1012 ;;		_delay
  1013 ;; This function is called by:
  1014 ;;		_lcd_init
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _lcd_cmnt
  1020  01AD                     _lcd_cmnt:	
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _lcd_cmnt: [wreg+status,2+status,0+pclath+cstack]
  1024                           ;lcd_cmnt@cmnt stored from wreg
  1025  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1026  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1027  01AF  00CC               	movwf	lcd_cmnt@cmnt
  1028                           
  1029                           ;uart.c: 214: PORTD=cmnt;
  1030  01B0  084C               	movf	lcd_cmnt@cmnt,w
  1031  01B1  0088               	movwf	8	;volatile
  1032                           
  1033                           ;uart.c: 215: RE0=0;
  1034  01B2  1009               	bcf	9,0	;volatile
  1035                           
  1036                           ;uart.c: 216: RE1=1;delay(10);RE1=0; ;
  1037  01B3  1489               	bsf	9,1	;volatile
  1038  01B4  300A               	movlw	10
  1039  01B5  00C5               	movwf	delay@x
  1040  01B6  3000               	movlw	0
  1041  01B7  00C6               	movwf	delay@x+1
  1042  01B8  120A  118A  215A   	fcall	_delay
  1043  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1044  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1045  01BD  1089               	bcf	9,1	;volatile
  1046  01BE  0008               	return
  1047  01BF                     __end_of_lcd_cmnt:	
  1048                           
  1049                           	psect	text7
  1050  015A                     __ptext7:	
  1051 ;; *************** function _delay *****************
  1052 ;; Defined at:
  1053 ;;		line 228 in file "uart.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  x               2    0[BANK0 ] int 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  j               2    5[BANK0 ] int 
  1058 ;;  i               2    3[BANK0 ] int 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;		None               void
  1061 ;; Registers used:
  1062 ;;		wreg, status,2
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       2       0       0       0
  1069 ;;      Locals:         0       4       0       0       0
  1070 ;;      Temps:          0       1       0       0       0
  1071 ;;      Totals:         0       7       0       0       0
  1072 ;;Total ram usage:        7 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    2
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_lcd_cmnt
  1079 ;;		_lcd_data
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           
  1084                           ;psect for function _delay
  1085  015A                     _delay:	
  1086                           
  1087                           ;uart.c: 230: int i,j;
  1088                           ;uart.c: 231: for(i=0;i<=x;i++)
  1089                           
  1090                           ;incstack = 0
  1091                           ; Regs used in _delay: [wreg+status,2]
  1092  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1093  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1094  015C  01C8               	clrf	delay@i
  1095  015D  01C9               	clrf	delay@i+1
  1096  015E                     l165:	
  1097  015E  0846               	movf	delay@x+1,w
  1098  015F  3A80               	xorlw	128
  1099  0160  00C7               	movwf	??_delay
  1100  0161  0849               	movf	delay@i+1,w
  1101  0162  3A80               	xorlw	128
  1102  0163  0247               	subwf	??_delay,w
  1103  0164  1D03               	skipz
  1104  0165  2968               	goto	u515
  1105  0166  0848               	movf	delay@i,w
  1106  0167  0245               	subwf	delay@x,w
  1107  0168                     u515:	
  1108  0168  1C03               	btfss	3,0
  1109  0169  0008               	return
  1110                           
  1111                           ;uart.c: 232: {
  1112                           ;uart.c: 233: for(j=0;j<=x;j++)
  1113  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1114  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1115  016C  01CA               	clrf	delay@j
  1116  016D  01CB               	clrf	delay@j+1
  1117  016E                     l167:	
  1118  016E  0846               	movf	delay@x+1,w
  1119  016F  3A80               	xorlw	128
  1120  0170  00C7               	movwf	??_delay
  1121  0171  084B               	movf	delay@j+1,w
  1122  0172  3A80               	xorlw	128
  1123  0173  0247               	subwf	??_delay,w
  1124  0174  1D03               	skipz
  1125  0175  2978               	goto	u505
  1126  0176  084A               	movf	delay@j,w
  1127  0177  0245               	subwf	delay@x,w
  1128  0178                     u505:	
  1129  0178  1C03               	btfss	3,0
  1130  0179  2983               	goto	l1028
  1131                           
  1132                           ;uart.c: 234: {}
  1133  017A  3001               	movlw	1
  1134  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1135  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1136  017D  07CA               	addwf	delay@j,f
  1137  017E  1803               	skipnc
  1138  017F  0ACB               	incf	delay@j+1,f
  1139  0180  3000               	movlw	0
  1140  0181  07CB               	addwf	delay@j+1,f
  1141  0182  296E               	goto	l167
  1142  0183                     l1028:	
  1143  0183  3001               	movlw	1
  1144  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0185  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0186  07C8               	addwf	delay@i,f
  1147  0187  1803               	skipnc
  1148  0188  0AC9               	incf	delay@i+1,f
  1149  0189  3000               	movlw	0
  1150  018A  07C9               	addwf	delay@i+1,f
  1151  018B  295E               	goto	l165
  1152  018C                     __end_of_delay:	
  1153                           
  1154                           	psect	text8
  1155  00B4                     __ptext8:	
  1156 ;; *************** function _isr *****************
  1157 ;; Defined at:
  1158 ;;		line 162 in file "uart.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;		None               void
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0
  1174 ;;      Temps:          5       0       0       0       0
  1175 ;;      Totals:         5       0       0       0       0
  1176 ;;Total ram usage:        5 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    1
  1179 ;; This function calls:
  1180 ;;		_uart_read
  1181 ;; This function is called by:
  1182 ;;		Interrupt level 1
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _isr
  1188  00B4                     _isr:	
  1189                           
  1190                           ;uart.c: 164: if(TMR1IF)
  1191  00B4  1C0C               	btfss	12,0	;volatile
  1192  00B5  28C6               	goto	i1l1010
  1193                           
  1194                           ;uart.c: 165: {
  1195                           ;uart.c: 166: TMR1H=0xCF;
  1196  00B6  30CF               	movlw	207
  1197  00B7  008F               	movwf	15	;volatile
  1198                           
  1199                           ;uart.c: 167: TMR1L=0x2C;
  1200  00B8  302C               	movlw	44
  1201  00B9  008E               	movwf	14	;volatile
  1202                           
  1203                           ;uart.c: 169: if(count==8)
  1204  00BA  0876               	movf	_count,w
  1205  00BB  3A08               	xorlw	8
  1206  00BC  1D03               	skipz
  1207  00BD  28C1               	goto	i1l1006
  1208                           
  1209                           ;uart.c: 170: {
  1210                           ;uart.c: 171: count=0;
  1211  00BE  01F6               	clrf	_count
  1212                           
  1213                           ;uart.c: 172: time_flag=1;
  1214  00BF  01C3               	clrf	_time_flag
  1215  00C0  0AC3               	incf	_time_flag,f
  1216  00C1                     i1l1006:	
  1217                           
  1218                           ;uart.c: 174: }
  1219                           ;uart.c: 175: count++;
  1220  00C1  3001               	movlw	1
  1221  00C2  00F1               	movwf	??_isr
  1222  00C3  0871               	movf	??_isr,w
  1223  00C4  07F6               	addwf	_count,f
  1224                           
  1225                           ;uart.c: 176: TMR1IF=0;
  1226  00C5  100C               	bcf	12,0	;volatile
  1227  00C6                     i1l1010:	
  1228                           
  1229                           ;uart.c: 178: }
  1230                           ;uart.c: 179: if(RCIF)
  1231  00C6  1E8C               	btfss	12,5	;volatile
  1232  00C7  28CF               	goto	i1l1016
  1233                           
  1234                           ;uart.c: 180: {
  1235                           ;uart.c: 181: uart_read();
  1236  00C8  120A  118A  21DE  120A  118A  	fcall	_uart_read
  1237                           
  1238                           ;uart.c: 182: recieved=1;
  1239  00CD  01F8               	clrf	_recieved
  1240  00CE  0AF8               	incf	_recieved,f
  1241  00CF                     i1l1016:	
  1242                           
  1243                           ;uart.c: 185: }
  1244                           ;uart.c: 186: if(TXIF&TXIE)
  1245  00CF  3001               	movlw	1
  1246  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1247  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1248  00D2  1E0C               	btfss	12,4	;volatile
  1249  00D3  3900               	andlw	0
  1250  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1251  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1252  00D6  1E0C               	btfss	12,4	;volatile
  1253  00D7  3900               	andlw	0
  1254  00D8  3800               	iorlw	0
  1255  00D9  1903               	skipnz
  1256  00DA  28E5               	goto	i1l144
  1257                           
  1258                           ;uart.c: 187: {
  1259                           ;uart.c: 188: TXIF=0;
  1260  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1261  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1262  00DD  120C               	bcf	12,4	;volatile
  1263                           
  1264                           ;uart.c: 189: TXIE=0;
  1265  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  1266  00DF  1303               	bcf	3,6	;RP1=0, select bank1
  1267  00E0  120C               	bcf	12,4	;volatile
  1268                           
  1269                           ;uart.c: 190: TXREG=transmision_msg;
  1270  00E1  087A               	movf	_transmision_msg,w
  1271  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1272  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1273  00E4  0099               	movwf	25	;volatile
  1274  00E5                     i1l144:	
  1275  00E5  0875               	movf	??_isr+4,w
  1276  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1277  00E7  00FF               	movwf	127
  1278  00E8  0874               	movf	??_isr+3,w
  1279  00E9  008A               	movwf	10
  1280  00EA  0873               	movf	??_isr+2,w
  1281  00EB  0084               	movwf	4
  1282  00EC  0E72               	swapf	(??_isr+1)^(0+-128),w
  1283  00ED  0083               	movwf	3
  1284  00EE  0EFE               	swapf	126,f
  1285  00EF  0E7E               	swapf	126,w
  1286  00F0  0009               	retfie
  1287  00F1                     __end_of_isr:	
  1288                           
  1289                           	psect	intentry
  1290  0004                     __pintentry:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1293                           
  1294  0004                     interrupt_function:	
  1295  007E                     saved_w	set	btemp
  1296  0004  00FE               	movwf	btemp
  1297  0005  0E03               	swapf	3,w
  1298  0006  00F2               	movwf	??_isr+1
  1299  0007  0804               	movf	4,w
  1300  0008  00F3               	movwf	??_isr+2
  1301  0009  080A               	movf	10,w
  1302  000A  00F4               	movwf	??_isr+3
  1303  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1304  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1305  000D  087F               	movf	btemp+1,w
  1306  000E  00F5               	movwf	??_isr+4
  1307  000F  120A  118A  28B4   	ljmp	_isr
  1308                           
  1309                           	psect	text9
  1310  01DE                     __ptext9:	
  1311 ;; *************** function _uart_read *****************
  1312 ;; Defined at:
  1313 ;;		line 136 in file "uart.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;		None               void
  1320 ;; Registers used:
  1321 ;;		wreg
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          1       0       0       0       0
  1330 ;;      Totals:         1       0       0       0       0
  1331 ;;Total ram usage:        1 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_isr
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _uart_read
  1342  01DE                     _uart_read:	
  1343                           
  1344                           ;uart.c: 139: rxmsg=RCREG;
  1345                           
  1346                           ;incstack = 0
  1347                           ; Regs used in _uart_read: [wreg]
  1348  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1349  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1350  01E0  081A               	movf	26,w	;volatile
  1351  01E1  00F0               	movwf	??_uart_read
  1352  01E2  0870               	movf	??_uart_read,w
  1353  01E3  00F9               	movwf	_rxmsg
  1354  01E4  0008               	return
  1355  01E5                     __end_of_uart_read:	
  1356  007E                     btemp	set	126	;btemp
  1357  007E                     wtemp	set	126
  1358  007E                     wtemp0	set	126
  1359  0080                     wtemp1	set	128
  1360  0082                     wtemp2	set	130
  1361  0084                     wtemp3	set	132
  1362  0086                     wtemp4	set	134
  1363  0088                     wtemp5	set	136
  1364  007F                     wtemp6	set	127
  1365  007E                     ttemp	set	126
  1366  007E                     ttemp0	set	126
  1367  0081                     ttemp1	set	129
  1368  0084                     ttemp2	set	132
  1369  0087                     ttemp3	set	135
  1370  007F                     ttemp4	set	127
  1371  007E                     ltemp	set	126
  1372  007E                     ltemp0	set	126
  1373  0082                     ltemp1	set	130
  1374  0086                     ltemp2	set	134
  1375  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     19      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_uart_read

Critical Paths under _main in BANK0

    _main->_uart_init
    _uart_init->___aldiv
    _lcd_init->_lcd_cmnt
    _lcd_cmnt->_delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1167
                                             18 BANK0      1     1      0
                           _lcd_init
                         _timer_init
                          _uart_init
                         _uart_write
 ---------------------------------------------------------------------------------
 (1) _uart_write                                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            3     0      3     815
                                             15 BANK0      3     0      3
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     321
                           _lcd_cmnt
 ---------------------------------------------------------------------------------
 (2) _lcd_cmnt                                             1     1      0     321
                                              7 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                7     5      2     290
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0       0
                                              1 COMMON     5     5      0
                          _uart_read
 ---------------------------------------------------------------------------------
 (5) _uart_read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_cmnt
       _delay
   _timer_init
   _uart_init
     ___aldiv
   _uart_write

 _isr (ROOT)
   _uart_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      43       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      43      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Apr 21 02:05:08 2017

                       fsr 0004                        l310 0037                        l165 015E  
                      l167 016E                        _GIE 005F                        _RE0 0048  
                      _RE1 0049                        u505 0178                        u515 0168  
                      u555 005C                        u575 006A                        u585 007F  
                      u595 0091                        _RX9 00C6                        _TX9 04C6  
                      _isr 00B4                        fsr0 0004                        indf 0000  
             lcd_cmnt@cmnt 004C                       l1050 0048                       l1028 0183  
                     l1060 0068                       l1134 0110                       l1072 009D  
                     l1058 0058                       l1076 00AB                       l1068 0090  
                     ?_isr 0070                       _CREN 00C4                       _PEIE 005E  
                     _RCIE 0465                       _RCIF 0065                       _SPEN 00C7  
                     _TXIE 0464                       _TXEN 04C5                       _TXIF 0064  
                     _SYNC 04C4                       _flag 0077                       _main 00F1  
                     btemp 007E                       ltemp 007E                       start 0012  
                     ttemp 007E                       wtemp 007E                      ??_isr 0071  
          __end_of___aldiv 00B4                      _ADDEN 00C3                      ?_main 0070  
                    _T1CON 0010                      i1l144 00E5                      _RCREG 001A  
                    _TMR1H 000F                      _TMR1L 000E                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008                      _PORTE 0009  
                    _TRISB 0086                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      _delay 015A                      _count 0076  
                    _timer 0044                      _rxmsg 0079                      pclath 000A  
                    ltemp0 007E                      ltemp1 0082                      ltemp2 0086  
                    ltemp3 0080                      ttemp0 007E                      ttemp1 0081  
                    ttemp2 0084                      ttemp3 0087                      ttemp4 007F  
                    status 0003                      wtemp0 007E                      wtemp1 0080  
                    wtemp2 0082                      wtemp3 0084                      wtemp4 0086  
                    wtemp5 0088                      wtemp6 007F            __initialization 0015  
             __end_of_main 0128                     ??_main 0057                     ?_delay 0045  
                   _ADCON1 009F                     i1l1010 00C6                     i1l1006 00C1  
                   i1l1016 00CF                     _TMR1IE 0460                     _TMR1IF 0060  
                   _TRISC6 043E                     _TRISC7 043F           __end_of_lcd_cmnt 01BF  
         __end_of_lcd_init 01AD                  ??___aldiv 004D                     delay@i 0048  
                   delay@j 004A                     delay@x 0045                     saved_w 007E  
  __end_of__initialization 0021             __pcstackCOMMON 0070              __end_of_delay 018C  
                  ??_delay 0047                 __pbssBANK0 0020                 __pmaintext 00F1  
               __pintentry 0004         __size_of_uart_init 0032         __size_of_uart_read 0007  
                ?_lcd_cmnt 0070                  ?_lcd_init 0070            _transmision_msg 007A  
                  ___aldiv 0025                 _local_time 0040                    __ptext0 0000  
                  __ptext1 01CB                    __ptext2 0128                    __ptext3 0025  
                  __ptext4 01BF                    __ptext5 018C                    __ptext6 01AD  
                  __ptext7 015A                    __ptext8 00B4                    __ptext9 01DE  
                  _lcd_msg 0020               __size_of_isr 003D           ___aldiv@dividend 0049  
      uart_write@write_msg 0046                 ??_lcd_cmnt 004C                    clrloop0 01D7  
               ??_lcd_init 004D       end_of_initialization 0021          __end_of_uart_init 015A  
        __end_of_uart_read 01E5           ___aldiv@quotient 0050                 _uart_write 01CB  
               _timer_init 01BF                  _TXSTAbits 0098        start_initialization 0015  
              __end_of_isr 00F1                ?_uart_write 0070                ?_timer_init 0070  
              __pbssCOMMON 0076                  ___latbits 0002              __pcstackBANK0 0045  
        __size_of_lcd_cmnt 0012          __size_of_lcd_init 0021                   ?___aldiv 0045  
           __size_of_delay 0032            ___aldiv@divisor 0045          interrupt_function 0004  
          ___aldiv@counter 004E        __size_of_uart_write 000B        __size_of_timer_init 000C  
                clear_ram0 01D6                  _time_flag 0043                  _uart_init 0128  
                _uart_read 01DE                 ?_uart_init 0054                 ?_uart_read 0070  
         __size_of___aldiv 008F         uart_init@baud_rate 0054                   _lcd_cmnt 01AD  
                 _lcd_msg1 0030                   _lcd_init 018C              __size_of_main 0037  
                 _recieved 0078               ??_uart_write 0045               ??_timer_init 0045  
uart_init@high_baud_select 0056                   intlevel1 0000         __end_of_uart_write 01D6  
       __end_of_timer_init 01CB                ??_uart_init 0057                ??_uart_read 0070  
             ___aldiv@sign 004F  
