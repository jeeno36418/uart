

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Apr 12 01:04:49 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001D                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  0081                     	;# 
    53  0085                     	;# 
    54  0086                     	;# 
    55  0087                     	;# 
    56  0088                     	;# 
    57  0089                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0094                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  009F                     	;# 
    71  010C                     	;# 
    72  010D                     	;# 
    73  010E                     	;# 
    74  010F                     	;# 
    75  018C                     	;# 
    76  018D                     	;# 
    77  0006                     _PORTB	set	6
    78  001A                     _RCREG	set	26
    79  0019                     _TXREG	set	25
    80  00C3                     _ADDEN	set	195
    81  00C4                     _CREN	set	196
    82  005F                     _GIE	set	95
    83  005E                     _PEIE	set	94
    84  0065                     _RCIF	set	101
    85  00C6                     _RX9	set	198
    86  00C7                     _SPEN	set	199
    87  0064                     _TXIF	set	100
    88  0099                     _SPBRG	set	153
    89  0086                     _TRISB	set	134
    90  0098                     _TXSTAbits	set	152
    91  0465                     _RCIE	set	1125
    92  04C4                     _SYNC	set	1220
    93  043E                     _TRISC6	set	1086
    94  043F                     _TRISC7	set	1087
    95  04C1                     _TRMT	set	1217
    96  04C6                     _TX9	set	1222
    97  04C5                     _TXEN	set	1221
    98  0464                     _TXIE	set	1124
    99                           
   100                           	psect	text0
   101  0000                     __ptext0:	
   102                           ; #config settings
   103                           
   104                           
   105                           	psect	cinit
   106  0015                     start_initialization:	
   107                           ;psect for function _uart_read
   108                           
   109  0015                     __initialization:	
   110                           
   111                           ; Clear objects allocated to COMMON
   112  0015  01F8               	clrf	__pbssCOMMON& (0+127)
   113                           
   114                           ; Clear objects allocated to BANK0
   115  0016  01B1               	clrf	__pbssBANK0& (0+127)
   116  0017  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   117  0018  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   118  0019  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   119  001A  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   120  001B  01B6               	clrf	(__pbssBANK0+5)& (0+127)
   121  001C                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124  001C                     __end_of__initialization:	
   125  001C  0183               	clrf	3
   126  001D  120A  118A  28EE   	ljmp	_main	;jump to C main() function
   127                           
   128                           	psect	bssCOMMON
   129  0078                     __pbssCOMMON:	
   130  0078                     _transmision_msg:	
   131  0078                     	ds	1
   132                           
   133                           	psect	bssBANK0
   134  0031                     __pbssBANK0:	
   135  0031                     _reception_msg:	
   136  0031                     	ds	5
   137  0036                     _count:	
   138  0036                     	ds	1
   139                           
   140                           	psect	cstackCOMMON
   141  0070                     __pcstackCOMMON:	
   142  0070                     ?_main:	
   143  0070                     ?_uart_read:	
   144                           ; 0 bytes @ 0x0
   145                           
   146  0070                     ??_uart_read:	
   147                           ; 0 bytes @ 0x0
   148                           
   149  0070                     ?_isr:	
   150                           ; 0 bytes @ 0x0
   151                           
   152                           
   153                           ; 0 bytes @ 0x0
   154  0070                     	ds	1
   155  0071                     ??_isr:	
   156                           
   157                           ; 0 bytes @ 0x1
   158  0071                     	ds	4
   159  0075                     ??___aldiv:	
   160                           
   161                           ; 0 bytes @ 0x5
   162  0075                     	ds	1
   163  0076                     ??_uart_init:	
   164                           
   165                           ; 0 bytes @ 0x6
   166  0076                     	ds	2
   167  0078                     ??_main:	
   168                           
   169                           	psect	cstackBANK0
   170  0020                     __pcstackBANK0:	
   171                           ; 0 bytes @ 0x8
   172                           
   173  0020                     ?___aldiv:	
   174  0020                     ___aldiv@divisor:	
   175                           ; 4 bytes @ 0x0
   176                           
   177                           
   178                           ; 4 bytes @ 0x0
   179  0020                     	ds	4
   180  0024                     ___aldiv@dividend:	
   181                           
   182                           ; 4 bytes @ 0x4
   183  0024                     	ds	4
   184  0028                     ___aldiv@counter:	
   185                           
   186                           ; 1 bytes @ 0x8
   187  0028                     	ds	1
   188  0029                     ___aldiv@sign:	
   189                           
   190                           ; 1 bytes @ 0x9
   191  0029                     	ds	1
   192  002A                     ___aldiv@quotient:	
   193                           
   194                           ; 4 bytes @ 0xA
   195  002A                     	ds	4
   196  002E                     ?_uart_init:	
   197  002E                     uart_init@baud_rate:	
   198                           ; 0 bytes @ 0xE
   199                           
   200                           
   201                           ; 2 bytes @ 0xE
   202  002E                     	ds	2
   203  0030                     uart_init@high_baud_select:	
   204                           
   205                           ; 1 bytes @ 0x10
   206  0030                     	ds	1
   207                           
   208                           	psect	maintext
   209  00EE                     __pmaintext:	
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 14 in file "uart.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;		None               void
   222 ;; Registers used:
   223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 17F/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   229 ;;      Params:         0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels required when called:    4
   235 ;; This function calls:
   236 ;;		_uart_init
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           
   243                           ;psect for function _main
   244  00EE                     _main:	
   245                           
   246                           ;uart.c: 16: TRISB=0X00;
   247                           
   248                           ;incstack = 0
   249                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   250  00EE  1683               	bsf	3,5	;RP0=1, select bank1
   251  00EF  1303               	bcf	3,6	;RP1=0, select bank1
   252  00F0  0186               	clrf	6	;volatile
   253                           
   254                           ;uart.c: 17: uart_init(9600,0);
   255  00F1  3080               	movlw	128
   256  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   257  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   258  00F4  00AE               	movwf	uart_init@baud_rate
   259  00F5  3025               	movlw	37
   260  00F6  00AF               	movwf	uart_init@baud_rate+1
   261  00F7  01B0               	clrf	uart_init@high_baud_select
   262  00F8  120A  118A  20AF  120A  118A  	fcall	_uart_init
   263  00FD                     l713:	
   264                           ;uart.c: 18: while(1)
   265                           
   266                           
   267                           ;uart.c: 19: {
   268                           ;uart.c: 24: PORTB=reception_msg[count];
   269  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   270  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   271  00FF  0836               	movf	_count,w
   272  0100  3E31               	addlw	_reception_msg& (0+255)
   273  0101  0084               	movwf	4
   274  0102  1383               	bcf	3,7	;select IRP bank0
   275  0103  0800               	movf	0,w
   276  0104  0086               	movwf	6	;volatile
   277  0105  28FD               	goto	l713
   278  0106                     __end_of_main:	
   279                           
   280                           	psect	text1
   281  00AF                     __ptext1:	
   282 ;; *************** function _uart_init *****************
   283 ;; Defined at:
   284 ;;		line 30 in file "uart.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;  baud_rate       2   14[BANK0 ] unsigned int 
   287 ;;  high_baud_se    1   16[BANK0 ] unsigned char 
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;		None               void
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         0       3       0       0       0
   300 ;;      Locals:         0       0       0       0       0
   301 ;;      Temps:          2       0       0       0       0
   302 ;;      Totals:         2       3       0       0       0
   303 ;;Total ram usage:        5 bytes
   304 ;; Hardware stack levels used:    1
   305 ;; Hardware stack levels required when called:    3
   306 ;; This function calls:
   307 ;;		___aldiv
   308 ;; This function is called by:
   309 ;;		_main
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           
   314                           ;psect for function _uart_init
   315  00AF                     _uart_init:	
   316                           
   317                           ;uart.c: 32: TRISC6=0;
   318                           
   319                           ;incstack = 0
   320                           ; Regs used in _uart_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   321  00AF  1683               	bsf	3,5	;RP0=1, select bank1
   322  00B0  1303               	bcf	3,6	;RP1=0, select bank1
   323  00B1  1307               	bcf	7,6	;volatile
   324                           
   325                           ;uart.c: 33: TRISC7=0;
   326  00B2  1387               	bcf	7,7	;volatile
   327                           
   328                           ;uart.c: 34: TXSTAbits.BRGH=high_baud_select;
   329  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   330  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   331  00B5  0830               	movf	uart_init@high_baud_select,w
   332  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   333  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   334  00B8  1D03               	skipz
   335  00B9  1518               	bsf	24,2	;volatile
   336  00BA  1903               	skipnz
   337  00BB  1118               	bcf	24,2	;volatile
   338                           
   339                           ;uart.c: 35: TXEN=1;
   340  00BC  1698               	bsf	24,5	;volatile
   341                           
   342                           ;uart.c: 36: TX9=0;
   343  00BD  1318               	bcf	24,6	;volatile
   344                           
   345                           ;uart.c: 37: SYNC=0;
   346  00BE  1218               	bcf	24,4	;volatile
   347                           
   348                           ;uart.c: 38: SPEN=1;
   349  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   350  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   351  00C1  1798               	bsf	24,7	;volatile
   352                           
   353                           ;uart.c: 39: RX9=0;
   354  00C2  1318               	bcf	24,6	;volatile
   355                           
   356                           ;uart.c: 40: CREN=0;
   357  00C3  1218               	bcf	24,4	;volatile
   358                           
   359                           ;uart.c: 41: ADDEN=0;
   360  00C4  1198               	bcf	24,3	;volatile
   361                           
   362                           ;uart.c: 44: SPBRG=(16000000/(64*baud_rate))-1;
   363  00C5  082F               	movf	uart_init@baud_rate+1,w
   364  00C6  00F7               	movwf	??_uart_init+1
   365  00C7  082E               	movf	uart_init@baud_rate,w
   366  00C8  00F6               	movwf	??_uart_init
   367  00C9  3006               	movlw	6
   368  00CA  00FF               	movwf	127
   369  00CB                     u265:	
   370  00CB  1003               	clrc
   371  00CC  0DF6               	rlf	??_uart_init,f
   372  00CD  0DF7               	rlf	??_uart_init+1,f
   373  00CE  0BFF               	decfsz	127,f
   374  00CF  28CB               	goto	u265
   375  00D0  0876               	movf	??_uart_init,w
   376  00D1  00A0               	movwf	___aldiv@divisor
   377  00D2  0877               	movf	??_uart_init+1,w
   378  00D3  00A1               	movwf	___aldiv@divisor+1
   379  00D4  01A2               	clrf	___aldiv@divisor+2
   380  00D5  01A3               	clrf	___aldiv@divisor+3
   381  00D6  3000               	movlw	0
   382  00D7  00A7               	movwf	___aldiv@dividend+3
   383  00D8  30F4               	movlw	244
   384  00D9  00A6               	movwf	___aldiv@dividend+2
   385  00DA  3024               	movlw	36
   386  00DB  00A5               	movwf	___aldiv@dividend+1
   387  00DC  3000               	movlw	0
   388  00DD  00A4               	movwf	___aldiv@dividend
   389  00DE  120A  118A  2020   	fcall	___aldiv
   390  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   391  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   392  00E3  0820               	movf	?___aldiv,w
   393  00E4  3EFF               	addlw	255
   394  00E5  1683               	bsf	3,5	;RP0=1, select bank1
   395  00E6  1303               	bcf	3,6	;RP1=0, select bank1
   396  00E7  0099               	movwf	25	;volatile
   397                           
   398                           ;uart.c: 45: GIE=1;
   399  00E8  178B               	bsf	11,7	;volatile
   400                           
   401                           ;uart.c: 46: PEIE=1;
   402  00E9  170B               	bsf	11,6	;volatile
   403                           
   404                           ;uart.c: 47: TXIE=1;
   405  00EA  160C               	bsf	12,4	;volatile
   406                           
   407                           ;uart.c: 48: RCIE=1;
   408  00EB  168C               	bsf	12,5	;volatile
   409                           
   410                           ;uart.c: 49: TRMT=0;
   411  00EC  1098               	bcf	24,1	;volatile
   412  00ED  0008               	return
   413  00EE                     __end_of_uart_init:	
   414                           
   415                           	psect	text2
   416  0020                     __ptext2:	
   417 ;; *************** function ___aldiv *****************
   418 ;; Defined at:
   419 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\aldiv.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  divisor         4    0[BANK0 ] long 
   422 ;;  dividend        4    4[BANK0 ] long 
   423 ;; Auto vars:     Size  Location     Type
   424 ;;  quotient        4   10[BANK0 ] long 
   425 ;;  sign            1    9[BANK0 ] unsigned char 
   426 ;;  counter         1    8[BANK0 ] unsigned char 
   427 ;; Return value:  Size  Location     Type
   428 ;;                  4    0[BANK0 ] long 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       8       0       0       0
   437 ;;      Locals:         0       6       0       0       0
   438 ;;      Temps:          1       0       0       0       0
   439 ;;      Totals:         1      14       0       0       0
   440 ;;Total ram usage:       15 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; Hardware stack levels required when called:    2
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		_uart_init
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           
   451                           ;psect for function ___aldiv
   452  0020                     ___aldiv:	
   453                           
   454                           ;incstack = 0
   455                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   456  0020  1283               	bcf	3,5	;RP0=0, select bank0
   457  0021  1303               	bcf	3,6	;RP1=0, select bank0
   458  0022  01A9               	clrf	___aldiv@sign
   459  0023  1FA3               	btfss	___aldiv@divisor+3,7
   460  0024  2832               	goto	l213
   461  0025  09A0               	comf	___aldiv@divisor,f
   462  0026  09A1               	comf	___aldiv@divisor+1,f
   463  0027  09A2               	comf	___aldiv@divisor+2,f
   464  0028  09A3               	comf	___aldiv@divisor+3,f
   465  0029  0AA0               	incf	___aldiv@divisor,f
   466  002A  1903               	skipnz
   467  002B  0AA1               	incf	___aldiv@divisor+1,f
   468  002C  1903               	skipnz
   469  002D  0AA2               	incf	___aldiv@divisor+2,f
   470  002E  1903               	skipnz
   471  002F  0AA3               	incf	___aldiv@divisor+3,f
   472  0030  01A9               	clrf	___aldiv@sign
   473  0031  0AA9               	incf	___aldiv@sign,f
   474  0032                     l213:	
   475  0032  1FA7               	btfss	___aldiv@dividend+3,7
   476  0033  2843               	goto	l641
   477  0034  09A4               	comf	___aldiv@dividend,f
   478  0035  09A5               	comf	___aldiv@dividend+1,f
   479  0036  09A6               	comf	___aldiv@dividend+2,f
   480  0037  09A7               	comf	___aldiv@dividend+3,f
   481  0038  0AA4               	incf	___aldiv@dividend,f
   482  0039  1903               	skipnz
   483  003A  0AA5               	incf	___aldiv@dividend+1,f
   484  003B  1903               	skipnz
   485  003C  0AA6               	incf	___aldiv@dividend+2,f
   486  003D  1903               	skipnz
   487  003E  0AA7               	incf	___aldiv@dividend+3,f
   488  003F  3001               	movlw	1
   489  0040  00F5               	movwf	??___aldiv
   490  0041  0875               	movf	??___aldiv,w
   491  0042  06A9               	xorwf	___aldiv@sign,f
   492  0043                     l641:	
   493  0043  3000               	movlw	0
   494  0044  00AD               	movwf	___aldiv@quotient+3
   495  0045  3000               	movlw	0
   496  0046  00AC               	movwf	___aldiv@quotient+2
   497  0047  3000               	movlw	0
   498  0048  00AB               	movwf	___aldiv@quotient+1
   499  0049  3000               	movlw	0
   500  004A  00AA               	movwf	___aldiv@quotient
   501  004B  0823               	movf	___aldiv@divisor+3,w
   502  004C  0422               	iorwf	___aldiv@divisor+2,w
   503  004D  0421               	iorwf	___aldiv@divisor+1,w
   504  004E  0420               	iorwf	___aldiv@divisor,w
   505  004F  1903               	skipnz
   506  0050  2898               	goto	l663
   507  0051  01A8               	clrf	___aldiv@counter
   508  0052  0AA8               	incf	___aldiv@counter,f
   509  0053                     l649:	
   510  0053  1BA3               	btfsc	___aldiv@divisor+3,7
   511  0054  2863               	goto	l651
   512  0055  3001               	movlw	1
   513  0056  00F5               	movwf	??___aldiv
   514  0057                     u195:	
   515  0057  1003               	clrc
   516  0058  0DA0               	rlf	___aldiv@divisor,f
   517  0059  0DA1               	rlf	___aldiv@divisor+1,f
   518  005A  0DA2               	rlf	___aldiv@divisor+2,f
   519  005B  0DA3               	rlf	___aldiv@divisor+3,f
   520  005C  0BF5               	decfsz	??___aldiv,f
   521  005D  2857               	goto	u195
   522  005E  3001               	movlw	1
   523  005F  00F5               	movwf	??___aldiv
   524  0060  0875               	movf	??___aldiv,w
   525  0061  07A8               	addwf	___aldiv@counter,f
   526  0062  2853               	goto	l649
   527  0063                     l651:	
   528  0063  3001               	movlw	1
   529  0064  00F5               	movwf	??___aldiv
   530  0065                     u215:	
   531  0065  1003               	clrc
   532  0066  0DAA               	rlf	___aldiv@quotient,f
   533  0067  0DAB               	rlf	___aldiv@quotient+1,f
   534  0068  0DAC               	rlf	___aldiv@quotient+2,f
   535  0069  0DAD               	rlf	___aldiv@quotient+3,f
   536  006A  0BF5               	decfsz	??___aldiv,f
   537  006B  2865               	goto	u215
   538  006C  0823               	movf	___aldiv@divisor+3,w
   539  006D  0227               	subwf	___aldiv@dividend+3,w
   540  006E  1D03               	skipz
   541  006F  287A               	goto	u225
   542  0070  0822               	movf	___aldiv@divisor+2,w
   543  0071  0226               	subwf	___aldiv@dividend+2,w
   544  0072  1D03               	skipz
   545  0073  287A               	goto	u225
   546  0074  0821               	movf	___aldiv@divisor+1,w
   547  0075  0225               	subwf	___aldiv@dividend+1,w
   548  0076  1D03               	skipz
   549  0077  287A               	goto	u225
   550  0078  0820               	movf	___aldiv@divisor,w
   551  0079  0224               	subwf	___aldiv@dividend,w
   552  007A                     u225:	
   553  007A  1C03               	skipc
   554  007B  288B               	goto	l659
   555  007C  0820               	movf	___aldiv@divisor,w
   556  007D  02A4               	subwf	___aldiv@dividend,f
   557  007E  0821               	movf	___aldiv@divisor+1,w
   558  007F  1C03               	skipc
   559  0080  0F21               	incfsz	___aldiv@divisor+1,w
   560  0081  02A5               	subwf	___aldiv@dividend+1,f
   561  0082  0822               	movf	___aldiv@divisor+2,w
   562  0083  1C03               	skipc
   563  0084  0F22               	incfsz	___aldiv@divisor+2,w
   564  0085  02A6               	subwf	___aldiv@dividend+2,f
   565  0086  0823               	movf	___aldiv@divisor+3,w
   566  0087  1C03               	skipc
   567  0088  0F23               	incfsz	___aldiv@divisor+3,w
   568  0089  02A7               	subwf	___aldiv@dividend+3,f
   569  008A  142A               	bsf	___aldiv@quotient,0
   570  008B                     l659:	
   571  008B  3001               	movlw	1
   572  008C                     u235:	
   573  008C  1003               	clrc
   574  008D  0CA3               	rrf	___aldiv@divisor+3,f
   575  008E  0CA2               	rrf	___aldiv@divisor+2,f
   576  008F  0CA1               	rrf	___aldiv@divisor+1,f
   577  0090  0CA0               	rrf	___aldiv@divisor,f
   578  0091  3EFF               	addlw	-1
   579  0092  1D03               	skipz
   580  0093  288C               	goto	u235
   581  0094  3001               	movlw	1
   582  0095  02A8               	subwf	___aldiv@counter,f
   583  0096  1D03               	btfss	3,2
   584  0097  2863               	goto	l651
   585  0098                     l663:	
   586  0098  0829               	movf	___aldiv@sign,w
   587  0099  1903               	btfsc	3,2
   588  009A  28A6               	goto	l667
   589  009B  09AA               	comf	___aldiv@quotient,f
   590  009C  09AB               	comf	___aldiv@quotient+1,f
   591  009D  09AC               	comf	___aldiv@quotient+2,f
   592  009E  09AD               	comf	___aldiv@quotient+3,f
   593  009F  0AAA               	incf	___aldiv@quotient,f
   594  00A0  1903               	skipnz
   595  00A1  0AAB               	incf	___aldiv@quotient+1,f
   596  00A2  1903               	skipnz
   597  00A3  0AAC               	incf	___aldiv@quotient+2,f
   598  00A4  1903               	skipnz
   599  00A5  0AAD               	incf	___aldiv@quotient+3,f
   600  00A6                     l667:	
   601  00A6  082D               	movf	___aldiv@quotient+3,w
   602  00A7  00A3               	movwf	?___aldiv+3
   603  00A8  082C               	movf	___aldiv@quotient+2,w
   604  00A9  00A2               	movwf	?___aldiv+2
   605  00AA  082B               	movf	___aldiv@quotient+1,w
   606  00AB  00A1               	movwf	?___aldiv+1
   607  00AC  082A               	movf	___aldiv@quotient,w
   608  00AD  00A0               	movwf	?___aldiv
   609  00AE  0008               	return
   610  00AF                     __end_of___aldiv:	
   611                           
   612                           	psect	text3
   613  0106                     __ptext3:	
   614 ;; *************** function _isr *****************
   615 ;; Defined at:
   616 ;;		line 68 in file "uart.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;		None               void
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0
   632 ;;      Temps:          4       0       0       0       0
   633 ;;      Totals:         4       0       0       0       0
   634 ;;Total ram usage:        4 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    1
   637 ;; This function calls:
   638 ;;		_uart_read
   639 ;; This function is called by:
   640 ;;		Interrupt level 1
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _isr
   646  0106                     _isr:	
   647                           
   648                           ;uart.c: 70: if(RCIF)
   649  0106  1E8C               	btfss	12,5	;volatile
   650  0107  290D               	goto	i1l719
   651                           
   652                           ;uart.c: 71: {
   653                           ;uart.c: 72: uart_read();
   654  0108  120A  118A  211E  120A  118A  	fcall	_uart_read
   655  010D                     i1l719:	
   656                           
   657                           ;uart.c: 73: }
   658                           ;uart.c: 74: if(TXIF)
   659  010D  1283               	bcf	3,5	;RP0=0, select bank0
   660  010E  1303               	bcf	3,6	;RP1=0, select bank0
   661  010F  1E0C               	btfss	12,4	;volatile
   662  0110  2913               	goto	i1l74
   663                           
   664                           ;uart.c: 75: {
   665                           ;uart.c: 76: TXREG=transmision_msg;
   666  0111  0878               	movf	_transmision_msg,w
   667  0112  0099               	movwf	25	;volatile
   668  0113                     i1l74:	
   669  0113  0874               	movf	??_isr+3,w
   670  0114  00FF               	movwf	127
   671  0115  0873               	movf	??_isr+2,w
   672  0116  008A               	movwf	10
   673  0117  0872               	movf	??_isr+1,w
   674  0118  0084               	movwf	4
   675  0119  0E71               	swapf	??_isr^(0+-128),w
   676  011A  0083               	movwf	3
   677  011B  0EFE               	swapf	126,f
   678  011C  0E7E               	swapf	126,w
   679  011D  0009               	retfie
   680  011E                     __end_of_isr:	
   681                           
   682                           	psect	intentry
   683  0004                     __pintentry:	
   684                           ;incstack = 0
   685                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   686                           
   687  0004                     interrupt_function:	
   688  007E                     saved_w	set	btemp
   689  0004  00FE               	movwf	btemp
   690  0005  0E03               	swapf	3,w
   691  0006  00F1               	movwf	??_isr
   692  0007  0804               	movf	4,w
   693  0008  00F2               	movwf	??_isr+1
   694  0009  080A               	movf	10,w
   695  000A  00F3               	movwf	??_isr+2
   696  000B  1283               	bcf	3,5	;RP0=0, select bank0
   697  000C  1303               	bcf	3,6	;RP1=0, select bank0
   698  000D  087F               	movf	btemp+1,w
   699  000E  00F4               	movwf	??_isr+3
   700  000F  120A  118A  2906   	ljmp	_isr
   701                           
   702                           	psect	text4
   703  011E                     __ptext4:	
   704 ;; *************** function _uart_read *****************
   705 ;; Defined at:
   706 ;;		line 59 in file "uart.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;		None               void
   713 ;; Registers used:
   714 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       0       0       0       0
   721 ;;      Locals:         0       0       0       0       0
   722 ;;      Temps:          1       0       0       0       0
   723 ;;      Totals:         1       0       0       0       0
   724 ;;Total ram usage:        1 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; This function calls:
   727 ;;		Nothing
   728 ;; This function is called by:
   729 ;;		_isr
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _uart_read
   735  011E                     _uart_read:	
   736                           
   737                           ;uart.c: 61: reception_msg[count++]=RCREG;
   738                           
   739                           ;incstack = 0
   740                           ; Regs used in _uart_read: [wreg-fsr0h+status,2+status,0]
   741  011E  1283               	bcf	3,5	;RP0=0, select bank0
   742  011F  1303               	bcf	3,6	;RP1=0, select bank0
   743  0120  081A               	movf	26,w	;volatile
   744  0121  00F0               	movwf	??_uart_read
   745  0122  0836               	movf	_count,w
   746  0123  3E31               	addlw	_reception_msg& (0+255)
   747  0124  0084               	movwf	4
   748  0125  0870               	movf	??_uart_read,w
   749  0126  1383               	bcf	3,7	;select IRP bank0
   750  0127  0080               	movwf	0
   751  0128  3001               	movlw	1
   752  0129  00F0               	movwf	??_uart_read
   753  012A  0870               	movf	??_uart_read,w
   754  012B  07B6               	addwf	_count,f
   755                           
   756                           ;uart.c: 62: if(count>4)
   757  012C  3005               	movlw	5
   758  012D  0236               	subwf	_count,w
   759  012E  1C03               	skipc
   760  012F  0008               	return
   761                           
   762                           ;uart.c: 63: {
   763                           ;uart.c: 64: count=0;
   764  0130  01B6               	clrf	_count
   765  0131  0008               	return
   766  0132                     __end_of_uart_read:	
   767  007E                     btemp	set	126	;btemp
   768  007E                     wtemp	set	126
   769  007E                     wtemp0	set	126
   770  0080                     wtemp1	set	128
   771  0082                     wtemp2	set	130
   772  0084                     wtemp3	set	132
   773  0086                     wtemp4	set	134
   774  0088                     wtemp5	set	136
   775  007F                     wtemp6	set	127
   776  007E                     ttemp	set	126
   777  007E                     ttemp0	set	126
   778  0081                     ttemp1	set	129
   779  0084                     ttemp2	set	132
   780  0087                     ttemp3	set	135
   781  007F                     ttemp4	set	127
   782  007E                     ltemp	set	126
   783  007E                     ltemp0	set	126
   784  0082                     ltemp1	set	130
   785  0086                     ltemp2	set	134
   786  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     17      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_uart_init
    _uart_init->___aldiv

Critical Paths under _isr in COMMON

    _isr->_uart_read

Critical Paths under _main in BANK0

    _main->_uart_init
    _uart_init->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     600
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            5     2      3     600
                                              6 COMMON     2     2      0
                                             14 BANK0      3     0      3
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              5 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              1 COMMON     4     4      0
                          _uart_read
 ---------------------------------------------------------------------------------
 (4) _uart_read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_init
     ___aldiv

 _isr (ROOT)
   _uart_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      17       5       28.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Apr 12 01:04:49 2017

                      l213 0032                        l641 0043                        l713 00FD  
                      l651 0063                        l663 0098                        l649 0053  
                      l667 00A6                        l659 008B                        _GIE 005F  
                      u215 0065                        u225 007A                        u235 008C  
                      u265 00CB                        u195 0057                        _RX9 00C6  
                      _TX9 04C6                        _isr 0106                        fsr0 0004  
                      indf 0000                       ?_isr 0070                       _CREN 00C4  
                     _PEIE 005E                       _RCIE 0465                       _RCIF 0065  
                     i1l74 0113                       _SPEN 00C7                       _TRMT 04C1  
                     _TXIE 0464                       _TXEN 04C5                       _TXIF 0064  
                     _SYNC 04C4                       _main 00EE                       btemp 007E  
                     ltemp 007E                       start 0012                       ttemp 007E  
                     wtemp 007E                      ??_isr 0071            __end_of___aldiv 00AF  
                    _ADDEN 00C3                      ?_main 0070                      i1l719 010D  
                    _RCREG 001A                      _SPBRG 0099                      _PORTB 0006  
                    _TRISB 0086                      _TXREG 0019                      _count 0036  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
          __initialization 0015               __end_of_main 0106                     ??_main 0078  
                   _TRISC6 043E                     _TRISC7 043F                  ??___aldiv 0075  
                   saved_w 007E    __end_of__initialization 001C             __pcstackCOMMON 0070  
               __pbssBANK0 0031                 __pmaintext 00EE                 __pintentry 0004  
       __size_of_uart_init 003F         __size_of_uart_read 0014            _transmision_msg 0078  
                  ___aldiv 0020                    __ptext0 0000                    __ptext1 00AF  
                  __ptext2 0020                    __ptext3 0106                    __ptext4 011E  
             __size_of_isr 0018           ___aldiv@dividend 0024       end_of_initialization 001C  
        __end_of_uart_init 00EE          __end_of_uart_read 0132           ___aldiv@quotient 002A  
            _reception_msg 0031                  _TXSTAbits 0098        start_initialization 0015  
              __end_of_isr 011E                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020                   ?___aldiv 0020            ___aldiv@divisor 0020  
        interrupt_function 0004            ___aldiv@counter 0028                  _uart_init 00AF  
                _uart_read 011E                 ?_uart_init 002E                 ?_uart_read 0070  
         __size_of___aldiv 008F         uart_init@baud_rate 002E              __size_of_main 0018  
uart_init@high_baud_select 0030                   intlevel1 0000                ??_uart_init 0076  
              ??_uart_read 0070               ___aldiv@sign 0029  
