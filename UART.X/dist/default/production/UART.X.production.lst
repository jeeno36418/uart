

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Apr 16 13:20:21 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  0008                     	;# 
    34  0009                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000D                     	;# 
    39  000E                     	;# 
    40  000E                     	;# 
    41  000F                     	;# 
    42  0010                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0014                     	;# 
    47  0015                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001B                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  001D                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  0081                     	;# 
    61  0085                     	;# 
    62  0086                     	;# 
    63  0087                     	;# 
    64  0088                     	;# 
    65  0089                     	;# 
    66  008C                     	;# 
    67  008D                     	;# 
    68  008E                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0098                     	;# 
    74  0099                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  009F                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145                           
   146                           	psect	idataBANK0
   147  01CE                     __pidataBANK0:	
   148                           
   149                           ;initializer for _lcd_msg
   150  01CE  3430               	retlw	48
   151  01CF  3400               	retlw	0
   152  01D0  3400               	retlw	0
   153  01D1  3400               	retlw	0
   154  01D2  3400               	retlw	0
   155  01D3  3400               	retlw	0
   156  01D4  3400               	retlw	0
   157  01D5  3400               	retlw	0
   158  01D6  3400               	retlw	0
   159  01D7  3400               	retlw	0
   160  01D8  3400               	retlw	0
   161  01D9  3400               	retlw	0
   162  01DA  3400               	retlw	0
   163  01DB  3400               	retlw	0
   164  01DC  3400               	retlw	0
   165  01DD  3400               	retlw	0
   166  0006                     _PORTB	set	6
   167  0008                     _PORTD	set	8
   168  0009                     _PORTE	set	9
   169  001A                     _RCREG	set	26
   170  0010                     _T1CON	set	16
   171  000F                     _TMR1H	set	15
   172  000E                     _TMR1L	set	14
   173  0019                     _TXREG	set	25
   174  00C3                     _ADDEN	set	195
   175  00C4                     _CREN	set	196
   176  005F                     _GIE	set	95
   177  005E                     _PEIE	set	94
   178  0065                     _RCIF	set	101
   179  0048                     _RE0	set	72
   180  0049                     _RE1	set	73
   181  00C6                     _RX9	set	198
   182  00C7                     _SPEN	set	199
   183  0060                     _TMR1IF	set	96
   184  0064                     _TXIF	set	100
   185  009F                     _ADCON1	set	159
   186  0099                     _SPBRG	set	153
   187  0086                     _TRISB	set	134
   188  0088                     _TRISD	set	136
   189  0089                     _TRISE	set	137
   190  0098                     _TXSTAbits	set	152
   191  0465                     _RCIE	set	1125
   192  04C4                     _SYNC	set	1220
   193  0460                     _TMR1IE	set	1120
   194  043E                     _TRISC6	set	1086
   195  043F                     _TRISC7	set	1087
   196  04C6                     _TX9	set	1222
   197  04C5                     _TXEN	set	1221
   198  0464                     _TXIE	set	1124
   199                           
   200                           	psect	cinit
   201  0015                     start_initialization:	
   202                           ; #config settings
   203                           
   204  0015                     __initialization:	
   205                           
   206                           ; Clear objects allocated to COMMON
   207  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   208  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   209  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   210  0018  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   211                           
   212                           ; Clear objects allocated to BANK0
   213  0019  1383               	bcf	3,7	;select IRP bank0
   214  001A  3033               	movlw	low __pbssBANK0
   215  001B  0084               	movwf	4
   216  001C  3045               	movlw	low (__pbssBANK0+18)
   217  001D  120A  118A  21F5  120A  118A  	fcall	clear_ram0
   218                           
   219                           ; Initialize objects allocated to BANK0
   220  0022  3055               	movlw	low (__pdataBANK0+16)
   221  0023  00FD               	movwf	btemp+-1
   222  0024  3001               	movlw	high __pidataBANK0
   223  0025  00FE               	movwf	btemp
   224  0026  30CE               	movlw	low __pidataBANK0
   225  0027  00FF               	movwf	btemp+1
   226  0028  3045               	movlw	low __pdataBANK0
   227  0029  0084               	movwf	4
   228  002A  120A  118A  21C1   	fcall	init_ram0
   229  002D                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232  002D                     __end_of__initialization:	
   233  002D  0183               	clrf	3
   234  002E  120A  118A  28C0   	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	bssCOMMON
   237  0076                     __pbssCOMMON:	
   238  0076                     _count:	
   239  0076                     	ds	1
   240  0077                     _recieved:	
   241  0077                     	ds	1
   242  0078                     _rxmsg:	
   243  0078                     	ds	1
   244  0079                     _transmision_msg:	
   245  0079                     	ds	1
   246                           
   247                           	psect	bssBANK0
   248  0033                     __pbssBANK0:	
   249  0033                     _lcd_msg1:	
   250  0033                     	ds	16
   251  0043                     _time_flag:	
   252  0043                     	ds	1
   253  0044                     _timer:	
   254  0044                     	ds	1
   255                           
   256                           	psect	dataBANK0
   257  0045                     __pdataBANK0:	
   258  0045                     _lcd_msg:	
   259  0045                     	ds	16
   260                           
   261                           	psect	clrtext
   262  01F5                     clear_ram0:	
   263                           ;	Called with FSR containing the base address, and
   264                           ;	W with the last address+1
   265                           
   266  01F5  0064               	clrwdt	;clear the watchdog before getting into this loop
   267  01F6                     clrloop0:	
   268  01F6  0180               	clrf	0	;clear RAM location pointed to by FSR
   269  01F7  0A84               	incf	4,f	;increment pointer
   270  01F8  0604               	xorwf	4,w	;XOR with final address
   271  01F9  1903               	btfsc	3,2	;have we reached the end yet?
   272  01FA  3400               	retlw	0	;all done for this memory range, return
   273  01FB  0604               	xorwf	4,w	;XOR again to restore value
   274  01FC  29F6               	goto	clrloop0	;do the next byte
   275                           
   276                           	psect	inittext
   277  01BD                     init_fetch0:	
   278                           ;	Called with low address in FSR and high address in W
   279                           
   280  01BD  087E               	movf	126,w
   281  01BE  008A               	movwf	10
   282  01BF  087F               	movf	127,w
   283  01C0  0082               	movwf	2
   284  01C1                     init_ram0:	
   285                           ;Called with:
   286                           ;	high address of idata address in btemp 
   287                           ;	low address of idata address in btemp+1 
   288                           ;	low address of data in FSR
   289                           ;	high address + 1 of data in btemp-1
   290                           
   291  01C1  21BD  120A  118A   	fcall	init_fetch0
   292  01C4  0080               	movwf	0
   293  01C5  0A84               	incf	4,f
   294  01C6  0804               	movf	4,w
   295  01C7  067D               	xorwf	125,w
   296  01C8  1903               	btfsc	3,2
   297  01C9  3400               	retlw	0
   298  01CA  0AFF               	incf	127,f
   299  01CB  1903               	btfsc	3,2
   300  01CC  0AFE               	incf	126,f
   301  01CD  29C1               	goto	init_ram0
   302                           
   303                           	psect	cstackCOMMON
   304  0070                     __pcstackCOMMON:	
   305  0070                     ?_timer_init:	
   306  0070                     ?_lcd_init:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_uart_write:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_lcd_cmnt:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ?_main:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?_uart_read:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ??_uart_read:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_isr:	
   325                           ; 0 bytes @ 0x0
   326                           
   327                           
   328                           ; 0 bytes @ 0x0
   329  0070                     	ds	1
   330  0071                     ??_isr:	
   331                           
   332                           ; 0 bytes @ 0x1
   333  0071                     	ds	5
   334                           
   335                           	psect	cstackBANK0
   336  0020                     __pcstackBANK0:	
   337  0020                     ??_timer_init:	
   338  0020                     ??_uart_write:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0020                     ?_delay:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0020                     ?___aldiv:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0020                     delay@x:	
   348                           ; 4 bytes @ 0x0
   349                           
   350  0020                     ___aldiv@divisor:	
   351                           ; 2 bytes @ 0x0
   352                           
   353                           
   354                           ; 4 bytes @ 0x0
   355  0020                     	ds	1
   356  0021                     uart_write@write_msg:	
   357                           
   358                           ; 1 bytes @ 0x1
   359  0021                     	ds	1
   360  0022                     ??_delay:	
   361                           
   362                           ; 0 bytes @ 0x2
   363  0022                     	ds	1
   364  0023                     delay@i:	
   365                           
   366                           ; 2 bytes @ 0x3
   367  0023                     	ds	1
   368  0024                     ___aldiv@dividend:	
   369                           
   370                           ; 4 bytes @ 0x4
   371  0024                     	ds	1
   372  0025                     delay@j:	
   373                           
   374                           ; 2 bytes @ 0x5
   375  0025                     	ds	2
   376  0027                     ??_lcd_cmnt:	
   377  0027                     lcd_cmnt@cmnt:	
   378                           ; 0 bytes @ 0x7
   379                           
   380                           
   381                           ; 1 bytes @ 0x7
   382  0027                     	ds	1
   383  0028                     ??_lcd_init:	
   384  0028                     ??___aldiv:	
   385                           ; 0 bytes @ 0x8
   386                           
   387                           
   388                           ; 0 bytes @ 0x8
   389  0028                     	ds	1
   390  0029                     ___aldiv@counter:	
   391                           
   392                           ; 1 bytes @ 0x9
   393  0029                     	ds	1
   394  002A                     ___aldiv@sign:	
   395                           
   396                           ; 1 bytes @ 0xA
   397  002A                     	ds	1
   398  002B                     ___aldiv@quotient:	
   399                           
   400                           ; 4 bytes @ 0xB
   401  002B                     	ds	4
   402  002F                     ?_uart_init:	
   403  002F                     uart_init@baud_rate:	
   404                           ; 0 bytes @ 0xF
   405                           
   406                           
   407                           ; 2 bytes @ 0xF
   408  002F                     	ds	2
   409  0031                     uart_init@high_baud_select:	
   410                           
   411                           ; 1 bytes @ 0x11
   412  0031                     	ds	1
   413  0032                     ??_uart_init:	
   414  0032                     ??_main:	
   415                           ; 0 bytes @ 0x12
   416                           
   417                           
   418                           ; 0 bytes @ 0x12
   419  0032                     	ds	1
   420                           
   421                           	psect	maintext
   422  00C0                     __pmaintext:	
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 19 in file "uart.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;		None               void
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : 17F/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0
   444 ;;      Temps:          0       1       0       0       0
   445 ;;      Totals:         0       1       0       0       0
   446 ;;Total ram usage:        1 bytes
   447 ;; Hardware stack levels required when called:    5
   448 ;; This function calls:
   449 ;;		_lcd_init
   450 ;;		_timer_init
   451 ;;		_uart_init
   452 ;;		_uart_write
   453 ;; This function is called by:
   454 ;;		Startup code after reset
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           
   459                           ;psect for function _main
   460  00C0                     _main:	
   461                           
   462                           ;uart.c: 21: TRISB=0x00;
   463                           
   464                           ;incstack = 0
   465                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   466  00C0  1683               	bsf	3,5	;RP0=1, select bank1
   467  00C1  1303               	bcf	3,6	;RP1=0, select bank1
   468  00C2  0186               	clrf	6	;volatile
   469                           
   470                           ;uart.c: 22: TRISD=0X00;
   471  00C3  0188               	clrf	8	;volatile
   472                           
   473                           ;uart.c: 23: TRISE=0X00;
   474  00C4  0189               	clrf	9	;volatile
   475                           
   476                           ;uart.c: 24: PORTB=0X00;
   477  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   478  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   479  00C7  0186               	clrf	6	;volatile
   480                           
   481                           ;uart.c: 25: PORTE=0X00;
   482  00C8  0189               	clrf	9	;volatile
   483                           
   484                           ;uart.c: 27: timer_init();
   485  00C9  120A  118A  21DE  120A  118A  	fcall	_timer_init
   486                           
   487                           ;uart.c: 28: uart_init(9600,0);
   488  00CE  3080               	movlw	128
   489  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   490  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   491  00D1  00AF               	movwf	uart_init@baud_rate
   492  00D2  3025               	movlw	37
   493  00D3  00B0               	movwf	uart_init@baud_rate+1
   494  00D4  01B1               	clrf	uart_init@high_baud_select
   495  00D5  120A  118A  20F6  120A  118A  	fcall	_uart_init
   496                           
   497                           ;uart.c: 29: lcd_init();
   498  00DA  120A  118A  218A  120A  118A  	fcall	_lcd_init
   499  00DF                     l1079:	
   500                           ;uart.c: 30: while(1)
   501                           
   502                           
   503                           ;uart.c: 31: {
   504                           ;uart.c: 38: if(time_flag)
   505  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   506  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   507  00E1  0843               	movf	_time_flag,w
   508  00E2  1903               	btfsc	3,2
   509  00E3  28DF               	goto	l1079
   510                           
   511                           ;uart.c: 39: {
   512                           ;uart.c: 40: uart_write(timer++);
   513  00E4  0844               	movf	_timer,w
   514  00E5  120A  118A  21EA  120A  118A  	fcall	_uart_write
   515  00EA  3001               	movlw	1
   516  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   517  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   518  00ED  00B2               	movwf	??_main
   519  00EE  0832               	movf	??_main,w
   520  00EF  07C4               	addwf	_timer,f
   521                           
   522                           ;uart.c: 41: if(timer==60)
   523  00F0  0844               	movf	_timer,w
   524  00F1  3A3C               	xorlw	60
   525  00F2  1903               	btfsc	3,2
   526                           
   527                           ;uart.c: 42: {
   528                           ;uart.c: 43: timer=0;
   529  00F3  01C4               	clrf	_timer
   530                           
   531                           ;uart.c: 44: }
   532                           ;uart.c: 45: time_flag=0;
   533  00F4  01C3               	clrf	_time_flag
   534  00F5  28DF               	goto	l1079
   535  00F6                     __end_of_main:	
   536                           
   537                           	psect	text1
   538  01EA                     __ptext1:	
   539 ;; *************** function _uart_write *****************
   540 ;; Defined at:
   541 ;;		line 96 in file "uart.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  write_msg       1    wreg     unsigned char 
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  write_msg       1    1[BANK0 ] unsigned char 
   546 ;; Return value:  Size  Location     Type
   547 ;;		None               void
   548 ;; Registers used:
   549 ;;		wreg
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       1       0       0       0
   557 ;;      Temps:          0       1       0       0       0
   558 ;;      Totals:         0       2       0       0       0
   559 ;;Total ram usage:        2 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; Hardware stack levels required when called:    2
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           
   570                           ;psect for function _uart_write
   571  01EA                     _uart_write:	
   572                           
   573                           ;incstack = 0
   574                           ; Regs used in _uart_write: [wreg]
   575                           ;uart_write@write_msg stored from wreg
   576  01EA  1283               	bcf	3,5	;RP0=0, select bank0
   577  01EB  1303               	bcf	3,6	;RP1=0, select bank0
   578  01EC  00A1               	movwf	uart_write@write_msg
   579                           
   580                           ;uart.c: 99: transmision_msg=write_msg;
   581  01ED  0821               	movf	uart_write@write_msg,w
   582  01EE  00A0               	movwf	??_uart_write
   583  01EF  0820               	movf	??_uart_write,w
   584  01F0  00F9               	movwf	_transmision_msg
   585                           
   586                           ;uart.c: 101: TXIE=1;
   587  01F1  1683               	bsf	3,5	;RP0=1, select bank1
   588  01F2  1303               	bcf	3,6	;RP1=0, select bank1
   589  01F3  160C               	bsf	12,4	;volatile
   590  01F4  0008               	return
   591  01F5                     __end_of_uart_write:	
   592                           
   593                           	psect	text2
   594  00F6                     __ptext2:	
   595 ;; *************** function _uart_init *****************
   596 ;; Defined at:
   597 ;;		line 74 in file "uart.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  baud_rate       2   15[BANK0 ] unsigned int 
   600 ;;  high_baud_se    1   17[BANK0 ] unsigned char 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;		None               void
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         0       3       0       0       0
   613 ;;      Locals:         0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0
   615 ;;      Totals:         0       3       0       0       0
   616 ;;Total ram usage:        3 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; Hardware stack levels required when called:    3
   619 ;; This function calls:
   620 ;;		___aldiv
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _uart_init
   628  00F6                     _uart_init:	
   629                           
   630                           ;uart.c: 76: TRISC6=0;
   631                           
   632                           ;incstack = 0
   633                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
   634  00F6  1683               	bsf	3,5	;RP0=1, select bank1
   635  00F7  1303               	bcf	3,6	;RP1=0, select bank1
   636  00F8  1307               	bcf	7,6	;volatile
   637                           
   638                           ;uart.c: 77: TRISC7=1;
   639  00F9  1787               	bsf	7,7	;volatile
   640                           
   641                           ;uart.c: 78: TXSTAbits.BRGH=high_baud_select;
   642  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   643  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   644  00FC  0831               	movf	uart_init@high_baud_select,w
   645  00FD  1683               	bsf	3,5	;RP0=1, select bank1
   646  00FE  1303               	bcf	3,6	;RP1=0, select bank1
   647  00FF  1D03               	skipz
   648  0100  1518               	bsf	24,2	;volatile
   649  0101  1903               	skipnz
   650  0102  1118               	bcf	24,2	;volatile
   651                           
   652                           ;uart.c: 79: TXEN=1;
   653  0103  1698               	bsf	24,5	;volatile
   654                           
   655                           ;uart.c: 80: TX9=0;
   656  0104  1318               	bcf	24,6	;volatile
   657                           
   658                           ;uart.c: 81: SYNC=0;
   659  0105  1218               	bcf	24,4	;volatile
   660                           
   661                           ;uart.c: 82: SPEN=1;
   662  0106  1283               	bcf	3,5	;RP0=0, select bank0
   663  0107  1303               	bcf	3,6	;RP1=0, select bank0
   664  0108  1798               	bsf	24,7	;volatile
   665                           
   666                           ;uart.c: 83: RX9=0;
   667  0109  1318               	bcf	24,6	;volatile
   668                           
   669                           ;uart.c: 84: CREN=1;
   670  010A  1618               	bsf	24,4	;volatile
   671                           
   672                           ;uart.c: 85: ADDEN=0;
   673  010B  1198               	bcf	24,3	;volatile
   674                           
   675                           ;uart.c: 88: SPBRG=(((16000000/64)/baud_rate)-1);
   676  010C  082F               	movf	uart_init@baud_rate,w
   677  010D  00A0               	movwf	___aldiv@divisor
   678  010E  0830               	movf	uart_init@baud_rate+1,w
   679  010F  00A1               	movwf	___aldiv@divisor+1
   680  0110  01A2               	clrf	___aldiv@divisor+2
   681  0111  01A3               	clrf	___aldiv@divisor+3
   682  0112  3000               	movlw	0
   683  0113  00A7               	movwf	___aldiv@dividend+3
   684  0114  3003               	movlw	3
   685  0115  00A6               	movwf	___aldiv@dividend+2
   686  0116  30D0               	movlw	208
   687  0117  00A5               	movwf	___aldiv@dividend+1
   688  0118  3090               	movlw	144
   689  0119  00A4               	movwf	___aldiv@dividend
   690  011A  120A  118A  2031   	fcall	___aldiv
   691  011D  1283               	bcf	3,5	;RP0=0, select bank0
   692  011E  1303               	bcf	3,6	;RP1=0, select bank0
   693  011F  0820               	movf	?___aldiv,w
   694  0120  3EFF               	addlw	255
   695  0121  1683               	bsf	3,5	;RP0=1, select bank1
   696  0122  1303               	bcf	3,6	;RP1=0, select bank1
   697  0123  0099               	movwf	25	;volatile
   698                           
   699                           ;uart.c: 89: GIE=1;
   700  0124  178B               	bsf	11,7	;volatile
   701                           
   702                           ;uart.c: 90: PEIE=1;
   703  0125  170B               	bsf	11,6	;volatile
   704                           
   705                           ;uart.c: 92: RCIE=1;
   706  0126  168C               	bsf	12,5	;volatile
   707  0127  0008               	return
   708  0128                     __end_of_uart_init:	
   709                           
   710                           	psect	text3
   711  0031                     __ptext3:	
   712 ;; *************** function ___aldiv *****************
   713 ;; Defined at:
   714 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\aldiv.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  divisor         4    0[BANK0 ] long 
   717 ;;  dividend        4    4[BANK0 ] long 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  quotient        4   11[BANK0 ] long 
   720 ;;  sign            1   10[BANK0 ] unsigned char 
   721 ;;  counter         1    9[BANK0 ] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  4    0[BANK0 ] long 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   731 ;;      Params:         0       8       0       0       0
   732 ;;      Locals:         0       6       0       0       0
   733 ;;      Temps:          0       1       0       0       0
   734 ;;      Totals:         0      15       0       0       0
   735 ;;Total ram usage:       15 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    2
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_uart_init
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           
   746                           ;psect for function ___aldiv
   747  0031                     ___aldiv:	
   748                           
   749                           ;incstack = 0
   750                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   751  0031  1283               	bcf	3,5	;RP0=0, select bank0
   752  0032  1303               	bcf	3,6	;RP1=0, select bank0
   753  0033  01AA               	clrf	___aldiv@sign
   754  0034  1FA3               	btfss	___aldiv@divisor+3,7
   755  0035  2843               	goto	l299
   756  0036  09A0               	comf	___aldiv@divisor,f
   757  0037  09A1               	comf	___aldiv@divisor+1,f
   758  0038  09A2               	comf	___aldiv@divisor+2,f
   759  0039  09A3               	comf	___aldiv@divisor+3,f
   760  003A  0AA0               	incf	___aldiv@divisor,f
   761  003B  1903               	skipnz
   762  003C  0AA1               	incf	___aldiv@divisor+1,f
   763  003D  1903               	skipnz
   764  003E  0AA2               	incf	___aldiv@divisor+2,f
   765  003F  1903               	skipnz
   766  0040  0AA3               	incf	___aldiv@divisor+3,f
   767  0041  01AA               	clrf	___aldiv@sign
   768  0042  0AAA               	incf	___aldiv@sign,f
   769  0043                     l299:	
   770  0043  1FA7               	btfss	___aldiv@dividend+3,7
   771  0044  2854               	goto	l995
   772  0045  09A4               	comf	___aldiv@dividend,f
   773  0046  09A5               	comf	___aldiv@dividend+1,f
   774  0047  09A6               	comf	___aldiv@dividend+2,f
   775  0048  09A7               	comf	___aldiv@dividend+3,f
   776  0049  0AA4               	incf	___aldiv@dividend,f
   777  004A  1903               	skipnz
   778  004B  0AA5               	incf	___aldiv@dividend+1,f
   779  004C  1903               	skipnz
   780  004D  0AA6               	incf	___aldiv@dividend+2,f
   781  004E  1903               	skipnz
   782  004F  0AA7               	incf	___aldiv@dividend+3,f
   783  0050  3001               	movlw	1
   784  0051  00A8               	movwf	??___aldiv
   785  0052  0828               	movf	??___aldiv,w
   786  0053  06AA               	xorwf	___aldiv@sign,f
   787  0054                     l995:	
   788  0054  3000               	movlw	0
   789  0055  00AE               	movwf	___aldiv@quotient+3
   790  0056  3000               	movlw	0
   791  0057  00AD               	movwf	___aldiv@quotient+2
   792  0058  3000               	movlw	0
   793  0059  00AC               	movwf	___aldiv@quotient+1
   794  005A  3000               	movlw	0
   795  005B  00AB               	movwf	___aldiv@quotient
   796  005C  0823               	movf	___aldiv@divisor+3,w
   797  005D  0422               	iorwf	___aldiv@divisor+2,w
   798  005E  0421               	iorwf	___aldiv@divisor+1,w
   799  005F  0420               	iorwf	___aldiv@divisor,w
   800  0060  1903               	skipnz
   801  0061  28A9               	goto	l1017
   802  0062  01A9               	clrf	___aldiv@counter
   803  0063  0AA9               	incf	___aldiv@counter,f
   804  0064                     l1003:	
   805  0064  1BA3               	btfsc	___aldiv@divisor+3,7
   806  0065  2874               	goto	l1005
   807  0066  3001               	movlw	1
   808  0067  00A8               	movwf	??___aldiv
   809  0068                     u475:	
   810  0068  1003               	clrc
   811  0069  0DA0               	rlf	___aldiv@divisor,f
   812  006A  0DA1               	rlf	___aldiv@divisor+1,f
   813  006B  0DA2               	rlf	___aldiv@divisor+2,f
   814  006C  0DA3               	rlf	___aldiv@divisor+3,f
   815  006D  0BA8               	decfsz	??___aldiv,f
   816  006E  2868               	goto	u475
   817  006F  3001               	movlw	1
   818  0070  00A8               	movwf	??___aldiv
   819  0071  0828               	movf	??___aldiv,w
   820  0072  07A9               	addwf	___aldiv@counter,f
   821  0073  2864               	goto	l1003
   822  0074                     l1005:	
   823  0074  3001               	movlw	1
   824  0075  00A8               	movwf	??___aldiv
   825  0076                     u495:	
   826  0076  1003               	clrc
   827  0077  0DAB               	rlf	___aldiv@quotient,f
   828  0078  0DAC               	rlf	___aldiv@quotient+1,f
   829  0079  0DAD               	rlf	___aldiv@quotient+2,f
   830  007A  0DAE               	rlf	___aldiv@quotient+3,f
   831  007B  0BA8               	decfsz	??___aldiv,f
   832  007C  2876               	goto	u495
   833  007D  0823               	movf	___aldiv@divisor+3,w
   834  007E  0227               	subwf	___aldiv@dividend+3,w
   835  007F  1D03               	skipz
   836  0080  288B               	goto	u505
   837  0081  0822               	movf	___aldiv@divisor+2,w
   838  0082  0226               	subwf	___aldiv@dividend+2,w
   839  0083  1D03               	skipz
   840  0084  288B               	goto	u505
   841  0085  0821               	movf	___aldiv@divisor+1,w
   842  0086  0225               	subwf	___aldiv@dividend+1,w
   843  0087  1D03               	skipz
   844  0088  288B               	goto	u505
   845  0089  0820               	movf	___aldiv@divisor,w
   846  008A  0224               	subwf	___aldiv@dividend,w
   847  008B                     u505:	
   848  008B  1C03               	skipc
   849  008C  289C               	goto	l1013
   850  008D  0820               	movf	___aldiv@divisor,w
   851  008E  02A4               	subwf	___aldiv@dividend,f
   852  008F  0821               	movf	___aldiv@divisor+1,w
   853  0090  1C03               	skipc
   854  0091  0F21               	incfsz	___aldiv@divisor+1,w
   855  0092  02A5               	subwf	___aldiv@dividend+1,f
   856  0093  0822               	movf	___aldiv@divisor+2,w
   857  0094  1C03               	skipc
   858  0095  0F22               	incfsz	___aldiv@divisor+2,w
   859  0096  02A6               	subwf	___aldiv@dividend+2,f
   860  0097  0823               	movf	___aldiv@divisor+3,w
   861  0098  1C03               	skipc
   862  0099  0F23               	incfsz	___aldiv@divisor+3,w
   863  009A  02A7               	subwf	___aldiv@dividend+3,f
   864  009B  142B               	bsf	___aldiv@quotient,0
   865  009C                     l1013:	
   866  009C  3001               	movlw	1
   867  009D                     u515:	
   868  009D  1003               	clrc
   869  009E  0CA3               	rrf	___aldiv@divisor+3,f
   870  009F  0CA2               	rrf	___aldiv@divisor+2,f
   871  00A0  0CA1               	rrf	___aldiv@divisor+1,f
   872  00A1  0CA0               	rrf	___aldiv@divisor,f
   873  00A2  3EFF               	addlw	-1
   874  00A3  1D03               	skipz
   875  00A4  289D               	goto	u515
   876  00A5  3001               	movlw	1
   877  00A6  02A9               	subwf	___aldiv@counter,f
   878  00A7  1D03               	btfss	3,2
   879  00A8  2874               	goto	l1005
   880  00A9                     l1017:	
   881  00A9  082A               	movf	___aldiv@sign,w
   882  00AA  1903               	btfsc	3,2
   883  00AB  28B7               	goto	l1021
   884  00AC  09AB               	comf	___aldiv@quotient,f
   885  00AD  09AC               	comf	___aldiv@quotient+1,f
   886  00AE  09AD               	comf	___aldiv@quotient+2,f
   887  00AF  09AE               	comf	___aldiv@quotient+3,f
   888  00B0  0AAB               	incf	___aldiv@quotient,f
   889  00B1  1903               	skipnz
   890  00B2  0AAC               	incf	___aldiv@quotient+1,f
   891  00B3  1903               	skipnz
   892  00B4  0AAD               	incf	___aldiv@quotient+2,f
   893  00B5  1903               	skipnz
   894  00B6  0AAE               	incf	___aldiv@quotient+3,f
   895  00B7                     l1021:	
   896  00B7  082E               	movf	___aldiv@quotient+3,w
   897  00B8  00A3               	movwf	?___aldiv+3
   898  00B9  082D               	movf	___aldiv@quotient+2,w
   899  00BA  00A2               	movwf	?___aldiv+2
   900  00BB  082C               	movf	___aldiv@quotient+1,w
   901  00BC  00A1               	movwf	?___aldiv+1
   902  00BD  082B               	movf	___aldiv@quotient,w
   903  00BE  00A0               	movwf	?___aldiv
   904  00BF  0008               	return
   905  00C0                     __end_of___aldiv:	
   906                           
   907                           	psect	text4
   908  01DE                     __ptext4:	
   909 ;; *************** function _timer_init *****************
   910 ;; Defined at:
   911 ;;		line 65 in file "uart.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;		None               void
   918 ;; Registers used:
   919 ;;		wreg
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0
   928 ;;      Totals:         0       0       0       0       0
   929 ;;Total ram usage:        0 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; Hardware stack levels required when called:    2
   932 ;; This function calls:
   933 ;;		Nothing
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           
   940                           ;psect for function _timer_init
   941  01DE                     _timer_init:	
   942                           
   943                           ;uart.c: 67: T1CON=0x31;
   944                           
   945                           ;incstack = 0
   946                           ; Regs used in _timer_init: [wreg]
   947  01DE  3031               	movlw	49
   948  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   949  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   950  01E1  0090               	movwf	16	;volatile
   951                           
   952                           ;uart.c: 68: TMR1H=0xCF;
   953  01E2  30CF               	movlw	207
   954  01E3  008F               	movwf	15	;volatile
   955                           
   956                           ;uart.c: 69: TMR1L=0x2C;
   957  01E4  302C               	movlw	44
   958  01E5  008E               	movwf	14	;volatile
   959                           
   960                           ;uart.c: 70: TMR1IE=1;
   961  01E6  1683               	bsf	3,5	;RP0=1, select bank1
   962  01E7  1303               	bcf	3,6	;RP1=0, select bank1
   963  01E8  140C               	bsf	12,0	;volatile
   964  01E9  0008               	return
   965  01EA                     __end_of_timer_init:	
   966                           
   967                           	psect	text5
   968  018A                     __ptext5:	
   969 ;; *************** function _lcd_init *****************
   970 ;; Defined at:
   971 ;;		line 168 in file "uart.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;		None               void
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, pclath, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0
   988 ;;      Totals:         0       0       0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:    4
   992 ;; This function calls:
   993 ;;		_lcd_cmnt
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _lcd_init
  1001  018A                     _lcd_init:	
  1002                           
  1003                           ;uart.c: 170: TRISD=0X00;
  1004                           
  1005                           ;incstack = 0
  1006                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1007  018A  1683               	bsf	3,5	;RP0=1, select bank1
  1008  018B  1303               	bcf	3,6	;RP1=0, select bank1
  1009  018C  0188               	clrf	8	;volatile
  1010                           
  1011                           ;uart.c: 171: PORTD=0X00;
  1012  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1013  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1014  018F  0188               	clrf	8	;volatile
  1015                           
  1016                           ;uart.c: 172: ADCON1=0X06;
  1017  0190  3006               	movlw	6
  1018  0191  1683               	bsf	3,5	;RP0=1, select bank1
  1019  0192  1303               	bcf	3,6	;RP1=0, select bank1
  1020  0193  009F               	movwf	31	;volatile
  1021                           
  1022                           ;uart.c: 174: lcd_cmnt(0x38);
  1023  0194  3038               	movlw	56
  1024  0195  120A  118A  21AB  120A  118A  	fcall	_lcd_cmnt
  1025                           
  1026                           ;uart.c: 175: lcd_cmnt(0x0c);
  1027  019A  300C               	movlw	12
  1028  019B  120A  118A  21AB  120A  118A  	fcall	_lcd_cmnt
  1029                           
  1030                           ;uart.c: 176: lcd_cmnt(0x01);
  1031  01A0  3001               	movlw	1
  1032  01A1  120A  118A  21AB  120A  118A  	fcall	_lcd_cmnt
  1033                           
  1034                           ;uart.c: 177: lcd_cmnt(0x80);
  1035  01A6  3080               	movlw	128
  1036  01A7  120A  118A  21AB   	fcall	_lcd_cmnt
  1037  01AA  0008               	return
  1038  01AB                     __end_of_lcd_init:	
  1039                           
  1040                           	psect	text6
  1041  01AB                     __ptext6:	
  1042 ;; *************** function _lcd_cmnt *****************
  1043 ;; Defined at:
  1044 ;;		line 179 in file "uart.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  cmnt            1    wreg     unsigned char 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  cmnt            1    7[BANK0 ] unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;		None               void
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         0       1       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         0       1       0       0       0
  1062 ;;Total ram usage:        1 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    3
  1065 ;; This function calls:
  1066 ;;		_delay
  1067 ;; This function is called by:
  1068 ;;		_lcd_init
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function _lcd_cmnt
  1074  01AB                     _lcd_cmnt:	
  1075                           
  1076                           ;incstack = 0
  1077                           ; Regs used in _lcd_cmnt: [wreg+status,2+status,0+pclath+cstack]
  1078                           ;lcd_cmnt@cmnt stored from wreg
  1079  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1080  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1081  01AD  00A7               	movwf	lcd_cmnt@cmnt
  1082                           
  1083                           ;uart.c: 181: PORTD=cmnt;
  1084  01AE  0827               	movf	lcd_cmnt@cmnt,w
  1085  01AF  0088               	movwf	8	;volatile
  1086                           
  1087                           ;uart.c: 182: RE0=0;
  1088  01B0  1009               	bcf	9,0	;volatile
  1089                           
  1090                           ;uart.c: 183: RE1=1;delay(10);RE1=0; ;
  1091  01B1  1489               	bsf	9,1	;volatile
  1092  01B2  300A               	movlw	10
  1093  01B3  00A0               	movwf	delay@x
  1094  01B4  3000               	movlw	0
  1095  01B5  00A1               	movwf	delay@x+1
  1096  01B6  120A  118A  2128   	fcall	_delay
  1097  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1098  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1099  01BB  1089               	bcf	9,1	;volatile
  1100  01BC  0008               	return
  1101  01BD                     __end_of_lcd_cmnt:	
  1102                           
  1103                           	psect	text7
  1104  0128                     __ptext7:	
  1105 ;; *************** function _delay *****************
  1106 ;; Defined at:
  1107 ;;		line 195 in file "uart.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  x               2    0[BANK0 ] int 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  j               2    5[BANK0 ] int 
  1112 ;;  i               2    3[BANK0 ] int 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;		None               void
  1115 ;; Registers used:
  1116 ;;		wreg, status,2
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         0       2       0       0       0
  1123 ;;      Locals:         0       4       0       0       0
  1124 ;;      Temps:          0       1       0       0       0
  1125 ;;      Totals:         0       7       0       0       0
  1126 ;;Total ram usage:        7 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    2
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_lcd_cmnt
  1133 ;;		_lcd_data
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _delay
  1139  0128                     _delay:	
  1140                           
  1141                           ;uart.c: 197: int i,j;
  1142                           ;uart.c: 198: for(i=0;i<=x;i++)
  1143                           
  1144                           ;incstack = 0
  1145                           ; Regs used in _delay: [wreg+status,2]
  1146  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1148  012A  01A3               	clrf	delay@i
  1149  012B  01A4               	clrf	delay@i+1
  1150  012C                     l154:	
  1151  012C  0821               	movf	delay@x+1,w
  1152  012D  3A80               	xorlw	128
  1153  012E  00A2               	movwf	??_delay
  1154  012F  0824               	movf	delay@i+1,w
  1155  0130  3A80               	xorlw	128
  1156  0131  0222               	subwf	??_delay,w
  1157  0132  1D03               	skipz
  1158  0133  2936               	goto	u435
  1159  0134  0823               	movf	delay@i,w
  1160  0135  0220               	subwf	delay@x,w
  1161  0136                     u435:	
  1162  0136  1C03               	btfss	3,0
  1163  0137  0008               	return
  1164                           
  1165                           ;uart.c: 199: {
  1166                           ;uart.c: 200: for(j=0;j<=x;j++)
  1167  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1169  013A  01A5               	clrf	delay@j
  1170  013B  01A6               	clrf	delay@j+1
  1171  013C                     l156:	
  1172  013C  0821               	movf	delay@x+1,w
  1173  013D  3A80               	xorlw	128
  1174  013E  00A2               	movwf	??_delay
  1175  013F  0826               	movf	delay@j+1,w
  1176  0140  3A80               	xorlw	128
  1177  0141  0222               	subwf	??_delay,w
  1178  0142  1D03               	skipz
  1179  0143  2946               	goto	u425
  1180  0144  0825               	movf	delay@j,w
  1181  0145  0220               	subwf	delay@x,w
  1182  0146                     u425:	
  1183  0146  1C03               	btfss	3,0
  1184  0147  2951               	goto	l973
  1185                           
  1186                           ;uart.c: 201: {}
  1187  0148  3001               	movlw	1
  1188  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1189  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1190  014B  07A5               	addwf	delay@j,f
  1191  014C  1803               	skipnc
  1192  014D  0AA6               	incf	delay@j+1,f
  1193  014E  3000               	movlw	0
  1194  014F  07A6               	addwf	delay@j+1,f
  1195  0150  293C               	goto	l156
  1196  0151                     l973:	
  1197  0151  3001               	movlw	1
  1198  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0154  07A3               	addwf	delay@i,f
  1201  0155  1803               	skipnc
  1202  0156  0AA4               	incf	delay@i+1,f
  1203  0157  3000               	movlw	0
  1204  0158  07A4               	addwf	delay@i+1,f
  1205  0159  292C               	goto	l154
  1206  015A                     __end_of_delay:	
  1207                           
  1208                           	psect	text8
  1209  015A                     __ptext8:	
  1210 ;; *************** function _isr *****************
  1211 ;; Defined at:
  1212 ;;		line 131 in file "uart.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;		None               void
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          5       0       0       0       0
  1229 ;;      Totals:         5       0       0       0       0
  1230 ;;Total ram usage:        5 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    1
  1233 ;; This function calls:
  1234 ;;		_uart_read
  1235 ;; This function is called by:
  1236 ;;		Interrupt level 1
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _isr
  1242  015A                     _isr:	
  1243                           
  1244                           ;uart.c: 133: if(TMR1IF)
  1245  015A  1C0C               	btfss	12,0	;volatile
  1246  015B  296C               	goto	i1l955
  1247                           
  1248                           ;uart.c: 134: {
  1249                           ;uart.c: 135: TMR1H=0xCF;
  1250  015C  30CF               	movlw	207
  1251  015D  008F               	movwf	15	;volatile
  1252                           
  1253                           ;uart.c: 136: TMR1L=0x2C;
  1254  015E  302C               	movlw	44
  1255  015F  008E               	movwf	14	;volatile
  1256                           
  1257                           ;uart.c: 138: if(count==8)
  1258  0160  0876               	movf	_count,w
  1259  0161  3A08               	xorlw	8
  1260  0162  1D03               	skipz
  1261  0163  2967               	goto	i1l951
  1262                           
  1263                           ;uart.c: 139: {
  1264                           ;uart.c: 140: count=0;
  1265  0164  01F6               	clrf	_count
  1266                           
  1267                           ;uart.c: 141: time_flag=1;
  1268  0165  01C3               	clrf	_time_flag
  1269  0166  0AC3               	incf	_time_flag,f
  1270  0167                     i1l951:	
  1271                           
  1272                           ;uart.c: 143: }
  1273                           ;uart.c: 144: count++;
  1274  0167  3001               	movlw	1
  1275  0168  00F1               	movwf	??_isr
  1276  0169  0871               	movf	??_isr,w
  1277  016A  07F6               	addwf	_count,f
  1278                           
  1279                           ;uart.c: 145: TMR1IF=0;
  1280  016B  100C               	bcf	12,0	;volatile
  1281  016C                     i1l955:	
  1282                           
  1283                           ;uart.c: 147: }
  1284                           ;uart.c: 148: if(RCIF)
  1285  016C  1E8C               	btfss	12,5	;volatile
  1286  016D  2975               	goto	i1l961
  1287                           
  1288                           ;uart.c: 149: {
  1289                           ;uart.c: 150: uart_read();
  1290  016E  120A  118A  21FD  120A  118A  	fcall	_uart_read
  1291                           
  1292                           ;uart.c: 151: recieved=1;
  1293  0173  01F7               	clrf	_recieved
  1294  0174  0AF7               	incf	_recieved,f
  1295  0175                     i1l961:	
  1296                           
  1297                           ;uart.c: 154: }
  1298                           ;uart.c: 155: if(TXIF)
  1299  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1301  0177  1E0C               	btfss	12,4	;volatile
  1302  0178  297E               	goto	i1l133
  1303                           
  1304                           ;uart.c: 156: {
  1305                           ;uart.c: 157: TXREG=transmision_msg;
  1306  0179  0879               	movf	_transmision_msg,w
  1307  017A  0099               	movwf	25	;volatile
  1308                           
  1309                           ;uart.c: 158: TXIE=0;
  1310  017B  1683               	bsf	3,5	;RP0=1, select bank1
  1311  017C  1303               	bcf	3,6	;RP1=0, select bank1
  1312  017D  120C               	bcf	12,4	;volatile
  1313  017E                     i1l133:	
  1314  017E  0875               	movf	??_isr+4,w
  1315  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0180  00FF               	movwf	127
  1317  0181  0874               	movf	??_isr+3,w
  1318  0182  008A               	movwf	10
  1319  0183  0873               	movf	??_isr+2,w
  1320  0184  0084               	movwf	4
  1321  0185  0E72               	swapf	(??_isr+1)^(0+-128),w
  1322  0186  0083               	movwf	3
  1323  0187  0EFE               	swapf	126,f
  1324  0188  0E7E               	swapf	126,w
  1325  0189  0009               	retfie
  1326  018A                     __end_of_isr:	
  1327                           
  1328                           	psect	intentry
  1329  0004                     __pintentry:	
  1330                           ;incstack = 0
  1331                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1332                           
  1333  0004                     interrupt_function:	
  1334  007E                     saved_w	set	btemp
  1335  0004  00FE               	movwf	btemp
  1336  0005  0E03               	swapf	3,w
  1337  0006  00F2               	movwf	??_isr+1
  1338  0007  0804               	movf	4,w
  1339  0008  00F3               	movwf	??_isr+2
  1340  0009  080A               	movf	10,w
  1341  000A  00F4               	movwf	??_isr+3
  1342  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1343  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1344  000D  087F               	movf	btemp+1,w
  1345  000E  00F5               	movwf	??_isr+4
  1346  000F  120A  118A  295A   	ljmp	_isr
  1347                           
  1348                           	psect	text9
  1349  01FD                     __ptext9:	
  1350 ;; *************** function _uart_read *****************
  1351 ;; Defined at:
  1352 ;;		line 105 in file "uart.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;		None               void
  1359 ;; Registers used:
  1360 ;;		wreg
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1366 ;;      Params:         0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0
  1368 ;;      Temps:          1       0       0       0       0
  1369 ;;      Totals:         1       0       0       0       0
  1370 ;;Total ram usage:        1 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_isr
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           
  1380                           ;psect for function _uart_read
  1381  01FD                     _uart_read:	
  1382                           
  1383                           ;uart.c: 108: rxmsg=RCREG;
  1384                           
  1385                           ;incstack = 0
  1386                           ; Regs used in _uart_read: [wreg]
  1387  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1388  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1389  01FF  081A               	movf	26,w	;volatile
  1390  0200  00F0               	movwf	??_uart_read
  1391  0201  0870               	movf	??_uart_read,w
  1392  0202  00F8               	movwf	_rxmsg
  1393  0203  0008               	return
  1394  0204                     __end_of_uart_read:	
  1395  007E                     btemp	set	126	;btemp
  1396  007E                     wtemp	set	126
  1397  007E                     wtemp0	set	126
  1398  0080                     wtemp1	set	128
  1399  0082                     wtemp2	set	130
  1400  0084                     wtemp3	set	132
  1401  0086                     wtemp4	set	134
  1402  0088                     wtemp5	set	136
  1403  007F                     wtemp6	set	127
  1404  007E                     ttemp	set	126
  1405  007E                     ttemp0	set	126
  1406  0081                     ttemp1	set	129
  1407  0084                     ttemp2	set	132
  1408  0087                     ttemp3	set	135
  1409  007F                     ttemp4	set	127
  1410  007E                     ltemp	set	126
  1411  007E                     ltemp0	set	126
  1412  0082                     ltemp1	set	130
  1413  0086                     ltemp2	set	134
  1414  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     19      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_uart_read

Critical Paths under _main in BANK0

    _main->_uart_init
    _uart_init->___aldiv
    _lcd_init->_lcd_cmnt
    _lcd_cmnt->_delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1167
                                             18 BANK0      1     1      0
                           _lcd_init
                         _timer_init
                          _uart_init
                         _uart_write
 ---------------------------------------------------------------------------------
 (1) _uart_write                                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            3     0      3     815
                                             15 BANK0      3     0      3
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     321
                           _lcd_cmnt
 ---------------------------------------------------------------------------------
 (2) _lcd_cmnt                                             1     1      0     321
                                              7 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                7     5      2     290
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0       0
                                              1 COMMON     5     5      0
                          _uart_read
 ---------------------------------------------------------------------------------
 (5) _uart_read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_cmnt
       _delay
   _timer_init
   _uart_init
     ___aldiv
   _uart_write

 _isr (ROOT)
   _uart_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      35       5       66.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3F      12        0.0%
ABS                  0      0      3F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Apr 16 13:20:21 2017

                        pc 0002                         fsr 0004                        l154 012C  
                      l156 013C                        l299 0043                        l973 0151  
                      l995 0054                        _GIE 005F                        _RE0 0048  
                      _RE1 0049                        u425 0146                        u505 008B  
                      u435 0136                        u515 009D                        u475 0068  
                      u495 0076                        _RX9 00C6                        _TX9 04C6  
                      _isr 015A                        fsr0 0004                        indf 0000  
             lcd_cmnt@cmnt 0027                       l1003 0064                       l1021 00B7  
                     l1013 009C                       l1005 0074                       l1017 00A9  
                     l1079 00DF                       ?_isr 0070                       _CREN 00C4  
                     _PEIE 005E                       _RCIE 0465                       _RCIF 0065  
                     _SPEN 00C7                       _TXIE 0464                       _TXEN 04C5  
                     _TXIF 0064                       _SYNC 04C4                       _main 00C0  
                     btemp 007E                       ltemp 007E                       start 0012  
                     ttemp 007E                       wtemp 007E                      ??_isr 0071  
          __end_of___aldiv 00C0                      _ADDEN 00C3                      ?_main 0070  
                    _T1CON 0010                      i1l133 017E                      i1l951 0167  
                    i1l961 0175                      i1l955 016C                      _RCREG 001A  
                    _TMR1H 000F                      _TMR1L 000E                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008                      _PORTE 0009  
                    _TRISB 0086                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      _delay 0128                      _count 0076  
                    _timer 0044                      _rxmsg 0078                      pclath 000A  
                    ltemp0 007E                      ltemp1 0082                      ltemp2 0086  
                    ltemp3 0080                      ttemp0 007E                      ttemp1 0081  
                    ttemp2 0084                      ttemp3 0087                      ttemp4 007F  
                    status 0003                      wtemp0 007E                      wtemp1 0080  
                    wtemp2 0082                      wtemp3 0084                      wtemp4 0086  
                    wtemp5 0088                      wtemp6 007F            __initialization 0015  
             __end_of_main 00F6                     ??_main 0032                     ?_delay 0020  
                   _ADCON1 009F                     _TMR1IE 0460                     _TMR1IF 0060  
                   _TRISC6 043E                     _TRISC7 043F           __end_of_lcd_cmnt 01BD  
         __end_of_lcd_init 01AB                  ??___aldiv 0028                     delay@i 0023  
                   delay@j 0025                     delay@x 0020                     saved_w 007E  
  __end_of__initialization 002D             __pcstackCOMMON 0070               __pidataBANK0 01CE  
            __end_of_delay 015A                    ??_delay 0022                 __pbssBANK0 0033  
               __pmaintext 00C0                 __pintentry 0004         __size_of_uart_init 0032  
       __size_of_uart_read 0007                  ?_lcd_cmnt 0070                  ?_lcd_init 0070  
          _transmision_msg 0079                    ___aldiv 0031                    __ptext1 01EA  
                  __ptext2 00F6                    __ptext3 0031                    __ptext4 01DE  
                  __ptext5 018A                    __ptext6 01AB                    __ptext7 0128  
                  __ptext8 015A                    __ptext9 01FD                    _lcd_msg 0045  
             __size_of_isr 0030           ___aldiv@dividend 0024        uart_write@write_msg 0021  
               ??_lcd_cmnt 0027                    clrloop0 01F6                 ??_lcd_init 0028  
     end_of_initialization 002D          __end_of_uart_init 0128          __end_of_uart_read 0204  
         ___aldiv@quotient 002B                 _uart_write 01EA                 _timer_init 01DE  
                _TXSTAbits 0098        start_initialization 0015                __end_of_isr 018A  
               init_fetch0 01BD                __pdataBANK0 0045                ?_uart_write 0070  
              ?_timer_init 0070                __pbssCOMMON 0076                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of_lcd_cmnt 0012          __size_of_lcd_init 0021  
                 ?___aldiv 0020             __size_of_delay 0032            ___aldiv@divisor 0020  
        interrupt_function 0004            ___aldiv@counter 0029        __size_of_uart_write 000B  
      __size_of_timer_init 000C                  clear_ram0 01F5                  _time_flag 0043  
                _uart_init 00F6                  _uart_read 01FD                 ?_uart_init 002F  
               ?_uart_read 0070           __size_of___aldiv 008F         uart_init@baud_rate 002F  
                 _lcd_cmnt 01AB                   _lcd_msg1 0033                   _lcd_init 018A  
            __size_of_main 0036                   _recieved 0077               ??_uart_write 0020  
             ??_timer_init 0020  uart_init@high_baud_select 0031                   init_ram0 01C1  
                 intlevel1 0000         __end_of_uart_write 01F5         __end_of_timer_init 01EA  
              ??_uart_init 0032                ??_uart_read 0070               ___aldiv@sign 002A  
